[CNullCheck]
<nodeType>GameObject/Class
<summary>Null検証クラス
<comment>オブジェクトがnullであるかどうかを検証するクラスです。
----------------------------------------
[CNullCheck::IsNull]
<nodeType>GameObject/MemberFunc
<summary>Null検証
<return:bool>このオブジェクトがNullである場合はTrueが返されます。
<comment>自身のオブジェクトがNullであるかどうかを調べます。
----------------------------------------
[CIDNameData]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>IDと名前のデータクラス
<comment>IDと名前をセットにしたデータです。
----------------------------------------
[CIDNameData::ID]
<nodeType>GameObject/MemberValue
<type>int
<summary>ID
<comment>
----------------------------------------
[CIDNameData::Name]
<nodeType>GameObject/MemberValue
<type>string
<summary>名前
<comment>
----------------------------------------
[CIDValueData]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>IDと値のデータクラス
<comment>IDと値、名前をセットにしたクラスです。
----------------------------------------
[CIDValueData::Value]
<nodeType>GameObject/MemberValue
<type>int
<summary>値
<comment>
----------------------------------------
[CSoundData]
<nodeType>GameObject/Class
<summary>サウンドデータ
<comment>
----------------------------------------
[CSoundData::FileName]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>サウンドファイル名
<comment>
----------------------------------------
[CSoundData::Volume]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>再生初期の音量
<comment>再生を開始した時点での音量です。変更された後の音量を取得する場合はハンドルを利用する必要があります。
----------------------------------------
[CSoundData::Pitch]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>再生初期の音程
<comment>再生を開始した時点での音程です。変更された後の音程を取得する場合はハンドルを利用する必要があります。
----------------------------------------
[CSoundData::Panpot]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>再生初期の左右位置
<comment>再生を開始した時点での左右位置です。変更された後の左右位置を取得する場合はハンドルを利用する必要があります。
----------------------------------------
[CSoundData::Handle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>ハンドル
<comment>素材クラスを経由して再生するのに必要となる識別番号です。
----------------------------------------
[CSoundData::Load]
<nodeType>GameObject/MemberFunc
<summary>読込
<return:void>
<p1:string fileName>ファイル名
<p2:int vol>音量（0〜255）
<p3:int pit>音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上
<p4:int pan>左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）
<comment>このサウンドオブジェクトに指定したサウンドを読み込みます。このメソッドのみ一般サウンドの音程が設定できます。
----------------------------------------
[CSoundData::Play]
<nodeType>GameObject/MemberFunc
<summary>再生
<return:void>
<p1:int playType>再生方法
<p2:bool oncePlay>一度きりの再生かどうか
<comment>このサウンドを非同期的に再生します。
----------------------------------------
[CSoundData::Stop]
<nodeType>GameObject/MemberFunc
<summary>停止
<return:void>
<comment>このサウンドを停止します。
----------------------------------------
[CSoundData::Pause]
<nodeType>GameObject/MemberFunc
<summary>一時停止
<return:void>
<comment>このサウンドを一時停止します。
----------------------------------------
[CSoundData::Resume]
<nodeType>GameObject/MemberFunc
<summary>再開
<return:void>
<p1:bool loopMode>ループ再生するかどうか
<comment>このサウンドを一時停止から再開させます。
----------------------------------------
[CSoundData::Dispose]
<nodeType>GameObject/MemberFunc
<summary>破棄
<return:void>
<comment>このサウンドを破棄してメモリの空き容量を確保します。
----------------------------------------
[CPoint]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>座標クラス
<comment>二次元座標を示すクラスです。
----------------------------------------
[CPoint::X]
<nodeType>GameObject/MemberValue
<type>int
<summary>X座標
<comment>
----------------------------------------
[CPoint::Y]
<nodeType>GameObject/MemberValue
<type>int
<summary>Y座標
<comment>
----------------------------------------
[CPoint::Set]
<nodeType>GameObject/MemberFunc
<summary>設定
<return:void>
<p1:int x>X座標
<p2:int y>Y座標
<comment>二次元座標を一括設定します。
----------------------------------------
[CPoint::IsEmpty]
<nodeType>GameObject/MemberFunc
<summary>原点検証
<return:bool>この座標が原点である場合はTrueが返されます。
<comment>原点 (0, 0) にあるかどうかを検証します。
----------------------------------------
[CSize]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>サイズクラス
<comment>二次元サイズを示すクラスです。
----------------------------------------
[CSize::Width]
<nodeType>GameObject/MemberValue
<type>int
<summary>幅
<comment>
----------------------------------------
[CSize::Height]
<nodeType>GameObject/MemberValue
<type>int
<summary>高さ
<comment>
----------------------------------------
[CSize::Set]
<nodeType>GameObject/MemberFunc
<summary>設定
<return:void>
<p1:int width>幅
<p2:int height>高さ
<comment>二次元サイズを一括設定します。
----------------------------------------
[CSize::IsEmpty]
<nodeType>GameObject/MemberFunc
<summary>ゼロサイズ検証
<return:bool>サイズがゼロである場合はTrueが返されます。
<comment>このサイズが 0x0 であるかどうかを検証します。
----------------------------------------
[CRectangle]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>矩形クラス
<comment>二次元空間上にある四角形を示すクラスです。
----------------------------------------
[CRectangle::Left]
<nodeType>GameObject/MemberValue
<type>int
<summary>左端
<comment>
----------------------------------------
[CRectangle::Top]
<nodeType>GameObject/MemberValue
<type>int
<summary>上端
<comment>
----------------------------------------
[CRectangle::Width]
<nodeType>GameObject/MemberValue
<type>int
<summary>幅
<comment>
----------------------------------------
[CRectangle::Height]
<nodeType>GameObject/MemberValue
<type>int
<summary>高さ
<comment>
----------------------------------------
[CRectangle::Set]
<nodeType>GameObject/MemberFunc
<summary>左上座標でセット
<return:void>
<p1:int left>左端
<p2:int top>上端
<p3:int width>幅
<p4:int height>高さ
<comment>左上座標とサイズを指定して矩形を一括設定します。
----------------------------------------
[CRectangle::SetByCorner]
<nodeType>GameObject/MemberFunc
<summary>四隅でセット
<return:void>
<p1:int left>左端
<p2:int top>上端
<p3:int right>右端
<p4:int bottom>下端
<comment>矩形の四隅座標を指定して矩形を一括設定します。
----------------------------------------
[CRectangle::Right]
<nodeType>GameObject/MemberFunc
<summary>右端
<return:int>右端座標が返されます。
<comment>
----------------------------------------
[CRectangle::Bottom]
<nodeType>GameObject/MemberFunc
<summary>下端
<return:int>下端座標が返されます。
<comment>
----------------------------------------
[CRectangle::PointContains]
<nodeType>GameObject/MemberFunc
<summary>点包含検証
<return:bool>指定した点がこの矩形内にある場合はTrue
<p1:int x>指定点のX座標
<p2:int y>指定点のY座標
<comment>指定した点座標が、この矩形内にあるかどうかを検証します。
----------------------------------------
[CCircle]
<nodeType>GameObject/Class
<summary>円クラス
<comment>二次元空間上にある円を示すクラスです。
----------------------------------------
[CCircle::Radius]
<nodeType>GameObject/MemberValue
<type>int
<summary>半径
<comment>
----------------------------------------
[CCircle::CenterX]
<nodeType>GameObject/MemberValue
<type>int
<summary>中心X座標
<comment>
----------------------------------------
[CCircle::CenterY]
<nodeType>GameObject/MemberValue
<type>int
<summary>中心Y座標
<comment>
----------------------------------------
[CCircle::Set]
<nodeType>GameObject/MemberFunc
<summary>設定
<return:void>
<p1:int x>中心X座標
<p2:int y>中心Y座標
<p3:int r>半径
<comment>中心と半径から一括設定します。
----------------------------------------
[CCircle::FromRectangle]
<nodeType>GameObject/MemberFunc
<summary>矩形から設定
<return:void>
<p1:const CRectangle& rect>矩形オブジェクト
<comment>与えられた矩形を基に短辺に接する円として一括設定します。
----------------------------------------
[CCircle::ToRectangle]
<nodeType>GameObject/MemberFunc
<summary>矩形に変換
<return:CRectangle>変換後の矩形オブジェクト
<comment>この円に外接する四角形を取得します。
----------------------------------------
[CCircle::PointContains]
<nodeType>GameObject/MemberFunc
<summary>点包含検証
<return:bool>指定した点がこの円の中にある場合はTrue
<p1:int x>指定点X座標
<p2:int y>指定点Y座標
<comment>指定した点座標が、この円の中にあるかどうかを検証します。
----------------------------------------
[CCircle::CircleContains]
<nodeType>GameObject/MemberFunc
<summary>円接触検証
<return:bool>指定した円がこの円に接触している場合はTrue
<p1:const CCircle& c>対象とする円
<comment>指定した円が、この円に接触しているかどうかを検証します。
----------------------------------------
[CRGBColor]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>RGBカラークラス
<comment>色を示すクラスです。
----------------------------------------
[CRGBColor::Red]
<nodeType>GameObject/MemberValue
<type>int
<summary>赤情報
<comment>0〜255までの値をとります。
----------------------------------------
[CRGBColor::Green]
<nodeType>GameObject/MemberValue
<type>int
<summary>緑情報
<comment>0〜255までの値をとります。
----------------------------------------
[CRGBColor::Blue]
<nodeType>GameObject/MemberValue
<type>int
<summary>青情報
<comment>0〜255までの値をとります。
----------------------------------------
[CRGBColor::Set]
<nodeType>GameObject/MemberFunc
<summary>一括設定
<return:void>
<p1:int r>赤
<p2:int g>緑
<p3:int b>青
<comment>３原色から色を設定します。
----------------------------------------
[CRGBColor::ToCode]
<nodeType>GameObject/MemberFunc
<summary>カラーコードへ変換
<return:int>カラーコード
<comment>フォント色や描画色としてセットできるカラーコードに変換します。
----------------------------------------
[CIntegerArray]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>配列クラス/整数型
<comment>整数型に限定された配列です。
----------------------------------------
[CIntegerArray::Add]
<nodeType>GameObject/MemberFunc
<summary>追加
<return:void>
<p1:int value>値
<comment>要素を追加します。
----------------------------------------
[CIntegerArray::Exists]
<nodeType>GameObject/MemberFunc
<summary>値検証
<return:bool>指定した値を含む場合はTrue
<p1:int value>値
<comment>指定した値がこの配列の中にあるかどうかを検証します。
----------------------------------------
[CIntegerArray::Count]
<nodeType>GameObject/MemberFunc
<summary>総数取得
<return:int>この配列の要素数
<comment>この配列の要素数を取得します。
----------------------------------------
[CIntegerArray::Get]
<nodeType>GameObject/MemberFunc
<summary>要素取得
<return:int>値
<p1:int index>インデックス
<comment>指定したインデックスの要素の値を取得します。
----------------------------------------
[CIntegerArray::Set]
<nodeType>GameObject/MemberFunc
<summary>要素設定
<return:void>
<p1:int index>インデックス
<p2:int value>値
<comment>指定したインデックスの要素の値を設定します。
----------------------------------------
[CIntegerArray::Insert]
<nodeType>GameObject/MemberFunc
<summary>挿入
<return:void>
<p1:int index>インデックス
<p2:int value>値
<comment>指定したインデックスに要素を挿入します。
----------------------------------------
[CIntegerArray::Delete]
<nodeType>GameObject/MemberFunc
<summary>削除
<return:void>
<p1:int index>インデックス
<comment>指定したインデックスの要素を削除します。
----------------------------------------
[CIntegerArray::Clear]
<nodeType>GameObject/MemberFunc
<summary>初期化
<return:void>
<comment>全要素を削除します。
----------------------------------------
[CStringArray]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>配列クラス/文字列型
<comment>文字列に限定された配列です。
----------------------------------------
[CStringArray::Add]
<nodeType>GameObject/MemberFunc
<summary>追加
<return:void>
<p1:string value>値
<comment>要素を追加します。
----------------------------------------
[CStringArray::Exists]
<nodeType>GameObject/MemberFunc
<summary>値検証
<return:bool>指定した値を含む場合はTrue
<p1:string value>値
<comment>指定した値がこの配列の中にあるかどうかを検証します。
----------------------------------------
[CStringArray::Count]
<nodeType>GameObject/MemberFunc
<summary>総数取得
<return:int>この配列の要素数
<comment>この配列の要素数を取得します。
----------------------------------------
[CStringArray::Get]
<nodeType>GameObject/MemberFunc
<summary>要素取得
<return:string>値
<p1:int index>インデックス
<comment>指定したインデックスの要素の値を取得します。
----------------------------------------
[CStringArray::Set]
<nodeType>GameObject/MemberFunc
<summary>要素設定
<return:void>
<p1:int index>インデックス
<p2:string value>値
<comment>指定したインデックスの要素の値を設定します。
----------------------------------------
[CStringArray::Insert]
<nodeType>GameObject/MemberFunc
<summary>挿入
<return:void>
<p1:int index>インデックス
<p2:string value>値
<comment>指定したインデックスに要素を挿入します。
----------------------------------------
[CStringArray::Delete]
<nodeType>GameObject/MemberFunc
<summary>削除
<return:void>
<p1:int index>インデックス
<comment>指定したインデックスの要素を削除します。
----------------------------------------
[CStringArray::Clear]
<nodeType>GameObject/MemberFunc
<summary>初期化
<return:void>
<comment>全要素を削除します。
----------------------------------------
[CSelfValueData]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>個別変数データクラス
<comment>各種個別変数の情報を格納するクラスです。
----------------------------------------
[CSelfValueData::Get]
<nodeType>GameObject/MemberFunc
<summary>個別変数取得
<return:CIDValueData*>個別変数のデータ
<p1:int ID>ID
<comment>IDを指定して個別変数の値データを取得します。
----------------------------------------
[CSelfValueData::Set]
<nodeType>GameObject/MemberFunc
<summary>個別変数の値を設定
<return:void>
<p1:int ID>ID
<p2:int val>値
<comment>IDを指定して個別変数に値を代入します。
----------------------------------------
[CDXLibWrapper::CIPv4Address]
<nodeType>GameObject/Class
<summary>IPアドレスクラス
<comment>IPv4対応のアドレスを格納するクラスです。
----------------------------------------
[CDXLibWrapper::CIPv4Address::Set]
<nodeType>GameObject/MemberFunc
<summary>IPアドレスを設定
<return:void>
<p1:int d1>１バイト目
<p2:int d2>２バイト目
<p3:int d3>３バイト目
<p4:int d4>４バイト目
<comment>IPアドレスを設定します。各バイトには 0〜255 の値を格納します。
----------------------------------------
[CDXLibWrapper::CIPv4Address::Get]
<nodeType>GameObject/MemberFunc
<summary>IPアドレスの一部を取得
<return:int>0〜255 の値
<p1:int d>取得するバイト位置 (0〜3)
<comment>このアドレスの指定した位置の数値を取得します。
----------------------------------------
[CDXLibWrapper::CIPv4Address::ToString]
<nodeType>GameObject/MemberFunc
<summary>IPアドレスの文字列取得
<return:string>[x.x.x.x] の形式で表されるIPアドレスの文字列
<comment>このアドレスが示す情報を一般的な表記法で文字列に変換します。
----------------------------------------
[CDXLibWrapper]
<nodeType>GameObject/Class
<summary>DXLibラッパークラス
<comment>DXライブラリを包含したクラスです。描画や入力を司ります。
----------------------------------------
[CDXLibWrapper::Offset]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>描画位置オフセット
<comment>ウィンドウの左上を基点とした、全体の描画位置のオフセットです。
----------------------------------------
[CDXLibWrapper::KeyInputResult]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>キー入力結果
<comment>入力系のメソッドにおいて、キー入力の結果が代入されます。
----------------------------------------
[CDXLibWrapper::RecvData]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>通信/取得データ
<comment>TCP/UDP接続の受信における取得データです。
----------------------------------------
[CDXLibWrapper::UDPRecvIP]
<nodeType>GameObject/MemberProperty
<type>CIPv4Address (読み取り専用)
<summary>UDP/送信元IPアドレス
<comment>UDP接続の受信における送信元のIPアドレスです。
----------------------------------------
[CDXLibWrapper::UDPRecvPortNum]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>UDP/受信ポート番号
<comment>UDP接続の受信において使われたポート番号です。
----------------------------------------
[CDXLibWrapper::Flash]
<nodeType>GameObject/MemberFunc
<summary>画面演出/フラッシュ
<return:void>
<p1:int color>色
<p2:int strength>強さ 0〜255
<p3:int speed>速さ
<p4:int count>回数
<comment>画面全体にフラッシュ効果をかけます。
----------------------------------------
[CDXLibWrapper::ShakeOne]
<nodeType>GameObject/MemberFunc
<summary>画面演出/単一振動
<return:void>
<p1:int strength>強さ
<comment>画面全体に減衰する振動効果をかけます。
----------------------------------------
[CDXLibWrapper::StartShake]
<nodeType>GameObject/MemberFunc
<summary>画面演出/持続振動開始
<return:void>
<p1:int strength>強さ
<comment>画面全体に持続する振動効果をかけます。
----------------------------------------
[CDXLibWrapper::StopShake]
<nodeType>GameObject/MemberFunc
<summary>画面演出/持続振動停止
<return:void>
<comment>持続する振動効果を停止します。
----------------------------------------
[CDXLibWrapper::DrawWindow]
<nodeType>GameObject/MemberFunc
<summary>応用/ウィンドウ描画
<return:void>
<p1:int hdl>システムグラフィックハンドル
<p2:int intX>表示位置X座標
<p3:int intY>表示位置Y座標
<p4:int intWidth>ウィンドウ幅
<p5:int intHeight>ウィンドウ高さ
<comment>指定領域にウィンドウを描画します。
----------------------------------------
[CDXLibWrapper::DrawCursorPanel]
<nodeType>GameObject/MemberFunc
<summary>応用/パネル型カーソル描画
<return:void>
<p1:int hdl>システムグラフィックハンドル
<p2:int intX>表示位置X座標
<p3:int intY>表示位置Y座標
<p4:int intWidth>パネル幅
<p5:int intHeight>パネル高さ
<comment>指定位置にパネル型のカーソルを描画します。
----------------------------------------
[CDXLibWrapper::DrawCursorArrow]
<nodeType>GameObject/MemberFunc
<summary>応用/矢印型カーソル描画
<return:void>
<p1:int hdl>システムグラフィックハンドル
<p2:int intX>表示位置X座標
<p3:int intY>表示位置Y座標
<p4:int intDir4>矢印の向き
<comment>指定位置に指定方向のカーソルを描画します。
----------------------------------------
[CDXLibWrapper::DrawPixel]
<nodeType>GameObject/MemberFunc
<summary>図形/点描画
<return:void>
<p1:int x>X座標
<p2:int y>Y座標
<p3:int color>カラーコード
<comment>指定座標に点を描画します。
----------------------------------------
[CDXLibWrapper::DrawLine]
<nodeType>GameObject/MemberFunc
<summary>図形/線描画
<return:void>
<p1:int sx>始点X座標
<p2:int sy>始点Y座標
<p3:int ex>終点X座標
<p4:int ey>終点Y座標
<p5:int color>カラーコード
<p6:int thickness = 1>太さ
<comment>指定座標の間に線を描画します。
----------------------------------------
[CDXLibWrapper::DrawTriangle]
<nodeType>GameObject/MemberFunc
<summary>図形/三角形描画
<return:void>
<p1:int ax>頂点1のX座標
<p2:int ay>頂点1のY座標
<p3:int bx>頂点2のX座標
<p4:int by>頂点2のY座標
<p5:int cx>頂点3のX座標
<p6:int cy>頂点3のY座標
<p7:int color>カラーコード
<p8:bool fill = true>塗りつぶすかどうか
<comment>指定した３つの頂点で三角形を描画します。
----------------------------------------
[CDXLibWrapper::DrawBox]
<nodeType>GameObject/MemberFunc
<summary>図形/4頂点で矩形描画
<return:void>
<p1:int left>左端
<p2:int top>上端
<p3:int right>右端
<p4:int bottom>下端
<p5:int color>カラーコード
<p6:bool fill = true>塗りつぶすかどうか
<p7:int thickness = 1>太さ
<comment>指定した４つの頂点で四角形を描画します。
----------------------------------------
[CDXLibWrapper::DrawRect]
<nodeType>GameObject/MemberFunc
<summary>図形/左上基点で矩形描画
<return:void>
<p1:int left>左端
<p2:int top>上端
<p3:int width>幅
<p4:int height>高さ
<p5:int color>カラーコード
<p6:bool fill = true>塗りつぶすかどうか
<p7:int thickness = 1>太さ
<comment>左上とサイズで四角形を描画します。
----------------------------------------
[CDXLibWrapper::DrawCircle]
<nodeType>GameObject/MemberFunc
<summary>図形/円描画
<return:void>
<p1:int x>中心X座標
<p2:int y>中心Y座標
<p3:int r>半径
<p4:int color>カラーコード
<p5:bool fill = true>塗りつぶすかどうか
<p6:int thickness = 1>太さ
<comment>指定した中心座標と半径で円を描画します。
----------------------------------------
[CDXLibWrapper::DrawOval]
<nodeType>GameObject/MemberFunc
<summary>図形/楕円描画
<return:void>
<p1:int x>中心X座標
<p2:int y>中心Y座標
<p3:int rx>X軸方向の半径
<p4:int ry>Y軸方向の半径
<p5:int color>カラーコード
<p6:bool fill = true>塗りつぶすかどうか
<p7:int thickness = 1>太さ
<comment>指定した中心座標と半径で楕円を描画します。
----------------------------------------
[CDXLibWrapper::DrawGraph]
<nodeType>GameObject/MemberFunc
<summary>画像描画
<return:void>
<p1:int Handle>画像ハンドル
<p2:int x>描画先の左上X座標
<p3:int y>描画先の左上Y座標
<p4:bool trans = true>透過するかどうか
<p5:bool turn = false>左右反転するかどうか
<comment>指定した座標に予め読み込んだ画像を描画します。
----------------------------------------
[CDXLibWrapper::DrawExtendGraph]
<nodeType>GameObject/MemberFunc
<summary>画像拡大描画
<return:void>
<p1:int Handle>画像ハンドル
<p2:int x>描画先の左上X座標
<p3:int y>描画先の左上Y座標
<p4:double xRate>X軸方向の拡大率 (1.0=等倍)
<p5:double yRate = 0.0F>Y軸方向の拡大率 (1.0=等倍)
<p6:bool trans = true>透過するかどうか
<comment>指定した座標に予め読み込んだ画像を拡大描画します。
----------------------------------------
[CDXLibWrapper::DrawRotaGraph]
<nodeType>GameObject/MemberFunc
<summary>画像回転描画
<return:void>
<p1:int Handle>画像ハンドル
<p2:int cx>描画先の中心X座標
<p3:int cy>描画先の中心Y座標
<p4:double angle>回転率 (弧度法/ラジアン単位)
<p5:double exRate = 1.0F>拡大率 (1.0=等倍)
<p6:bool trans = true>透過するかどうか
<p7:bool turn = false>左右反転するかどうか
<comment>指定した座標に予め読み込んだ画像を回転・拡大描画します。
----------------------------------------
[CDXLibWrapper::DrawRectGraph]
<nodeType>GameObject/MemberFunc
<summary>画像の一部を描画
<return:void>
<p1:int Handle>画像ハンドル
<p2:int sx>描画先の左上X座標
<p3:int sy>描画先の左上Y座標
<p4:int gx>画像上の左上X座標
<p5:int gy>画像上の左上Y座標
<p6:int width>抜き取る幅
<p7:int height>抜き取る高さ
<p8:bool trans = true>透過するかどうか
<p9:bool turn = false>左右反転するかどうか
<comment>指定した座標に予め読み込んだ画像の一部を描画します。
----------------------------------------
[CDXLibWrapper::DrawRectExtendGraph]
<nodeType>GameObject/MemberFunc
<summary>画像の一部を拡大描画
<return:void>
<p1:int Handle>画像ハンドル
<p2:int left>描画先の左上X座標
<p3:int top>描画先の左上Y座標
<p4:int width>描画先での幅
<p5:int height>描画先での高さ
<p6:int gx>画像上の左上X座標
<p7:int gy>画像上の左上Y座標
<p8:int rawWidth>画像上の抜き取る幅
<p9:int rawHeight>画像上の抜き取る高さ
<p10:bool trans = true>透過するかどうか
<comment>指定した座標に予め読み込んだ画像の一部を拡大描画します。
----------------------------------------
[CDXLibWrapper::DrawRectRotaGraph]
<nodeType>GameObject/MemberFunc
<summary>画像の一部を回転描画
<return:void>
<p1:int Handle>画像ハンドル
<p2:int cx>中心X座標
<p3:int cy>中心Y座標
<p4:int gx>画像上の左上X座標
<p5:int gy>画像上の左上Y座標
<p6:int rawWidth>画像上の抜き取る幅
<p7:int rawHeight>画像上の抜き取る高さ
<p8:double angle>回転率 (弧度法/ラジアン単位)
<p9:double exRate = 1.0F>拡大率 (1.0=等倍)
<p10:bool trans = true>透過するかどうか
<p11:bool turn = false>左右反転するかどうか
<comment>指定した座標に予め読み込んだ画像の一部を回転・拡大描画します。
----------------------------------------
[CDXLibWrapper::DrawModifiedGraph]
<nodeType>GameObject/MemberFunc
<summary>画像自由変形描画
<return:void>
<p1:int Handle>画像ハンドル
<p2:int leftTopX>左上X座標
<p3:int leftTopY>左上Y座標
<p4:int rightTopX>右上X座標
<p5:int rightTopY>右上Y座標
<p6:int rightBottomX>右下X座標
<p7:int rightBottomY>右下Y座標
<p8:int leftBottomX>左下X座標
<p9:int leftBottomY>左下Y座標
<p10:bool trans = true>透過するかどうか
<comment>指定した座標に予め読み込んだ画像を自由変形描画します。
----------------------------------------
[CDXLibWrapper::DrawBlendGraph]
<nodeType>GameObject/MemberFunc
<summary>画像合成描画
<return:void>
<p1:int x>左上X座標
<p2:int y>左上Y座標
<p3:int Handle>画像ハンドル
<p4:bool trans>透過するかどうか
<p5:string blendFileName>合成用のパターン画像ファイル名
<p6:int borderParam>合成度合い（0=完全な画像で描画、255=完全に合成して描画）
<comment>指定した座標に予め読み込んだ画像と、合成用のパターン画像をブレンドして描画します。これはトランジションと同様の仕組みで、画像を徐々にワイプさせるような描画に用いられます。
----------------------------------------
[CDXLibWrapper::DrawString]
<nodeType>GameObject/MemberFunc
<summary>文字列描画/左
<return:void>
<p1:int x>左上X座標
<p2:int y>左上Y座標
<p3:int fontID>フォントID
<p4:int color>カラーコード
<p5:const TCHAR* text>文字列
<comment>指定した座標に文字列を左揃えで描画します。
----------------------------------------
[CDXLibWrapper::DrawStringC]
<nodeType>GameObject/MemberFunc
<summary>文字列描画/中央
<return:void>
<p1:int centerX>中心X座標
<p2:int y>Y座標
<p3:int fontID>フォントID
<p4:int color>カラーコード
<p5:const TCHAR* text>文字列
<comment>指定した座標に文字列を中央揃えで描画します。
----------------------------------------
[CDXLibWrapper::DrawStringR]
<nodeType>GameObject/MemberFunc
<summary>文字列描画/右
<return:void>
<p1:int right>右上X座標
<p2:int y>右上Y座標
<p3:int fontID>フォントID
<p4:int color>カラーコード
<p5:const TCHAR* text>文字列
<comment>指定した座標に文字列を右揃えで描画します。
----------------------------------------
[CDXLibWrapper::DrawStringAlign]
<nodeType>GameObject/MemberFunc
<summary>文字列描画/指定揃え
<return:void>
<p1:int x>X座標
<p2:int y>Y座標
<p3:int align>文字列を揃える位置
<p4:int fontID>フォントID
<p5:int color>カラーコード
<p6:const TCHAR* text>文字列
<comment>指定した座標に文字列を指定した位置に揃えて描画します。
----------------------------------------
[CDXLibWrapper::GetGraphSize]
<nodeType>GameObject/MemberFunc
<summary>画像サイズ取得
<return:CSize>画像のサイズ
<p1:int Handle>画像ハンドル
<comment>指定した画像の大きさを取得します。
----------------------------------------
[CDXLibWrapper::SetDrawBlendMode]
<nodeType>GameObject/MemberFunc
<summary>画像合成方法設定
<return:void>
<p1:int mode>列挙体：画像合成方法 (-1で通常描画に戻す)
<p2:int param>設定値 (0〜255)
<comment>画像の合成方法を設定します。
----------------------------------------
[CDXLibWrapper::RestoreDrawBlendMode]
<nodeType>GameObject/MemberFunc
<summary>画像合成方法復元
<return:void>
<comment>画像の合成方法を前の設定に戻します。一つ前の情報を用いて再設定されるため、二回続けて実行すると元に戻ります。
----------------------------------------
[CDXLibWrapper::SetDrawBright]
<nodeType>GameObject/MemberFunc
<summary>描画輝度設定
<return:void>
<p1:int r>赤 (0〜255)
<p2:int g>緑 (0〜255)
<p3:int b>青 (0〜255)
<comment>描画輝度を一時的に変更します。すべてを255にすると通常通りの描画になります。次のフレームではシーンの標準輝度に戻されます。
----------------------------------------
[CDXLibWrapper::ResetDrawArea]
<nodeType>GameObject/MemberFunc
<summary>描画範囲解除
<return:void>
<comment>描画の範囲制限を解除します。
----------------------------------------
[CDXLibWrapper::SetDrawArea]
<nodeType>GameObject/MemberFunc
<summary>描画範囲設定
<return:void>
<p1:int left>左端
<p2:int top>上端
<p3:int right>右端
<p4:int bottom>下端
<comment>四隅を指定して描画可能な領域をセットします。
----------------------------------------
[CDXLibWrapper::GetDrawStringSize]
<nodeType>GameObject/MemberFunc
<summary>文字列描画/サイズ検証
<return:CSize>描画サイズ
<p1:int fontID>フォントID
<p2:const TCHAR* text>文字列
<comment>指定した文字列を描画したときのサイズを検証します。
----------------------------------------
[CDXLibWrapper::GetColor]
<nodeType>GameObject/MemberFunc
<summary>カラーコード取得
<return:int>カラーコード
<p1:int r>赤 (0〜255)
<p2:int g>緑 (0〜255)
<p3:int b>青 (0〜255)
<comment>３色の強さを指定してカラーコードを取得します。
----------------------------------------
[CDXLibWrapper::PlayVideo]
<nodeType>GameObject/MemberFunc
<summary>動画再生
<return:void>
<p1:string fileName>ファイル名
<p2:int exRate>拡大率 (等倍=100)
<p3:bool canCancel>キャンセルできるようにするかどうか
<comment>指定した動画を再生します。コーデックがインストールされていない環境では再生できない場合があります。
----------------------------------------
[CDXLibWrapper::PlayMovieToGraph]
<nodeType>GameObject/MemberFunc
<summary>動画像を再生
<return:void>
<p1:int Handle>動画像ハンドル
<comment>「素材管理：グラフィック」によって開かれた動画の再生を開始します。再生された動画は画像と同様の描画方法によって画面に反映できます。
----------------------------------------
[CDXLibWrapper::PauseMovieToGraph]
<nodeType>GameObject/MemberFunc
<summary>動画像を一時停止
<return:void>
<p1:int Handle>動画像ハンドル
<comment>「素材管理：グラフィック」によって開かれた動画の再生を一停止します。
----------------------------------------
[CDXLibWrapper::SeekMovieToGraph]
<nodeType>GameObject/MemberFunc
<summary>動画像の再生位置変更
<return:void>
<p1:int Handle>動画像ハンドル
<p2:int timeMS>再生位置ミリ秒
<comment>「素材管理：グラフィック」によって開かれた動画の再生位置を変更します。
----------------------------------------
[CDXLibWrapper::TellMovieToGraph]
<nodeType>GameObject/MemberFunc
<summary>動画像の再生位置取得
<return:int>再生位置ミリ秒
<p1:int Handle>動画像ハンドル
<comment>「素材管理：グラフィック」によって開かれた動画の再生位置を取得します。
----------------------------------------
[CDXLibWrapper::GetMovieStateToGraph]
<nodeType>GameObject/MemberFunc
<summary>動画像の再生状態取得
<return:int>停止している場合は０、再生されている場合は１
<p1:int Handle>動画像ハンドル
<comment>「素材管理：グラフィック」によって開かれた動画の再生状態を取得します。
----------------------------------------
[CDXLibWrapper::GetJoypadNum]
<nodeType>GameObject/MemberFunc
<summary>ジョイパッド/総数取得
<return:int>接続されているジョイパッドの総数
<comment>現在接続されているジョイパッドの数を取得します。
----------------------------------------
[CDXLibWrapper::GetJoypadInputState]
<nodeType>GameObject/MemberFunc
<summary>ジョイパッド/入力状態取得
<return:int>入力ボタン情報 (AND演算で判定)
<p1:int playerNum>プレイヤー番号 (1〜)
<comment>指定したプレイヤーのジョイパッドの入力状態を取得します。
----------------------------------------
[CDXLibWrapper::GetJoypadAnalogInput]
<nodeType>GameObject/MemberFunc
<summary>ジョイパッド/アナログ入力状態取得
<return:CPoint>アナログ入力情報
<p1:int playerNum>プレイヤー番号 (1〜)
<comment>指定したプレイヤーのジョイパッドのアナログ的な入力機構の状態を取得します。
----------------------------------------
[CDXLibWrapper::StartJoypadVibration]
<nodeType>GameObject/MemberFunc
<summary>ジョイパッド/振動開始
<return:void>
<p1:int playerNum>プレイヤー番号 (1〜)
<p2:int power>強さ
<p3:int time>時間
<comment>指定したプレイヤーのジョイパッドの振動を開始します。
----------------------------------------
[CDXLibWrapper::StopJoypadVibration]
<nodeType>GameObject/MemberFunc
<summary>ジョイパッド/振動停止
<return:void>
<p1:int playerNum>プレイヤー番号 (1〜)
<comment>指定したプレイヤーのジョイパッドの振動を停止します。
----------------------------------------
[CDXLibWrapper::SetMouseDispFlag]
<nodeType>GameObject/MemberFunc
<summary>マウス/カーソル表示切替
<return:void>
<p1:bool flag>マウスカーソルを表示するかどうか
<comment>マウスカーソルを表示するかどうかを設定します。これはあくまでもウィンドウ内でのみ有効です。
----------------------------------------
[CDXLibWrapper::GetMousePoint]
<nodeType>GameObject/MemberFunc
<summary>マウス/カーソル位置取得
<return:CPoint>マウスカーソル位置情報
<comment>
----------------------------------------
[CDXLibWrapper::SetMousePoint]
<nodeType>GameObject/MemberFunc
<summary>マウス/カーソル位置設定
<return:void>
<p1:int x>X座標
<p2:int y>Y座標
<comment>
----------------------------------------
[CDXLibWrapper::GetMouseInput]
<nodeType>GameObject/MemberFunc
<summary>マウス/ボタン入力状態取得
<return:int>マウスボタン入力状態 (AND演算で判定)
<comment>
----------------------------------------
[CDXLibWrapper::GetMouseWheelRotVol]
<nodeType>GameObject/MemberFunc
<summary>マウス/ホイール量取得
<return:int>マウスホイール量 (＋−で上下を示す)
<comment>
----------------------------------------
[CDXLibWrapper::KeyInputString]
<nodeType>GameObject/MemberFunc
<summary>入力/文字列入力受付
<return:string>入力された文字列
<p1:int x>表示X座標
<p2:int y>表示Y座標
<p3:int maxCharLength>最大バイト数 (全角文字を２バイトと数える)
<p4:bool allowCancel>ESCキーでキャンセルできるようにするかどうか
<comment>画面上に入力窓を生成し、文字列のユーザー入力を受け付けます。操作の結果は[キー入力結果]に代入されます。1=正常終了, 2=キャンセル, -1=エラー
----------------------------------------
[CDXLibWrapper::KeyInputSingleCharString]
<nodeType>GameObject/MemberFunc
<summary>入力/半角文字列入力受付
<return:string>入力された文字列
<p1:int x>表示X座標
<p2:int y>表示Y座標
<p3:int maxCharLength>最大バイト数
<p4:bool allowCancel>ESCキーでキャンセルできるようにするかどうか
<comment>画面上に入力窓を生成し、半角文字列のユーザー入力を受け付けます。操作の結果は[キー入力結果]に代入されます。1=正常終了, 2=キャンセル, -1=エラー
----------------------------------------
[CDXLibWrapper::KeyInputNumber]
<nodeType>GameObject/MemberFunc
<summary>入力/数値入力受付
<return:int>入力された数値。キャンセルされたときは最大値＋１、エラーが発生したときは最小値−１の値が返されます。
<p1:int x>表示X座標
<p2:int y>表示Y座標
<p3:int min>最小値
<p4:int max>最大値
<p5:bool allowCancel>ESCキーでキャンセルできるようにするかどうか
<comment>画面上に入力窓を生成し、数値のユーザー入力を受け付けます。
----------------------------------------
[CDXLibWrapper::SetKeyInputStringColor]
<nodeType>GameObject/MemberFunc
<summary>入力/ユーザー入力周りの色設定
<return:void>
<p1:const TCHAR* param>パラメーター
<comment>この関数は引数が多いため便宜的に引数を文字列（区切り記号は ;）として取ります。1. 入力文字列の色。2. IME非使用時のカーソル色。3. IME使用時の入力文字列の周りの色。4. IME使用時のカーソル色。5. IME使用時の変換文字列の下線色。6. IME使用時の選択対象の変換候補文字列の色。7. IME使用時の入力モード表示の色。8. 入力文字列の縁色。9. IME使用時の選択対象の変換候補文字列の縁色。10. IME使用時の入力モード表示の縁色。11. IME使用時の変換候補ウィンドウの縁色。12. IME使用時の変換候補ウィンドウの背景色。13. 入力文字列の選択部分の周りの色。14. 入力文字列の選択部分の色。15. 入力文字列の選択部分の縁色。16. IME使用時の入力文字列の色。17. IME使用時の入力文字列の縁色。
----------------------------------------
[CDXLibWrapper::GetNowCount]
<nodeType>GameObject/MemberFunc
<summary>ミリ秒時刻取得
<return:int>コンピューターが起動してから経過したミリ秒数
<comment>一般的な時刻とは異なります。通常は差分をとって経過秒数を計算するのに使います。
----------------------------------------
[CDXLibWrapper::SaveDrawScreenToPNG]
<nodeType>GameObject/MemberFunc
<summary>スクリーンショット撮影
<return:void>
<p1:int leftTopX>対象領域の左上X座標
<p2:int leftTopY>対象領域の左上Y座標
<p3:int rightBottomX>対象領域の右下X座標
<p4:int rightBottomY>対象領域の右下Y座標
<p5:string fileName>ファイル名
<comment>現在の画面をPNG形式で出力します。
----------------------------------------
[CDXLibWrapper::CheckHandleAsyncLoad]
<nodeType>GameObject/MemberFunc
<summary>非同期読込の状態確認
<return:int>TRUE=非同期読み込みをしている  FALSE=読み込み完了  -1=エラー
<p1:int handle>ハンドル
<comment>指定したハンドルの非同期読み込みが継続しているかどうかを調べます。
----------------------------------------
[CDXLibWrapper::GetASyncLoadNum]
<nodeType>GameObject/MemberFunc
<summary>非同期読込の処理数取得
<return:int>現在非同期読み込みをしている処理の総数
<comment>現在行われている非同期読み込みの処理数を取得します。
----------------------------------------
[CDXLibWrapper::FileRead_open]
<nodeType>GameObject/MemberFunc
<summary>ファイル/テキスト読込開始
<return:int>ファイルハンドルです。失敗した場合は -1 が返されます。
<p1:string fileName>ファイル名
<comment>指定したテキストファイルを開きます。リソースを占有するので使い終わったら必ず閉じる必要があります。
----------------------------------------
[CDXLibWrapper::FileRead_close]
<nodeType>GameObject/MemberFunc
<summary>ファイル/テキスト読込終了
<return:void>
<p1:int handle>ファイルハンドル
<comment>指定したテキストファイルを閉じます。
----------------------------------------
[CDXLibWrapper::FileRead_gets]
<nodeType>GameObject/MemberFunc
<summary>ファイル/テキスト１行読込
<return:string>読み込んだ１行分のテキスト (改行を含まない)
<p1:int handle>ファイルハンドル
<comment>開いているテキストファイルから次の１行を読み込みます。
----------------------------------------
[CDXLibWrapper::FileRead_getc]
<nodeType>GameObject/MemberFunc
<summary>ファイル/テキスト１文字読込
<return:int>読み込んだ１文字を示す文字コード。失敗した場合は -1 が返されます。
<p1:int handle>ファイルハンドル
<comment>開いているテキストファイルから次の１文字を読み込みます。
----------------------------------------
[CDXLibWrapper::FileRead_eof]
<nodeType>GameObject/MemberFunc
<summary>ファイル/終端検証
<return:bool>ファイルの終端に達している場合はTrue
<p1:int handle>ファイルハンドル
<comment>開いているテキストファイルが終端まで読み終えたかどうかを調べます。
----------------------------------------
[CDXLibWrapper::ConnectNetWork]
<nodeType>GameObject/MemberFunc
<summary>TCP/他マシンへ接続
<return:int>-1:エラー  0以上:TCPネットワークハンドル
<p1:CIPv4Address ip>接続先のIPアドレス
<p2:int portNum>ポート番号
<comment>LANやインターネット等で繋がっている他のマシンとの通信を確立します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::CloseNetWork]
<nodeType>GameObject/MemberFunc
<summary>TCP/接続終了
<return:int>-1:エラー  0:成功
<p1:int handle>TCPネットワークハンドル
<comment>接続を切断し、データの送受信を終了します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::PreparationListenNetWork]
<nodeType>GameObject/MemberFunc
<summary>TCP/接続受付開始
<return:int>-1:エラー  0:成功
<p1:int portNum>ポート番号
<comment>自分のマシンが他のマシンからの接続を受け付ける状態にします。処理は停止せずにバックグラウンドで受け付けます。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::StopListenNetWork]
<nodeType>GameObject/MemberFunc
<summary>TCP/接続受付終了
<return:int>-1:エラー  0:成功
<comment>他のマシンから接続を受け付けている状態を解除します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::NetWorkSend]
<nodeType>GameObject/MemberFunc
<summary>TCP/データ送信
<return:int>-1:エラー  0:成功
<p1:int handle>TCPネットワークハンドル
<p2:const TCHAR* data>送信データ文字列
<comment>接続先のマシンにデータを送信します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::GetNetWorkDataLength]
<nodeType>GameObject/MemberFunc
<summary>TCP/受信データの一時記憶バッファサイズ取得
<return:int>-1:エラー  0以上:受信データの一時記憶バッファサイズ（バイト単位）
<p1:int handle>TCPネットワークハンドル
<comment>接続先マシンから送られてきたデータを一時的に記憶する内部バッファにあるデータサイズを取得します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::GetNetWorkSendDataLength]
<nodeType>GameObject/MemberFunc
<summary>TCP/未送信データサイズ取得
<return:int>-1:エラー  0以上:未送信のデータサイズ（バイト単位）
<p1:int handle>TCPネットワークハンドル
<comment>データ送信関数で実行してもすぐに送信されない場合があります。その場合に一時的に記憶される内部バッファのデータサイズを取得します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::NetWorkRecv]
<nodeType>GameObject/MemberFunc
<summary>TCP/受信データの一時記憶バッファデータ取得
<return:int>-1:エラー  0:成功
<p1:int handle>TCPネットワークハンドル
<p2:int length>取得するデータサイズ（バイト単位）
<comment>接続先から受信したデータを取得し、一時記憶バッファから削除します。実際に取得されたデータは [通信/受信データ] プロパティで取得できます。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::NetWorkRecvToPeek]
<nodeType>GameObject/MemberFunc
<summary>TCP/受信データの一時記憶バッファデータ先読み
<return:int>-1:エラー  0:成功
<p1:int handle>TCPネットワークハンドル
<p2:int length>取得するデータサイズ（バイト単位）
<comment>接続先から受信したデータを取得しますが、一時記憶バッファからは削除しません。実際に取得されたデータは [通信/受信データ] プロパティで取得できます。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::GetNewAcceptNetWork]
<nodeType>GameObject/MemberFunc
<summary>TCP/新規接続ハンドル取得
<return:int>-1:新規接続なし  0以上:TCPネットワークハンドル
<comment>接続受付状態のとき、新たに確立された接続先を示すネットワークハンドルを取得します。ハンドルの取得は一度しか行えません。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::GetLostNetWork]
<nodeType>GameObject/MemberFunc
<summary>TCP/新規切断ハンドル取得
<return:int>-1:新規切断なし  0以上:TCPネットワークハンドル
<comment>通信エラーや接続先による通信切断等により、新たに切断された接続先を示すネットワークハンドルを取得します。ハンドルの取得は一度しか行えません。ここでハンドルが得られた場合は、自分側のマシンも明示的に切断処理を行う必要があります。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::GetNetWorkAcceptState]
<nodeType>GameObject/MemberFunc
<summary>TCP/接続状態取得
<return:int>FALSE:接続されていない  TRUE:接続されている
<p1:int handle>TCPネットワークハンドル
<comment>指定した接続先マシンと現在接続状態にあるかどうかを検証します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::GetNetWorkIP]
<nodeType>GameObject/MemberFunc
<summary>TCP/接続先IPアドレス取得
<return:CIPv4Address>接続先のIPアドレス
<p1:int handle>TCPネットワークハンドル
<comment>接続されている相手側のマシンのアドレスを取得します。一度切断されてもハンドルを用いてアドレスを取得することはできるため、再接続を試行する場合等に使用します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::MakeUDPSocket]
<nodeType>GameObject/MemberFunc
<summary>UDP/通信ソケット作成
<return:int>-1:エラー  0以上:UDPソケットハンドル
<p1:int recvPortNum>受信ポート番号
<comment>UDP通信を使用するためのソケットを作成します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::DeleteUDPSocket]
<nodeType>GameObject/MemberFunc
<summary>UDP/通信ソケット削除
<return:int>-1:エラー  0:成功
<p1:int UDPHandle>UDPソケットハンドル
<comment>UDP通信で使用するソケットを削除します。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::NetWorkSendUDP]
<nodeType>GameObject/MemberFunc
<summary>UDP/データ送信
<return:int>-3:送信準備が未完了  -2:送信データが大きすぎる  -1:エラー  0以上:送信データサイズ（バイト単位）
<p1:int UDPHandle>UDPソケットハンドル
<p2:CIPv4Address sendIP>送信先IPアドレス
<p3:int sendPortNum>送信先のポート番号
<p4:const TCHAR* data>送信データ文字列
<comment>宛先にデータを送信します。UDPの仕組みの関係で、送信サイズは500バイト以内にすることが推奨されています。また、1024バイト以上はゲームプログラムの関係で送れません。エラーが発生した場合は一切データは送信されないので、再度試行する必要があります。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::NetWorkRecvUDP]
<nodeType>GameObject/MemberFunc
<summary>UDP/データ取得
<return:int>-3:受信データなし  -2:受信データサイズが大きすぎる  -1:エラー  0以上:受信データサイズ（バイト単位）
<p1:int UDPHandle>UDPソケットハンドル
<p2:bool peekMode>受信データを一時記憶バッファに残したままにするかどうか
<comment>UDP通信で受信したデータを一時記憶バッファから取り出します。実際に取得されたデータは [通信/受信データ] プロパティで取得できます。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDXLibWrapper::CheckNetWorkRecvUDP]
<nodeType>GameObject/MemberFunc
<summary>UDP/受信チェック
<return:int>-1:エラー  FALSE:受信データなし  TRUE:受信データあり
<p1:int UDPHandle>UDPソケットハンドル
<comment>UDP通信でデータを受信したかどうかを検証します。受信データがある場合は別途取得処理を呼び出す必要があります。使用方法の詳細はDXライブラリのリファレンスマニュアルをご覧下さい。
----------------------------------------
[CDatabase::CAddonData]
<nodeType>GameObject/Class
<parent>CIDValueData
<summary>アドオン情報
<comment>
----------------------------------------
[CDatabase::CAddonData::Type]
<nodeType>GameObject/MemberValue
<type>int
<summary>アドオン種別
<comment>
----------------------------------------
[CDatabase::CDBCell::CDBIDValues]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>ID/値リストのセルクラス
<comment>IDと値をペアにしたリストのセルです。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::Exists]
<nodeType>GameObject/MemberFunc
<summary>既存IDの検証
<return:bool>存在する場合はTrue
<p1:int id>ID
<comment>指定したIDがリスト内に存在するかどうかを調べます。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::Count]
<nodeType>GameObject/MemberFunc
<summary>総数取得
<return:int>IDの個数
<comment>リストの要素数を取得します。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::Add]
<nodeType>GameObject/MemberFunc
<summary>追加
<return:void>
<p1:int id>ID
<p2:int val>値
<comment>IDと値のペアをこのセルに追加します。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::Insert]
<nodeType>GameObject/MemberFunc
<summary>挿入
<return:void>
<p1:int id>ID
<p2:int val>値
<p3:int index>挿入インデックス
<comment>このセルの指定したインデックスにIDと値のペアを挿入します。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::Delete]
<nodeType>GameObject/MemberFunc
<summary>削除
<return:void>
<p1:int index>インデックス
<comment>このセルの指定したインデックスの要素を削除します。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::Clear]
<nodeType>GameObject/MemberFunc
<summary>全削除
<return:void>
<comment>このセルの情報をすべて削除します。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::Get]
<nodeType>GameObject/MemberFunc
<summary>取得
<return:CIDValueData*>IDと値のデータ
<p1:int index>インデックス
<comment>このセルの指定したインデックスの要素を取得します。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::GetValue]
<nodeType>GameObject/MemberFunc
<summary>値取得
<return:int>IDに対応する値
<p1:int id>ID
<comment>このセルの指定したIDに対応する値を取得します。存在しない場合はエラーとなります。
----------------------------------------
[CDatabase::CDBCell::CDBIDValues::SetValue]
<nodeType>GameObject/MemberFunc
<summary>値設定
<return:void>
<p1:int id>設定する要素のID
<p2:int val>設定値
<comment>このセルの指定したIDに対応する値を設定します。存在しない場合はエラーとなります。
----------------------------------------
[CDatabase::CDBCell::CDBAddons]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>アドオンセルクラス
<comment>アドオンを格納するためのセルです。
----------------------------------------
[CDatabase::CDBCell::CDBAddons::Count]
<nodeType>GameObject/MemberFunc
<summary>総数取得
<return:int>アドオン総数
<comment>アドオン数を取得します。
----------------------------------------
[CDatabase::CDBCell::CDBAddons::Get]
<nodeType>GameObject/MemberFunc
<summary>取得
<return:CAddonData>アドオン単体情報
<p1:int index>インデックス
<comment>このセルの指定したインデックスの要素を取得します。変更は反映されません。
----------------------------------------
[CDatabase::CDBCell]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>セルクラス
<comment>データベースのセル単体を管理するクラスです。
----------------------------------------
[CDatabase::CDBCell::Init]
<nodeType>GameObject/MemberFunc
<summary>初期化
<return:void>
<comment>セル内のデータを初期状態に戻します。
----------------------------------------
[CDatabase::CDBCell::ToString]
<nodeType>GameObject/MemberFunc
<summary>文字列化
<return:string>文字列化されたセル内のデータ
<comment>セル内のデータを文字列にして返します。
----------------------------------------
[CDatabase::CDBCell::GetCellType]
<nodeType>GameObject/MemberFunc
<summary>セル種別取得
<return:int>セル種別
<comment>このセルの種別を取得します。
----------------------------------------
[CDatabase::CDBCell::ConvertToColorCode]
<nodeType>GameObject/MemberFunc
<summary>カラーコードに変換
<return:int>カラーコード
<comment>このセルの情報を基にカラーコードに変換します。３つの値が存在しない場合は無効となります。
----------------------------------------
[CDatabase::CDBCell::ConvertToPoint]
<nodeType>GameObject/MemberFunc
<summary>座標に変換
<return:CPoint>座標情報
<comment>このセルの情報を基に座標データに変換します。２つの値が : で区切られていない場合は無効となります。
----------------------------------------
[CDatabase::CDBCell::Integer]
<nodeType>GameObject/MemberProperty
<type>int
<summary>整数値
<comment>セル内の情報を整数データとして取り出します。単一整数型のセルでない場合は無効となります。
----------------------------------------
[CDatabase::CDBCell::Boolean]
<nodeType>GameObject/MemberProperty
<type>bool
<summary>論理値
<comment>セル内の情報を論理値データとして取り出します。論理型のセルでない場合は無効となります。
----------------------------------------
[CDatabase::CDBCell::String]
<nodeType>GameObject/MemberProperty
<type>string
<summary>文字列値
<comment>セル内の情報を文字列データとして取り出します。文字列型のセルでない場合は無効となります。
----------------------------------------
[CDatabase::CDBCell::Integers]
<nodeType>GameObject/MemberProperty
<type>CIntegerArray (読み取り専用)
<summary>複数値
<comment>セル内の情報を複数値データとして取り出します。複数値型のセルでない場合は無効となります。
----------------------------------------
[CDatabase::CDBCell::IDValues]
<nodeType>GameObject/MemberProperty
<type>CDBIDValues (読み取り専用)
<summary>ID/セルリスト値
<comment>セル内の情報をID/セルリストデータとして取り出します。ID/セルリスト型のセルでない場合は無効となります。
----------------------------------------
[CDatabase::CDBBaseOne]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>サブデータベース単体クラス
<comment>行と列を成すデータベース単体クラスです。
----------------------------------------
[CDatabase::CDBBaseOne::InitDB]
<nodeType>GameObject/MemberFunc
<summary>すべて初期化
<return:void>
<comment>このサブデータベースを初期化します。
----------------------------------------
[CDatabase::CDBBaseOne::InitRow]
<nodeType>GameObject/MemberFunc
<summary>指定ID行を初期化
<return:void>
<p1:int rowID>ID
<comment>指定したIDの行を初期化します。
----------------------------------------
[CDatabase::CDBBaseOne::InitRowFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックス行を初期化
<return:void>
<p1:int rowIndex>行インデックス
<comment>指定したインデックスの行を初期化します。
----------------------------------------
[CDatabase::CDBBaseOne::InitCell]
<nodeType>GameObject/MemberFunc
<summary>指定IDのセルを初期化
<return:void>
<p1:int rowID>ID
<p2:string columnName>列名
<comment>IDと列名を指定してセルを初期化します。
----------------------------------------
[CDatabase::CDBBaseOne::InitCellFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックスセルを初期化
<return:void>
<p1:int rowIndex>行インデックス
<p2:int columnIndex>列インデックス
<comment>行と列のインデックスを指定してセルを初期化します。
----------------------------------------
[CDatabase::CDBBaseOne::GetRowCount]
<nodeType>GameObject/MemberFunc
<summary>行数取得
<return:int>このサブデータベースに含まれる行数
<comment>このサブデータベースに含まれる行数を取得します。
----------------------------------------
[CDatabase::CDBBaseOne::GetColumnCount]
<nodeType>GameObject/MemberFunc
<summary>列数取得
<return:int>このサブデータベースに含まれる列数
<comment>このサブデータベースに含まれる列数を取得します。
----------------------------------------
[CDatabase::CDBBaseOne::GetColumnIndex]
<nodeType>GameObject/MemberFunc
<summary>列名から列インデックス取得
<return:int>列インデックス。存在しない場合は -1 が返されます。
<p1:string columnName>列名
<comment>
----------------------------------------
[CDatabase::CDBBaseOne::ConvertToFixedID]
<nodeType>GameObject/MemberFunc
<summary>可視IDをFixedIDへ変換
<return:int>FixedID (存在しない場合は -1)
<p1:int visibleID>可視ID (ユーザー定義のID)
<comment>データベース上で任意に設定できるIDから固有のIDを取得します。同一の可視IDが複数ある場合はデータベース上で最初に見つかった項目が返されます。
----------------------------------------
[CDatabase::CDBBaseOne::GetColumnName]
<nodeType>GameObject/MemberFunc
<summary>列インデックスから列名取得
<return:string>列名
<p1:int columnIndex>列インデックス
<comment>
----------------------------------------
[CDatabase::CDBBaseOne::GetColumnType]
<nodeType>GameObject/MemberFunc
<summary>列種別取得
<return:string>列種別を示す文字列
<p1:int columnIndex>列インデックス
<comment>指定した列インデックスに対応する列種別を示す文字列を取得します。
----------------------------------------
[CDatabase::CDBBaseOne::GetCell]
<nodeType>GameObject/MemberFunc
<summary>指定IDのセル取得
<return:CDatabase::CDBCell*>セルデータ
<p1:int rowID>ID
<p2:string columnName>列名
<comment>IDと列名を指定してセルデータを取得します。
----------------------------------------
[CDatabase::CDBBaseOne::GetCellFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックスのセル取得
<return:CDatabase::CDBCell*>セルデータ
<p1:int rowIndex>行インデックス
<p2:int columnIndex>列インデックス
<comment>行と列のインデックスを指定してセルデータを取得します。
----------------------------------------
[CDatabase::CDBBase]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>データベースクラス
<comment>サブデータベースを包含する親データベース単体クラスです。
----------------------------------------
[CDatabase::CDBBase::GetSubDBCount]
<nodeType>GameObject/MemberFunc
<summary>サブDBの総数取得
<return:int>サブデータベースの総数
<comment>このデータベースに含まれるサブデータベースの総数を取得します。
----------------------------------------
[CDatabase::CDBBase::GetDBFileName]
<nodeType>GameObject/MemberFunc
<summary>DBファイル名取得
<return:string>データベースのソースファイル名
<comment>このデータベースのファイル名を取得します。
----------------------------------------
[CDatabase::CDBBase::GetSubDB]
<nodeType>GameObject/MemberFunc
<summary>サブDB取得
<return:CDBBaseOne*>サブDBのインスタンス
<p1:int index>インデックス
<comment>このデータベースのサブDBを取得します。
----------------------------------------
[CDatabase::CDBSystem]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>システムDBクラス
<comment>サブデータベース単体の拡張クラスです。
----------------------------------------
[CDatabase::CDBSystem::GetInteger]
<nodeType>GameObject/MemberFunc
<summary>整数型の設定値を取得
<return:int>設定値
<p1:string settingName>設定項目名
<comment>設定名は定数として定義されています。
----------------------------------------
[CDatabase::CDBSystem::GetBoolean]
<nodeType>GameObject/MemberFunc
<summary>論理型の設定値を取得
<return:bool>設定値
<p1:string settingName>設定項目名
<comment>設定名は定数として定義されています。
----------------------------------------
[CDatabase::CDBSystem::GetString]
<nodeType>GameObject/MemberFunc
<summary>文字列型の設定値を取得
<return:string>設定値
<p1:string settingName>設定項目名
<comment>設定名は定数として定義されています。
----------------------------------------
[CDatabase::CDBSystem::GetSize]
<nodeType>GameObject/MemberFunc
<summary>サイズ型の設定値を取得
<return:CSize>設定値
<p1:string settingName>設定項目名
<comment>設定名は定数として定義されています。
----------------------------------------
[CDatabase::CDBMaterial]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>汎用素材DBクラス
<comment>サブデータベース単体の拡張クラスです。
----------------------------------------
[CDatabase::CDBMaterial::GetHandle]
<nodeType>GameObject/MemberFunc
<summary>素材ハンドル取得
<return:int>素材ハンドル (識別番号)
<p1:int type>素材種別
<p2:int id>ID
<comment>描画や再生、文字列の描画に使われる素材のハンドルを取得します。
----------------------------------------
[CDatabase::CDBMaterial::Play]
<nodeType>GameObject/MemberFunc
<summary>サウンド再生(非同期)
<return:void>
<p1:int soundID>サウンドDB上のID
<p2:int volume>音量（0〜255）
<p3:int pitch>音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）
<p4:int pan>左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）
<comment>サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を行います。
----------------------------------------
[CDatabase::CDBMaterial::PlayForWait]
<nodeType>GameObject/MemberFunc
<summary>サウンド再生(同期)
<return:void>
<p1:int soundID>サウンドDB上のID
<p2:int volume>音量（0〜255）
<p3:int pitch>音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）
<p4:int pan>左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）
<comment>サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を行います。
----------------------------------------
[CDatabase::CDBMaterial::Stop]
<nodeType>GameObject/MemberFunc
<summary>サウンド停止
<return:void>
<p1:int soundID>サウンドDB上のID
<comment>サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を停止します。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>エフェクト再生データクラス
<comment>再生中のエフェクトに関するデータクラスです。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::Frame]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>フレーム番号
<comment>現在のフレーム番号です。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::TargetType]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>描画基準
<comment>表示位置の基準点です。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::WaitBreakFlag]
<nodeType>GameObject/MemberProperty
<type>bool
<summary>再生待機中断フラグ
<comment>再生終了まで待つ場合について、待機を再生途中に解除するときに使います。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::LoadGraph]
<nodeType>GameObject/MemberFunc
<summary>グラフィック素材読込
<return:void>
<p1:int layerIndex>レイヤーインデックス
<p2:string fileName>ファイル名
<p3:int secSizeWidth>セクション幅
<p4:int secSizeHeight>セクション高さ
<comment>レイヤーグラフィックを読み込みます。セクションとはアニメーション１区画のことを指します。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::Draw]
<nodeType>GameObject/MemberFunc
<summary>エフェクト描画
<return:void>
<p1:int layerIndex>レイヤーインデックス
<p2:int destX>描画先中心X座標
<p3:int destY>描画先中心Y座標
<p4:int secX>セクションX座標
<p5:int secY>セクションY座標
<p6:int blendMode>合成方法
<p7:int trans>透明度 (0〜255)
<p8:int ext>拡大率 (等倍=100)
<p9:int angle>回転率 (度数指定)
<comment>このエフェクトを画面上に描画します。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::PlaySE]
<nodeType>GameObject/MemberFunc
<summary>効果音再生
<return:void>
<p1:int id>サウンドDB上のID
<p2:int volume>音量
<p3:int pitch>音程
<p4:int pan>pan
<p5:int sameCounter>同一フレームの実行回数 (初回を０と数える)
<comment>サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を行います。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::Flash]
<nodeType>GameObject/MemberFunc
<summary>フラッシュ
<return:void>
<p1:int color>色
<p2:int strength>強さ
<p3:int count>回数
<p4:int sameCounter>同一フレームの実行回数 (初回を０と数える)
<comment>画面に対してフラッシュ演出を行います。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::Shake]
<nodeType>GameObject/MemberFunc
<summary>減衰振動
<return:void>
<p1:int strength>強さ
<p2:int sameCounter>同一フレームの実行回数 (初回を０と数える)
<comment>画面に対して減衰する振動の演出を行います。
----------------------------------------
[CDatabase::CDBEffect::CDBEffectData::WaitBreak]
<nodeType>GameObject/MemberFunc
<summary>再生待機解除
<return:void>
<comment>再生終了まで待つ場合について、その待機を途中で解除します。
----------------------------------------
[CDatabase::CDBEffect]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>エフェクトDBクラス
<comment>サブデータベース単体の拡張クラスです。
----------------------------------------
[CDatabase::CDBEffect::Show]
<nodeType>GameObject/MemberFunc
<summary>再生(非同期)
<return:int>エフェクトデータのハンドル (識別番号)
<p1:int id>ID
<p2:int destX>表示位置中心X座標
<p3:int destY>表示位置中心Y座標
<comment>指定したエフェクトをバックグラウンドで再生します。再生中のエフェクトデータにはハンドルを使ってアクセスすることができます。
----------------------------------------
[CDatabase::CDBEffect::ShowForWait]
<nodeType>GameObject/MemberFunc
<summary>再生(同期)
<return:void>
<p1:int id>ID
<p2:int destX>表示位置中心X座標
<p3:int destY>表示位置中心Y座標
<comment>指定したエフェクトを再生し、終了まで待機します。
----------------------------------------
[CDatabase::CDBEffect::GetEffectData]
<nodeType>GameObject/MemberFunc
<summary>エフェクトデータ取得
<return:CDBEffectData*>エフェクトデータのインスタンス
<p1:int handle>エフェクトデータのハンドル (識別番号)
<comment>エフェクトデータのハンドルからエフェクトデータを取得します。このメソッドはエフェクト再生スクリプトの引数に渡されているハンドルから、再生中のエフェクトデータにアクセスするために使います。
----------------------------------------
[CDatabase::CDBTileset::CTileData]
<nodeType>GameObject/Class
<summary>タイル単体データクラス
<comment>タイルデータに関するクラスです。
----------------------------------------
[CDatabase::CDBTileset::CTileData::Hit]
<nodeType>GameObject/MemberValue
<type>int
<summary>当たり判定
<comment>
----------------------------------------
[CDatabase::CDBTileset::CTileData::InOut]
<nodeType>GameObject/MemberValue
<type>int
<summary>出入設定
<comment>
----------------------------------------
[CDatabase::CDBTileset::CTileData::Priority]
<nodeType>GameObject/MemberValue
<type>int
<summary>描画優先度
<comment>
----------------------------------------
[CDatabase::CDBTileset::CTileData::Tag]
<nodeType>GameObject/MemberValue
<type>int
<summary>グループ番号
<comment>
----------------------------------------
[CDatabase::CDBTileset::CTileData::AnimPatternCount]
<nodeType>GameObject/MemberValue
<type>int
<summary>アニメーションパターン数
<comment>オートタイルのアニメーションパターンの個数です。オブジェクトタイルは常に０となります。
----------------------------------------
[CDatabase::CDBTileset::CTilePallet]
<nodeType>GameObject/Class
<summary>タイルパレットクラス
<comment>タイルパレットに関するクラスです。
----------------------------------------
[CDatabase::CDBTileset::CTilePallet::TilesetHandle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>グラフィックハンドル
<comment>タイルセットを使って描画を行うのに必要なグラフィックハンドルです。
----------------------------------------
[CDatabase::CDBTileset::CTilePallet::AutoTiles]
<nodeType>GameObject/MemberProperty
<type>CIntegerArray (読み取り専用)
<summary>オートタイルリスト
<comment>オートタイル情報のリストです。
----------------------------------------
[CDatabase::CDBTileset]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>タイルセットDBクラス
<comment>サブデータベース単体の拡張クラスです。
----------------------------------------
[CDatabase::CDBTileset::ActiveTilesetID]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>現在使用中のタイルセットID
<comment>現在のマップで使用されているタイルセットのIDです。
----------------------------------------
[CDatabase::CDBTileset::LoadTileset]
<nodeType>GameObject/MemberFunc
<summary>タイルセット読込
<return:CTilePallet*>
<p1:int id>タイルセットID
<comment>指定したIDに対応するタイルセット定義ファイルを読み込み、これを現在有効なタイルパレットとします。複数のタイルセットを読み込むことはできません。
----------------------------------------
[CDatabase::CDBTileset::GetTilePallet]
<nodeType>GameObject/MemberFunc
<summary>タイルパレットからタイルデータ取得
<return:CTileData*>タイル単体データ
<p1:int tileX>タイルパレットX座標 (タイル単位)
<p2:int tileY>タイルパレットY座標 (タイル単位)
<comment>現在有効なタイルパレットの指定した位置のタイルデータを取得します。
----------------------------------------
[CDatabase::CDBTileset::GetTilePalletSize]
<nodeType>GameObject/MemberFunc
<summary>タイルパレットサイズ取得
<return:CSize>サイズ (タイル単位)
<comment>現在有効なタイルパレットのサイズをタイル単位で取得します。
----------------------------------------
[CDatabase::CDBValue]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>変数DBクラス
<comment>サブデータベース単体の拡張クラスです。
----------------------------------------
[CDatabase::CDBValue::GetSelfValues]
<nodeType>GameObject/MemberFunc
<summary>個別変数データ取得
<return:CSelfValueData>初期値が与えられた個別変数データ
<p1:int type>変数DB上のインデックス
<comment>指定した個別変数の初期状態の個別変数データを取得します。
----------------------------------------
[CDatabase::CDBActorData::CActorSubData]
<nodeType>GameObject/Class
<parent>CIDValueData
<summary>アクターサブ情報クラス
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubData::SelfValues]
<nodeType>GameObject/MemberValue
<type>CSelfValueData
<summary>個別変数
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>配列クラス/アクターサブ情報
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray::GetIndexFromID]
<nodeType>GameObject/MemberFunc
<summary>IDからインデックス取得
<return:int>要素のインデックス
<p1:int ID>ID
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray::GetID]
<nodeType>GameObject/MemberFunc
<summary>取得/ID
<return:int>ID
<p1:int index>インデックス
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray::GetName]
<nodeType>GameObject/MemberFunc
<summary>取得/名前
<return:string>名前
<p1:int index>インデックス
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray::GetValue]
<nodeType>GameObject/MemberFunc
<summary>取得/値
<return:int>値
<p1:int index>インデックス
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray::GetSelfValues]
<nodeType>GameObject/MemberFunc
<summary>取得/個別変数
<return:CSelfValueData*>個別変数データ
<p1:int index>インデックス
<comment>
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray::Exists]
<nodeType>GameObject/MemberFunc
<summary>ID検証
<return:bool>存在する場合はTrue
<p1:int ID>ID
<comment>指定したIDの要素が含まれるかどうかを検証します。
----------------------------------------
[CDatabase::CDBActorData::CActorSubDataArray::Count]
<nodeType>GameObject/MemberFunc
<summary>総数取得
<return:int>要素の総数
<comment>
----------------------------------------
[CDatabase::CDBActorData]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>アクターデータクラス
<comment>パーティキャラとエネミーの単体情報を統合したデータクラスです。
----------------------------------------
[CDatabase::CDBActorData::Title]
<nodeType>GameObject/MemberValue
<type>string
<summary>肩書き
<comment>
----------------------------------------
[CDatabase::CDBActorData::IsNPC]
<nodeType>GameObject/MemberValue
<type>bool
<summary>NPCかどうか
<comment>
----------------------------------------
[CDatabase::CDBActorData::EXP]
<nodeType>GameObject/MemberValue
<type>int
<summary>経験値
<comment>
----------------------------------------
[CDatabase::CDBActorData::Graphics]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>グラフィック名
<comment>
----------------------------------------
[CDatabase::CDBActorData::GraphHandle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>グラフィックハンドル
<comment>描画に必要なハンドルです。
----------------------------------------
[CDatabase::CDBActorData::GraphSize]
<nodeType>GameObject/MemberProperty
<type>CSize (読み取り専用)
<summary>グラフィックサイズ
<comment>読み込まれたグラフィックのサイズです。
----------------------------------------
[CDatabase::CDBActorData::Location]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>グラフィック位置
<comment>グラフィックの描画左上座標です。
----------------------------------------
[CDatabase::CDBActorData::Level]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>レベル
<comment>
----------------------------------------
[CDatabase::CDBActorData::SelfValues]
<nodeType>GameObject/MemberProperty
<type>CSelfValueData (読み取り専用)
<summary>個別変数
<comment>
----------------------------------------
[CDatabase::CDBActorData::PotentialSkills]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>習得予定スキルリスト
<comment>まだアクターが習得していないスキルの情報（アクターサブ情報クラスのインスタンス）です。ID、名前、値（習得レベル）が要素に含まれます。ただし、スクリプトはこのプロパティ経由で追加/削除/変更を行うことはできません。
----------------------------------------
[CDatabase::CDBActorData::Attributes]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>属性リスト
<comment>アクターに設定されている属性の情報（アクターサブ情報クラスのインスタンス）です。ID、名前、値（参照カウンター）が要素に含まれます。ただし、スクリプトはこのプロパティ経由で追加/削除/変更を行うことはできません。
----------------------------------------
[CDatabase::CDBActorData::Classes]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>クラスリスト
<comment>アクターに設定されているクラスの情報（アクターサブ情報クラスのインスタンス）です。ID、名前、個別変数が要素に含まれます。ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。
----------------------------------------
[CDatabase::CDBActorData::Equips]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>装備リスト
<comment>アクターに設定されている装備品の情報（アクターサブ情報クラスのインスタンス）です。ID、名前、個別変数が要素に含まれます。ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。
----------------------------------------
[CDatabase::CDBActorData::States]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>間接効果リスト
<comment>アクターに設定されている間接効果の情報（アクターサブ情報クラスのインスタンス）です。ID、名前、個別変数が要素に含まれます。ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。
----------------------------------------
[CDatabase::CDBActorData::LearnedSkills]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>習得スキルリスト
<comment>アクターに設定されているクラスの情報（アクターサブ情報クラスのインスタンス）です。ID、名前、関連値（参照カウンター）、個別変数が要素に含まれます。ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。
----------------------------------------
[CDatabase::CDBActorData::LevelUpParameters]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>レベルアップによるパラメーター変動情報
<comment>このアクターがレベルアップしたとき、変動しなかったものも含めたパラメーター変動値が格納されます。
----------------------------------------
[CDatabase::CDBActorData::LevelUpSkills]
<nodeType>GameObject/MemberProperty
<type>CActorSubDataArray (読み取り専用)
<summary>レベルアップによる習得スキル情報
<comment>このアクターがレベルアップしたとき、習得したスキルが格納されます。既に習得している場合であっても、習得レベルに達した時点で対象となります。
----------------------------------------
[CDatabase::CDBActorData::PrintData]
<nodeType>GameObject/MemberFunc
<summary>アクター情報出力
<return:void>
<comment>このアクターの情報をログに書き出します。
----------------------------------------
[CDatabase::CDBActorData::CreateActorFromChar]
<nodeType>GameObject/ClassFunc
<summary>パーティキャラから生成
<return:CDBActorData>生成されたアクターデータ
<p1:int ID>パーティキャラDB上のID
<comment>パーティキャラを基にしてアクターデータを生成します。
----------------------------------------
[CDatabase::CDBActorData::CreateActorFromEnemy]
<nodeType>GameObject/ClassFunc
<summary>エネミーから生成
<return:CDBActorData>生成されたアクターデータ
<p1:int ID>エネミーDB上のID
<comment>エネミーを基にしてアクターデータを生成します。
----------------------------------------
[CDatabase::CDBActorData::LoadGraphics]
<nodeType>GameObject/MemberFunc
<summary>グラフィック読込
<return:void>
<p1:string fileName>ファイル名
<comment>
----------------------------------------
[CDatabase::CDBActorData::DisposeGraphics]
<nodeType>GameObject/MemberFunc
<summary>グラフィック破棄
<return:void>
<comment>グラフィックに関わるリソースを破棄します。
----------------------------------------
[CDatabase::CDBActorData::GetBaseFDBIndex]
<nodeType>GameObject/MemberFunc
<summary>ソースDBインデックス取得
<return:int>固定データベースのインデックス
<comment>このアクターの基となった固定データベースのインデックスを返します。
----------------------------------------
[CDatabase::CDBActorData::SetClass]
<nodeType>GameObject/MemberFunc
<summary>クラス設定
<return:void>
<p1:int ID>クラスDB上のID
<comment>複数設定することができます。
----------------------------------------
[CDatabase::CDBActorData::SetEquip]
<nodeType>GameObject/MemberFunc
<summary>装備設定
<return:bool>成功したかどうか
<p1:int ID>アイテムDB上のID
<p2:bool absolute = false>装備固定の設定が施されているキャラに対しても強制的に変更するかどうか
<comment>アクターの装備可否を考慮した上で装備処理を行います。装備したアイテムはユーザー自身で所持アイテムリストから削除する必要があります。
----------------------------------------
[CDatabase::CDBActorData::SetSkill]
<nodeType>GameObject/MemberFunc
<summary>スキル設定
<return:void>
<p1:int ID>スキルDB上のID
<comment>スキルを習得させます。
----------------------------------------
[CDatabase::CDBActorData::SetState]
<nodeType>GameObject/MemberFunc
<summary>間接効果設定
<return:bool>成功したかどうか
<p1:int ID>間接効果DB上のID
<p2:bool absolute>耐性に関わらず必ず成功させるかどうか
<comment>アクターの間接効果耐性を考慮した上で罹患処理を行います。耐性が付いている場合は確率で罹患します。
----------------------------------------
[CDatabase::CDBActorData::ReleaseClass]
<nodeType>GameObject/MemberFunc
<summary>クラス解除
<return:bool>成功したかどうか
<p1:int ID>クラスDB上のID
<comment>
----------------------------------------
[CDatabase::CDBActorData::ReleaseEquip]
<nodeType>GameObject/MemberFunc
<summary>装備解除
<return:bool>成功したかどうか
<p1:int ID>アイテムDB上のID
<p2:bool absolute = false>装備固定の設定が施されているキャラに対しても強制的に解除するかどうか
<comment>外された装備はユーザー自身で所持アイテムリストに追加する必要があります。
----------------------------------------
[CDatabase::CDBActorData::ReleaseEquipType]
<nodeType>GameObject/MemberFunc
<summary>装備大種別で解除
<return:bool>成功したかどうか
<p1:int itemTypeID>アイテム大種別DB上のID
<p2:bool absolute = false>装備固定の設定が施されているキャラに対しても強制的に解除するかどうか
<comment>
----------------------------------------
[CDatabase::CDBActorData::ReleaseSkill]
<nodeType>GameObject/MemberFunc
<summary>スキル解除
<return:bool>成功したかどうか
<p1:int ID>スキルDB上のID
<comment>スキルを習得していなかったことにします。
----------------------------------------
[CDatabase::CDBActorData::ReleaseState]
<nodeType>GameObject/MemberFunc
<summary>間接効果解除
<return:bool>成功したかどうか
<p1:int ID>間接効果DB上のID
<comment>耐性に関わらず必ず解除します。
----------------------------------------
[CDatabase::CDBActorData::ClearClass]
<nodeType>GameObject/MemberFunc
<summary>クラス全解除
<return:void>
<comment>
----------------------------------------
[CDatabase::CDBActorData::ClearEquip]
<nodeType>GameObject/MemberFunc
<summary>装備全解除
<return:void>
<p1:bool absolute = false>装備固定の設定が施されているキャラに対しても強制的に全解除するかどうか
<comment>外された装備はユーザー自身で所持アイテムリストに追加する必要があります。
----------------------------------------
[CDatabase::CDBActorData::ClearSkill]
<nodeType>GameObject/MemberFunc
<summary>スキル全解除
<return:void>
<comment>
----------------------------------------
[CDatabase::CDBActorData::ClearState]
<nodeType>GameObject/MemberFunc
<summary>間接効果全解除
<return:void>
<comment>
----------------------------------------
[CDatabase::CDBActorData::ClearStateOnlyBad]
<nodeType>GameObject/MemberFunc
<summary>非善良の間接効果を全解除
<return:void>
<comment>いわゆるバッドステータスの間接効果だけを一括解除します。
----------------------------------------
[CDatabase::CDBActorData::GetParameter]
<nodeType>GameObject/MemberFunc
<summary>パラメーター取得
<return:CIDValueData*>パラメーターのID/値のデータ
<p1:int ID>パラメーターDB上のID
<comment>
----------------------------------------
[CDatabase::CDBActorData::GetAttributeResistance]
<nodeType>GameObject/MemberFunc
<summary>属性耐性取得
<return:int>耐性値
<p1:int ID>属性DB上のID
<comment>
----------------------------------------
[CDatabase::CDBActorData::GetStateResistance]
<nodeType>GameObject/MemberFunc
<summary>間接効果耐性取得
<return:int>耐性値
<p1:int ID>間接効果DB上のID
<comment>
----------------------------------------
[CDatabase::CDBActorData::GetEquipIDFromItemTypeID]
<nodeType>GameObject/MemberFunc
<summary>装備大種別からアイテムID取得
<return:int>アイテムDB上のID
<p1:int itemTypeID>アイテム大種別DB上のID
<comment>指定した装備大種別に該当する装備品のIDを取得します。
----------------------------------------
[CDatabase::CDBActorData::CheckAttribute]
<nodeType>GameObject/MemberFunc
<summary>属性検証
<return:bool>属性が付いている場合はTrue
<p1:int attrID>属性DB上のID
<comment>指定した属性が設定されているかどうかを検証します。
----------------------------------------
[CDatabase::CDBActorData::CheckStateLimit]
<nodeType>GameObject/MemberFunc
<summary>間接効果制約検証
<return:bool>該当する間接効果を罹患している場合はTrue
<p1:int stateLimit>間接効果の制約
<comment>指定した制約に相当する間接効果を罹患しているかどうかを検証します。
----------------------------------------
[CDatabase::CDBActorData::CheckUseSkill]
<nodeType>GameObject/MemberFunc
<summary>スキル検証
<return:bool>使用できる場合はTrue
<p1:int skillID>スキルDB上のID
<comment>指定したスキルを習得していて、かつ使用できる状態であるかどうかを検証します。
----------------------------------------
[CDatabase::CDBActorData::CheckUseSkillType]
<nodeType>GameObject/MemberFunc
<summary>スキル種別検証
<return:bool>使用できる場合はTrue
<p1:int skillTypeID>スキル種別DB上のID
<comment>指定したスキル種別が使用できる状態であるかどうかを検証します。
----------------------------------------
[CDatabase::CDBActorData::CheckEquipLock]
<nodeType>GameObject/MemberFunc
<summary>装備固定検証
<return:bool>固定されている場合はTrue
<p1:int itemTypeID>装備大種別DB上のID
<comment>指定した装備大種別が固定状態にあるかどうかを検証します。
----------------------------------------
[CDatabase::CDBActorData::CheckEquip]
<nodeType>GameObject/MemberFunc
<summary>装備品検証
<return:bool>装備できる場合はTrue
<p1:int itemID>アイテムDB上のID
<comment>指定した装備品を装備できるかどうかを検証します。
----------------------------------------
[CDatabase::CDBActorData::PlusEXP]
<nodeType>GameObject/MemberFunc
<summary>経験値加算
<return:int>変動したレベル数
<p1:int exp>加算値
<comment>経験値を加算します。レベルアップ処理も行われます。経験値は減らすこともできますが、この場合レベルが下がることはありません。
----------------------------------------
[CDatabase::CDBActorData::LevelUp]
<nodeType>GameObject/MemberFunc
<summary>レベルアップ
<return:int>次のレベルアップに必要な経験値
<p1:int val>上昇レベル数
<comment>レベルを上げます。上昇後のレベルに必要な経験値が自動で加算されます。レベルは下げることもできますが、この場合経験値が減ることはありません。最大レベルに達している場合は戻り値は整数型の最大値になります。
----------------------------------------
[CDatabase::CDBActorData::GetNextEXP]
<nodeType>GameObject/MemberFunc
<summary>次のレベルアップに必要な経験値を取得
<return:int>次のレベルアップに必要な経験値
<comment>最大レベルに達している場合は戻り値は整数型の最大値になります。
----------------------------------------
[CDatabase::CDBActor]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>アクターDBクラス
<comment>サブデータベース単体の拡張クラスです。固定データベースのパーティキャラDBを基に生成されます。こちらは可変データベースのため自由に操作できます。
----------------------------------------
[CDatabase::CDBActor::GetCount]
<nodeType>GameObject/MemberFunc
<summary>総数取得
<return:int>アクター総数
<comment>アクターの総数を取得します。固定データベースのパーティキャラDBの総数に一致します。
----------------------------------------
[CDatabase::CDBActor::InitData]
<nodeType>GameObject/MemberFunc
<summary>指定IDのデータ初期化
<return:void>
<p1:int ID>アクターID (パーティキャラDB上のID)
<comment>指定したアクターのデータを初期化（パーティキャラDBから復元）します。
----------------------------------------
[CDatabase::CDBActor::InitDataFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックスのデータ初期化
<return:void>
<p1:int index>アクターインデックス (パーティキャラDB上の行インデックス)
<comment>指定したアクターのデータを初期化（パーティキャラDBから復元）します。
----------------------------------------
[CDatabase::CDBActor::GetData]
<nodeType>GameObject/MemberFunc
<summary>指定IDのデータ取得
<return:CDBActorData*>アクターデータのインスタンス
<p1:int ID>アクターID (パーティキャラDB上のID)
<comment>指定したアクターのデータを取得します。
----------------------------------------
[CDatabase::CDBActor::GetDataFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックスのデータ取得
<return:CDBActorData*>アクターデータのインスタンス
<p1:int index>アクターインデックス (パーティキャラDB上の行インデックス)
<comment>指定したアクターのデータを取得します。
----------------------------------------
[CDatabase::CDBParty]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>パーティDBクラス
<comment>サブデータベース単体の拡張クラスです。固定データベースの初期設置DBを基に生成されます。こちらは可変データベースのため自由に操作できます。
----------------------------------------
[CDatabase::CDBParty::ClearMembers]
<nodeType>GameObject/MemberFunc
<summary>全メンバーを脱退
<return:void>
<comment>この処理を実行した後は速やかに一人以上のメンバーを加えて下さい。
----------------------------------------
[CDatabase::CDBParty::ClearItems]
<nodeType>GameObject/MemberFunc
<summary>全所持アイテム削除
<return:void>
<comment>キャラが装備しているアイテムを除くすべての所持品を破棄します。
----------------------------------------
[CDatabase::CDBParty::AddMember]
<nodeType>GameObject/MemberFunc
<summary>メンバー追加
<return:void>
<p1:int id>パーティキャラDB上のID
<p2:int index>追加位置のインデックス (-1 で末尾・先頭を０として数える)
<comment>指定したキャラをパーティに追加します。
----------------------------------------
[CDatabase::CDBParty::DeleteMemberFromID]
<nodeType>GameObject/MemberFunc
<summary>指定IDのメンバー脱退
<return:void>
<p1:int id>パーティキャラDB上のID
<comment>指定したIDのキャラをパーティから脱退させます。
----------------------------------------
[CDatabase::CDBParty::DeleteMemberFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定位置のメンバー脱退
<return:void>
<p1:int index>パーティリスト上のインデックス (先頭を０として数える)
<comment>指定した位置にいるキャラをパーティから脱退させます。
----------------------------------------
[CDatabase::CDBParty::CheckCharInParty]
<nodeType>GameObject/MemberFunc
<summary>パーティ所属検証
<return:int>パーティリスト上のインデックス。所属していない場合は -1 が返されます。
<p1:int id>パーティキャラDB上のID
<comment>指定したキャラがパーティに所属しているかどうかを検証します。
----------------------------------------
[CDatabase::CDBParty::GetCharIDFromPartyIndex]
<nodeType>GameObject/MemberFunc
<summary>パーティ位置からキャラID取得
<return:int>パーティキャラDB上のID
<p1:int index>パーティリスト上のインデックス (先頭を０として数える)
<comment>指定した位置にいるキャラのIDを取得します。
----------------------------------------
[CDatabase::CDBParty::GetCharCount]
<nodeType>GameObject/MemberFunc
<summary>パーティ人数取得
<return:int>パーティ人数
<comment>
----------------------------------------
[CDatabase::CDBParty::AddItem]
<nodeType>GameObject/MemberFunc
<summary>所持アイテム追加
<return:void>
<p1:int id>アイテムDB上のID
<p2:int count>個数
<comment>指定したアイテムを指定個数分だけ所持させます。
----------------------------------------
[CDatabase::CDBParty::DeleteItem]
<nodeType>GameObject/MemberFunc
<summary>所持アイテム削除
<return:void>
<p1:int id>アイテムDB上のID
<p2:int count>個数
<comment>指定したアイテムを指定個数分だけ削除します。
----------------------------------------
[CDatabase::CDBParty::GetItemDataFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックスのアイテム情報取得
<return:CIDValueData*>アイテム情報 (ID, 名前, 個数)
<p1:int index>所持アイテムリスト上のインデックス
<comment>所持アイテムリストの指定位置にあるアイテム情報を取得します。
----------------------------------------
[CDatabase::CDBParty::GetItemCountAll]
<nodeType>GameObject/MemberFunc
<summary>所持アイテム総数取得
<return:int>所持しているアイテム数
<comment>すべての所持アイテム数を取得します。
----------------------------------------
[CDatabase::CDBParty::GetItemTypeCount]
<nodeType>GameObject/MemberFunc
<summary>指定大種別の所持数取得
<return:int>所持しているアイテム数
<p1:int itemTypeID>アイテム大種別DB上のID
<comment>指定したアイテム大種別に該当するアイテムの個数を取得します。
----------------------------------------
[CDatabase::CDBParty::GetItemCount]
<nodeType>GameObject/MemberFunc
<summary>指定アイテムの所持数取得
<return:int>所持しているアイテム数
<p1:int itemID>アイテムID
<comment>指定したIDに該当するアイテムの個数を取得します。
----------------------------------------
[CDatabase::CDBParty::SortItemsByVisibleID]
<nodeType>GameObject/MemberFunc
<summary>所持アイテム並び替え/可視ID順
<return:void>
<p1:bool reverse>逆順にするかどうか
<comment>
----------------------------------------
[CDatabase::CDBParty::SortItemsByName]
<nodeType>GameObject/MemberFunc
<summary>所持アイテム並び替え/名前順
<return:void>
<p1:bool reverse>逆順にするかどうか
<comment>
----------------------------------------
[CDatabase::CDBParty::Money]
<nodeType>GameObject/MemberProperty
<type>int
<summary>所持金
<comment>
----------------------------------------
[CDatabase::CDBUser]
<nodeType>GameObject/Class
<parent>CDatabase::CDBBase
<summary>ユーザーDBクラス
<comment>サブデータベース単体の拡張クラスです。
----------------------------------------
[CDatabase::CDBUser::GetUserDB]
<nodeType>GameObject/MemberFunc
<summary>ユーザーDB取得
<return:CDBBaseOne*>サブDBのインスタンス
<p1:int id>ユーザーDB上のID
<comment>指定したユーザーDBを取得します。
----------------------------------------
[CDatabase]
<nodeType>GameObject/Class
<summary>データベース管理クラス
<comment>全データベースを統括管理するクラスです。
----------------------------------------
[CDatabase::UDB]
<nodeType>GameObject/MemberProperty
<type>CDBUser (読み取り専用)
<summary>ユーザーDBMGR
<comment>ユーザーDBクラスのインスタンスです。
----------------------------------------
[CDatabase::GetDB]
<nodeType>GameObject/MemberFunc
<summary>データベース取得
<return:CDBBase*>親データベースのインスタンス
<p1:int dbType>データベース種別
<p2:int dbIndex>データベースのインデックス
<comment>指定したデータベースを取得します。
----------------------------------------
[CDatabase::FDBEffect]
<nodeType>GameObject/MemberProperty
<type>CDBEffect (読み取り専用)
<summary>エフェクトDBMGR
<comment>エフェクトDBクラスのインスタンスです。
----------------------------------------
[CDatabase::FDBMaterial]
<nodeType>GameObject/MemberProperty
<type>CDBMaterial (読み取り専用)
<summary>汎用素材DBMGR
<comment>汎用素材DBクラスのインスタンスです。
----------------------------------------
[CDatabase::FDBSystem]
<nodeType>GameObject/MemberProperty
<type>CDBSystem (読み取り専用)
<summary>システムDBMGR
<comment>システムDBクラスのインスタンスです。
----------------------------------------
[CDatabase::FDBTileset]
<nodeType>GameObject/MemberProperty
<type>CDBTileset (読み取り専用)
<summary>タイルセットDBMGR
<comment>タイルセットDBクラスのインスタンスです。
----------------------------------------
[CDatabase::VDBValue]
<nodeType>GameObject/MemberProperty
<type>CDBValue (読み取り専用)
<summary>変数DBMGR
<comment>変数DBクラスのインスタンスです。これは可変データベースです。
----------------------------------------
[CDatabase::VDBParty]
<nodeType>GameObject/MemberProperty
<type>CDBParty (読み取り専用)
<summary>パーティDBMGR
<comment>パーティDBクラスのインスタンスです。これは可変データベースです。
----------------------------------------
[CDatabase::VDBActor]
<nodeType>GameObject/MemberProperty
<type>CDBActor (読み取り専用)
<summary>アクターDBMGR
<comment>アクターDBクラスのインスタンスです。これは可変データベースです。
----------------------------------------
[CDatabase::GetCell]
<nodeType>GameObject/MemberFunc
<summary>指定IDのセル取得
<return:CDatabase::CDBCell*>セルデータのインスタンス
<p1:int dbType>データベース種別
<p2:int dbIndex>データベースのインデックス
<p3:int subDB>サブデータベースのインデックス
<p4:int rowID>ID
<p5:string columnName>列名
<comment>IDを指定してデータベースのセル情報を取得します。
----------------------------------------
[CDatabase::GetCellFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックスのセル取得
<return:CDatabase::CDBCell*>セルデータのインスタンス
<p1:int dbType>データベース種別
<p2:int dbIndex>データベースのインデックス
<p3:int subDB>サブデータベースのインデックス
<p4:int rowIndex>行インデックス
<p5:int columnIndex>列インデックス
<comment>行と列のインデックスからデータベースのセル情報を取得します。
----------------------------------------
[CDatabase::InitDBType]
<nodeType>GameObject/MemberFunc
<summary>指定種別のデータベース初期化
<return:void>
<p1:int dbType>データベース種別
<comment>指定した種別のデータベースをすべて初期化します。これは可変データベースとユーザーデータベースでのみ有効です。
----------------------------------------
[CDatabase::InitDB]
<nodeType>GameObject/MemberFunc
<summary>DB初期化
<return:void>
<p1:int dbType>データベース種別
<p2:int dbIndex>データベースのインデックス
<p3:int subDB>サブデータベースのインデックス
<comment>指定したデータベースを初期化します。これは可変データベースとユーザーデータベースでのみ有効です。
----------------------------------------
[CDatabase::InitRow]
<nodeType>GameObject/MemberFunc
<summary>行初期化
<return:void>
<p1:int dbType>データベース種別
<p2:int dbIndex>データベースのインデックス
<p3:int subDB>サブデータベースのインデックス
<p4:int rowID>ID
<comment>指定したデータベースの指定ID行を初期化します。これは可変データベースとユーザーデータベースでのみ有効です。
----------------------------------------
[CDatabase::InitCell]
<nodeType>GameObject/MemberFunc
<summary>指定IDのセル初期化
<return:void>
<p1:int dbType>データベース種別
<p2:int dbIndex>データベースのインデックス
<p3:int subDB>サブデータベースのインデックス
<p4:int rowID>ID
<p5:string columnName>列名
<comment>指定したデータベースの指定セルを初期化します。これは可変データベースとユーザーデータベースでのみ有効です。
----------------------------------------
[CDatabase::InitCellFromIndex]
<nodeType>GameObject/MemberFunc
<summary>指定インデックスのセル初期化
<return:void>
<p1:int dbType>データベース種別
<p2:int dbIndex>データベースのインデックス
<p3:int subDB>サブデータベースのインデックス
<p4:int rowIndex>行インデックス
<p5:int columnIndex>列インデックス
<comment>指定したデータベースの指定セルを初期化します。これは可変データベースとユーザーデータベースでのみ有効です。
----------------------------------------
[CMaterialBase]
<nodeType>GameObject/Class
<parent>CNullCheck,Sqrat::NoConstructor
<summary>素材基底クラス
<comment>各種素材クラスの抽象クラスです。
----------------------------------------
[CMaterial::CMaterialGraphics]
<nodeType>GameObject/Class
<parent>CMaterialBase
<summary>グラフィック素材管理クラス
<comment>グラフィック/動画像素材を管理するクラスです。
----------------------------------------
[CMaterial::CMaterialGraphics::Add]
<nodeType>GameObject/MemberFunc
<summary>追加
<return:int>ハンドル
<p1:string fileName>ファイル名
<comment>グラフィック/動画像素材を読み込みます。戻り値のハンドルは削除するまで必要ですので必ず変数などで保管して下さい。
----------------------------------------
[CMaterial::CMaterialGraphics::Delete]
<nodeType>GameObject/MemberFunc
<summary>削除
<return:void>
<p1:int hdl>ハンドル
<comment>グラフィック/動画像素材を破棄します。
----------------------------------------
[CMaterial::CMaterialGraphics::Clear]
<nodeType>GameObject/MemberFunc
<summary>全削除
<return:void>
<comment>すべてのグラフィック/動画像素材を破棄します。
----------------------------------------
[CMaterial::CMaterialGraphics::IconSize]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>アイコンサイズ
<comment>システムDBで設定されたアイコンのサイズです。
----------------------------------------
[CMaterial::CMaterialGraphics::IconGraphicHandle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>アイコングラフィックハンドル
<comment>システムDBで設定されたアイコングラフィックのハンドルです。
----------------------------------------
[CMaterial::CMaterialSound]
<nodeType>GameObject/Class
<parent>CMaterialBase
<summary>サウンド素材管理クラス
<comment>サウンド素材を管理するクラスです。
----------------------------------------
[CMaterial::CMaterialSound::StandardVolume]
<nodeType>GameObject/MemberProperty
<type>int
<summary>標準音量
<comment>サウンド再生時に音量をマイナス指定にしたときに設定される既定の音量です。初期設定は最大音量です。
----------------------------------------
[CMaterial::CMaterialSound::Add]
<nodeType>GameObject/MemberFunc
<summary>追加
<return:int>ハンドル
<p1:string fileName>ファイル名
<comment>サウンド素材を読み込みます。戻り値のハンドルは削除するまで必要ですので必ず変数などで保管して下さい。
----------------------------------------
[CMaterial::CMaterialSound::Delete]
<nodeType>GameObject/MemberFunc
<summary>削除
<return:void>
<p1:int hdl>ハンドル
<comment>サウンド素材を破棄します。
----------------------------------------
[CMaterial::CMaterialSound::Clear]
<nodeType>GameObject/MemberFunc
<summary>全削除
<return:void>
<comment>すべてのサウンド素材を破棄します。
----------------------------------------
[CMaterial::CMaterialSound::Play]
<nodeType>GameObject/MemberFunc
<summary>再生
<return:void>
<p1:int hdl>ハンドル
<p2:int playType>再生方法
<p3:int volume = 255>音量（0〜255）
<p4:int pitchRate = 0>音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）
<p5:int panPot = 0>左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）
<p6:double fadeTime = 0.0F>フェード秒数
<comment>指定したサウンドを再生します。
----------------------------------------
[CMaterial::CMaterialSound::PlayOnce]
<nodeType>GameObject/MemberFunc
<summary>使い捨て再生
<return:void>
<p1:int hdl>ハンドル
<p2:int playType>再生方法
<p3:int volume = 255>音量（0〜255）
<p4:int pitchRate = 0>音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）
<p5:int panPot = 0>左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）
<comment>指定したサウンドを再生し、再生後に自動で破棄します。破棄されたサウンドは二度と再生できなくなります。
----------------------------------------
[CMaterial::CMaterialSound::Stop]
<nodeType>GameObject/MemberFunc
<summary>停止
<return:void>
<p1:int hdl>ハンドル
<p2:double fadeTime = 0.0F>フェード秒数
<p3:bool afterDelete = false>停止後に破棄するかどうか
<comment>指定したサウンドの再生を停止します。
----------------------------------------
[CMaterial::CMaterialSound::StopAll]
<nodeType>GameObject/MemberFunc
<summary>すべて停止
<return:void>
<p1:double fadeTime = 0.0F>フェード秒数
<p2:bool afterDelete = false>停止後に破棄するかどうか
<comment>すべてのサウンドの再生を停止します。
----------------------------------------
[CMaterial::CMaterialSound::Pause]
<nodeType>GameObject/MemberFunc
<summary>一時停止
<return:void>
<p1:int hdl>ハンドル
<p2:double fadeTime = 0.0F>フェード秒数
<comment>指定したサウンドの再生を一時停止します。
----------------------------------------
[CMaterial::CMaterialSound::Resume]
<nodeType>GameObject/MemberFunc
<summary>再開
<return:void>
<p1:int hdl>ハンドル
<p2:bool loopMode = false>ループ再生するかどうか
<p3:double fadeTime = 0.0F>フェード秒数
<comment>指定したサウンドの再生を再開します。
----------------------------------------
[CMaterial::CMaterialSound::CheckPlayStatus]
<nodeType>GameObject/MemberFunc
<summary>再生状態検証
<return:int>再生状態
<p1:int hdl>ハンドル
<comment>指定したサウンドの再生状態を検証します。
----------------------------------------
[CMaterial::CMaterialFont]
<nodeType>GameObject/Class
<parent>CMaterialBase
<summary>フォント素材管理クラス
<comment>フォント素材を管理するクラスです。
----------------------------------------
[CMaterial::CMaterialFont::Add]
<nodeType>GameObject/MemberFunc
<summary>追加
<return:int>ハンドル
<p1:int dbID>フォントDB上のID
<p2:string fontName>フォント名
<p3:string fileName>フォントファイル名
<p4:int size>大きさ
<p5:int thick>太さ
<p6:int lineSpace>行間
<p7:int space>文字間
<p8:int type>描画方法
<p9:int edgeColor>縁色
<comment>フォントを追加します。戻り値のハンドルは削除するまで必要ですので必ず変数などで保管して下さい。
----------------------------------------
[CMaterial::CMaterialFont::Delete]
<nodeType>GameObject/MemberFunc
<summary>削除
<return:void>
<p1:int hdl>ハンドル
<comment>フォントを削除します。
----------------------------------------
[CMaterial::CMaterialFont::Clear]
<nodeType>GameObject/MemberFunc
<summary>全削除
<return:void>
<comment>すべてのフォントを削除します。
----------------------------------------
[CMaterial]
<nodeType>GameObject/Class
<summary>素材管理クラス
<comment>各種素材を統括管理するクラスです。
----------------------------------------
[CMaterial::Clear]
<nodeType>GameObject/MemberFunc
<summary>全素材初期化
<return:void>
<comment>現在読み込まれているすべての素材を削除します。
----------------------------------------
[CMaterial::Fonts]
<nodeType>GameObject/MemberProperty
<type>CMaterialFont (読み取り専用)
<summary>フォント素材MGR
<comment>フォント素材管理クラスのインスタンスです。
----------------------------------------
[CMaterial::Graphics]
<nodeType>GameObject/MemberProperty
<type>CMaterialGraphics (読み取り専用)
<summary>グラフィック素材MGR
<comment>グラフィック素材管理クラスのインスタンスです。
----------------------------------------
[CMaterial::Sounds]
<nodeType>GameObject/MemberProperty
<type>CMaterialSound (読み取り専用)
<summary>サウンド素材MGR
<comment>サウンド素材管理クラスのインスタンスです。
----------------------------------------
[CSceneBase]
<nodeType>GameObject/Class
<parent>CNullCheck,Sqrat::NoConstructor
<summary>シーン基底クラス
<comment>各種シーンの抽象クラスです。
----------------------------------------
[CSceneBase::SubSceneID]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>サブシーンID
<comment>サブシーンに移行しているときはそのIDが、メインシーン単体で動作しているときは -1 が格納されています。
----------------------------------------
[CSceneBase::BGM]
<nodeType>GameObject/MemberProperty
<type>CSoundData (読み取り専用)
<summary>BGM
<comment>シーンのBGMオブジェクトです。
----------------------------------------
[CSceneBase::BeforeBGMFileName]
<nodeType>GameObject/MemberValue
<type>string
<summary>前回のBGMファイル名
<comment>
----------------------------------------
[CSceneBase::PlayBGM]
<nodeType>GameObject/MemberFunc
<summary>BGM再生
<return:void>
<p1:string fileName>ファイル名
<p2:int volume>音量（0〜255）
<p3:int pitch>音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）
<p4:int pan>左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）
<comment>シーンBGMを再生します。
----------------------------------------
[CSceneBase::BGS]
<nodeType>GameObject/MemberProperty
<type>CSoundData (読み取り専用)
<summary>BGS
<comment>シーンのBGSオブジェクトです。
----------------------------------------
[CSceneBase::BeforeBGSFileName]
<nodeType>GameObject/MemberValue
<type>string
<summary>前回のBGSファイル名
<comment>
----------------------------------------
[CSceneBase::PlayBGS]
<nodeType>GameObject/MemberFunc
<summary>BGS再生
<return:void>
<p1:string fileName>ファイル名
<p2:int volume>音量（0〜255）
<p3:int pitch>音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）
<p4:int pan>左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）
<comment>シーンBGSを再生します。
----------------------------------------
[CSceneBase::GetName]
<nodeType>GameObject/MemberFunc
<summary>シーン名取得
<return:string>シーン名
<comment>シーンの名前を取得します。
----------------------------------------
[CSceneTitle]
<nodeType>GameObject/Class
<parent>CSceneBase
<summary>タイトルシーンクラス
<comment>
----------------------------------------
[CSceneMap::CMapData::CEventMoveTask]
<nodeType>GameObject/Class
<summary>イベント移動指示内容クラス
<comment>
----------------------------------------
[CSceneMap::CMapData::CEventMoveTask::TaskType]
<nodeType>GameObject/MemberValue
<type>int
<summary>指示種別
<comment>
----------------------------------------
[CSceneMap::CMapData::CEventMoveTask::OptionInteger]
<nodeType>GameObject/MemberValue
<type>int
<summary>オプション/整数値
<comment>
----------------------------------------
[CSceneMap::CMapData::CEventMoveTask::OptionString]
<nodeType>GameObject/MemberValue
<type>string
<summary>オプション/文字列値
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapObjectData]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>マップオブジェクトクラス
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::Position]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>マップ上の座標
<comment>このオブジェクトが位置しているタイル単位の座標です。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::PositionOnPixel]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>画面上のピクセル座標
<comment>描画される画面上の位置を示します。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::MoveCounter]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>移動カウンター
<comment>移動中に変動するオフセットです。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::Hide]
<nodeType>GameObject/MemberValue
<type>bool
<summary>非表示かどうか
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::ForbiddenAutoMove]
<nodeType>GameObject/MemberValue
<type>bool
<summary>移動カウンター自動処理の禁止フラグ
<comment>移動カウンターを自動で原点に戻す処理を禁止するためのフラグです。このフラグがTrueのとき、移動カウンターは固定されるようになり、移動中ではないとみなされます。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::MoveWaitTimer]
<nodeType>GameObject/MemberValue
<type>int
<summary>移動待機カウンター
<comment>日常移動/臨時移動における待機時間を示します。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::DoExtraMove]
<nodeType>GameObject/MemberFunc
<summary>臨時移動実行
<return:void>
<p1:bool waitMode>移動が終わるまで待つかどうか
<comment>このマップオブジェクトに設定された臨時移動の指示内容に従って移動を開始します。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::AutoSetMoveCounter]
<nodeType>GameObject/MemberFunc
<summary>指定方向への移動準備
<return:void>
<p1:int direction4>進行方向
<comment>指定した方向に向かって移動を開始させるために移動カウンターをセットします。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::IsMoving]
<nodeType>GameObject/MemberProperty
<type>bool (読み取り専用)
<summary>移動中かどうか
<comment>このマップオブジェクトが現在移動している途中であるかどうかを示します。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::SetExtraMove]
<nodeType>GameObject/MemberFunc
<summary>臨時移動指示
<return:CMapObjectData*>自身のインスタンス
<p1:int type>指示内容
<p2:int par1>オプション整数値
<p3:string par2>オプション文字列値
<comment>このマップオブジェクトの移動内容を指示します。戻り値を使うことで連続的な記述が可能です。指示の最後に実行メソッドを呼び出して下さい。
----------------------------------------
[CSceneMap::CMapData::CMapObjectData::ApplyMapLoopPosition]
<nodeType>GameObject/MemberFunc
<summary>範囲外座標の補正
<return:void>
<comment>このマップオブジェクトがマップの範囲外に出ているとき、マップのループ設定に従って補正します。
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>マップキャラクタークラス
<comment>マップオブジェクトに関連付けられたキャラクターに関するクラスです。
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::MoveSpeed]
<nodeType>GameObject/MemberValue
<type>int
<summary>移動速度
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::AnimID]
<nodeType>GameObject/MemberValue
<type>int
<summary>アニメーション番号
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::EnabledStopAnim]
<nodeType>GameObject/MemberValue
<type>bool
<summary>静止アニメーション有無
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::EnabledWalkAnim]
<nodeType>GameObject/MemberValue
<type>bool
<summary>歩行アニメーション有無
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::NoHit]
<nodeType>GameObject/MemberValue
<type>bool
<summary>すり抜け有無
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::FixedDirection]
<nodeType>GameObject/MemberValue
<type>bool
<summary>向き固定有無
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::OneCharSize]
<nodeType>GameObject/MemberValue
<type>CSize
<summary>キャラクターサイズ
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::Graphics]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>グラフィック名
<comment>タイルセットの場合は [X:Y] の形式で示されます。
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::Direction]
<nodeType>GameObject/MemberProperty
<type>int
<summary>方向
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::GraphHandle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>グラフィックハンドル
<comment>描画に必要なハンドルです。
----------------------------------------
[CSceneMap::CMapData::CMapCharObjectData::LoadGraphics]
<nodeType>GameObject/MemberFunc
<summary>グラフィック読込
<return:void>
<p1:string fileName>ファイル名
<comment>タイルパレットの位置を示す場合は [X:Y] の形式で示します。
----------------------------------------
[CSceneMap::CMapData::CMapPlayer]
<nodeType>GameObject/Class
<summary>プレイヤークラス
<comment>マップ上のプレイヤーに関するクラスです。
----------------------------------------
[CSceneMap::CMapData::CMapPlayer::MapObject]
<nodeType>GameObject/MemberProperty
<type>CMapObjectData (読み取り専用)
<summary>マップオブジェクトMGR
<comment>マップ上の位置に関する情報を持つインスタンスです。
----------------------------------------
[CSceneMap::CMapData::CMapPlayer::CharData]
<nodeType>GameObject/MemberProperty
<type>CMapCharObjectData (読み取り専用)
<summary>マップキャラクターMGR
<comment>プレイヤーキャラに関する情報を持つインスタンスです。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData]
<nodeType>GameObject/Class
<parent>CSceneMap::CMapData::CMapCharObjectData
<summary>イベントページクラス
<comment>イベントの単一ページ情報を格納するクラスです。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::TriggerType]
<nodeType>GameObject/MemberValue
<type>int
<summary>起動条件
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::MoveType]
<nodeType>GameObject/MemberValue
<type>int
<summary>日常移動
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::MoveFrequency]
<nodeType>GameObject/MemberValue
<type>int
<summary>移動頻度
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::DrawPriority]
<nodeType>GameObject/MemberValue
<type>int
<summary>描画優先度
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::TilePalletPosition]
<nodeType>GameObject/MemberValue
<type>CPoint
<summary>タイルパレット位置
<comment>現在のグラフィックがタイルパレットである場合は、そのパレット位置を示します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::IsTilesetGraphics]
<nodeType>GameObject/MemberProperty
<type>bool (読み取り専用)
<summary>タイルグラフィックかどうか
<comment>現在のグラフィックがタイルパレットを用いているかどうかを示します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::HitRect]
<nodeType>GameObject/MemberProperty
<type>CSize (読み取り専用)
<summary>拡張接触範囲
<comment>自身の座標を起点とした接触範囲の拡張サイズです。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CMapEventPageData::LoadGraphics]
<nodeType>GameObject/MemberFunc
<summary>グラフィック読込
<return:void>
<p1:string fileName>ファイル名もしくはタイルパレット位置 (X:Y の形式)
<comment>グラフィックを変更します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData]
<nodeType>GameObject/Class
<parent>CSceneMap::CMapData::CMapObjectData
<summary>イベントクラス
<comment>イベント単体のクラスです。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::IsDummy]
<nodeType>GameObject/MemberProperty
<type>bool (読み取り専用)
<summary>ダミーイベントかどうか
<comment>スクリプトを持たない表示専用のイベントかどうかを示します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::VisibleID]
<nodeType>GameObject/MemberValue
<type>int
<summary>可視ID
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapEventData::SelfValues]
<nodeType>GameObject/MemberProperty
<type>CSelfValueData (読み取り専用)
<summary>個別変数
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapEventData::SetPageIndex]
<nodeType>GameObject/MemberFunc
<summary>ページ番号設定
<return:void>
<p1:int val>イベントページインデックス
<comment>有効なイベントのページを一時的に切り替えます。次のフレームでイベントページ判定が行われて元に戻されます。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::GetPageIndex]
<nodeType>GameObject/MemberFunc
<summary>ページ番号取得
<return:int>イベントページインデックス
<comment>現在のイベントページのインデックスを取得します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::GetPageCount]
<nodeType>GameObject/MemberFunc
<summary>ページ総数取得
<return:int>イベントページ総数
<comment>
----------------------------------------
[CSceneMap::CMapData::CMapEventData::AddPage]
<nodeType>GameObject/MemberFunc
<summary>ページ追加
<return:void>
<p1:CMapEventPageData pg>イベントページオブジェクト
<comment>このイベントにページを追加します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::AddMoveTask]
<nodeType>GameObject/MemberFunc
<summary>日常移動指示
<return:CMapEventData*>自身のインスタンス
<p1:int type>指示内容
<p2:int par1>オプション整数値
<p3:string par2>オプション文字列値
<comment>イベント日常移動の移動内容を指示します。戻り値を使って連続的な記述が可能です。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::SetDirection4]
<nodeType>GameObject/MemberFunc
<summary>4方向設定
<return:void>
<p1:int dir4>４方向
<comment>イベントの向きを設定します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::SetDirection4ToPlayer]
<nodeType>GameObject/MemberFunc
<summary>プレイヤーを向く
<return:void>
<comment>プレイヤーキャラの方向を向かせます。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::SetDirection4AgainstPlayer]
<nodeType>GameObject/MemberFunc
<summary>プレイヤーから背ける
<return:void>
<comment>プレイヤーキャラに背を向けます。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::GetDirection4ToPlayer]
<nodeType>GameObject/MemberFunc
<summary>プレイヤー方向を取得
<return:int>プレイヤーに対する向き
<comment>このイベントからプレイヤーキャラへの方向を取得します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::RouteLock]
<nodeType>GameObject/MemberProperty
<type>bool (読み取り専用)
<summary>経路固定しているかどうか
<comment>日常移動の経路を固定する設定にしているかどうかを示します。
----------------------------------------
[CSceneMap::CMapData::CMapEventData::CurrentPage]
<nodeType>GameObject/MemberProperty
<type>CMapEventPageData (読み取り専用)
<summary>現在のページ
<comment>このイベントで現在有効なページです。
----------------------------------------
[CSceneMap::CMapData]
<nodeType>GameObject/Class
<summary>マップデータクラス
<comment>マップに関する情報を管理するクラスです。
----------------------------------------
[CSceneMap::CMapData::TileSize]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>タイルサイズ
<comment>システムDBで設定されたタイルサイズです。
----------------------------------------
[CSceneMap::CMapData::ShadowTransparent]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>影層透明度
<comment>システムDBで設定された影層の透明度です。
----------------------------------------
[CSceneMap::CMapData::FogTransparent]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>フォグ透明度
<comment>システムDBで設定されたフォグの透明度です。
----------------------------------------
[CSceneMap::CMapData::MapPixelOffset]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>マップオフセット
<comment>マップ画面全体のピクセル単位の位置補正値です。
----------------------------------------
[CSceneMap::CMapData::TilePallet]
<nodeType>GameObject/MemberProperty
<type>CDatabase::CDBTileset::CTilePallet (読み取り専用)
<summary>タイルパレット
<comment>現在有効なタイルパレットのインスタンスです。
----------------------------------------
[CSceneMap::CMapData::GUID]
<nodeType>GameObject/MemberValue
<type>string
<summary>マップID
<comment>マップに対して自動で付加される一意のIDです。
----------------------------------------
[CSceneMap::CMapData::MapSize]
<nodeType>GameObject/MemberProperty
<type>CSize (読み取り専用)
<summary>マップサイズ
<comment>マップのタイル単位のサイズです。
----------------------------------------
[CSceneMap::CMapData::MapLoopOption]
<nodeType>GameObject/MemberValue
<type>int
<summary>マップループ方法
<comment>
----------------------------------------
[CSceneMap::CMapData::TilesetID]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>タイルセットID
<comment>
----------------------------------------
[CSceneMap::CMapData::MoveSpeed]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>プレイヤー標準移動速度
<comment>
----------------------------------------
[CSceneMap::CMapData::BaseMapFileName]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>カーボン元のマップファイル名
<comment>
----------------------------------------
[CSceneMap::CMapData::CurrentMapName]
<nodeType>GameObject/MemberValue
<type>string
<summary>現在のマップ名
<comment>
----------------------------------------
[CSceneMap::CMapData::CurrentMapFileName]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>現在のマップファイル名
<comment>
----------------------------------------
[CSceneMap::CMapData::FirstMapBGMRawString]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>現在のマップに設定されたBGMファイル名
<comment>ここから取得できるファイル名は、イベントやスクリプトなどによって後からBGMを変更されても追従しません。
----------------------------------------
[CSceneMap::CMapData::FirstMapBGSRawString]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>現在のマップに設定されたBGSファイル名
<comment>ここから取得できるファイル名は、イベントやスクリプトなどによって後からBGSを変更されても追従しません。
----------------------------------------
[CSceneMap::CMapData::BackHandle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>遠景グラフィックハンドル
<comment>
----------------------------------------
[CSceneMap::CMapData::CurrentMapBackFileName]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>現在の遠景ファイル名
<comment>
----------------------------------------
[CSceneMap::CMapData::BackScrollType]
<nodeType>GameObject/MemberValue
<type>int
<summary>遠景スクロール方法
<comment>
----------------------------------------
[CSceneMap::CMapData::BackScrollSpeed]
<nodeType>GameObject/MemberValue
<type>int
<summary>遠景スクロール速度
<comment>
----------------------------------------
[CSceneMap::CMapData::FogHandle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>フォググラフィックハンドル
<comment>
----------------------------------------
[CSceneMap::CMapData::CurrentFogFileName]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>フォグファイル名
<comment>
----------------------------------------
[CSceneMap::CMapData::FogScrollType]
<nodeType>GameObject/MemberValue
<type>int
<summary>フォグスクロール方法
<comment>
----------------------------------------
[CSceneMap::CMapData::FogScrollSpeed]
<nodeType>GameObject/MemberValue
<type>int
<summary>フォグスクロール速度
<comment>
----------------------------------------
[CSceneMap::CMapData::FogBlend]
<nodeType>GameObject/MemberValue
<type>int
<summary>フォグ合成方法
<comment>
----------------------------------------
[CSceneMap::CMapData::Units]
<nodeType>GameObject/MemberProperty
<type>CIntegerArray (読み取り専用)
<summary>ユニットIDリスト
<comment>整数型の配列です。
----------------------------------------
[CSceneMap::CMapData::EncounterRate]
<nodeType>GameObject/MemberValue
<type>int
<summary>エンカウント係数
<comment>
----------------------------------------
[CSceneMap::CMapData::BattleBackFileName]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>戦闘背景ファイル名
<comment>
----------------------------------------
[CSceneMap::CMapData::Player]
<nodeType>GameObject/MemberProperty
<type>CMapPlayer (読み取り専用)
<summary>プレイヤー
<comment>プレイヤーオブジェクトのインスタンスです。
----------------------------------------
[CSceneMap::CMapData::AnimCounter]
<nodeType>GameObject/MemberProperty
<type>int
<summary>アニメーションカウンター
<comment>アニメーション用の累積フレームカウンターです。この数値をフレーム間隔数で割ることでアニメーション番号を求めることができます。
----------------------------------------
[CSceneMap::CMapData::LoadMap]
<nodeType>GameObject/MemberFunc
<summary>マップ読込
<return:void>
<p1:string fileName>ファイル名
<p2:bool exceptEV>イベントスクリプトを呼び出さないフラグ
<comment>指定したマップを読み込みます。演出を行わない場合、即座に画面に反映されます。
----------------------------------------
[CSceneMap::CMapData::AfterLoadMap]
<nodeType>GameObject/MemberFunc
<summary>マップ移動後の共通処理
<return:void>
<comment>マップBGM/BGSの再生や、イベントスクリプトの呼び出し等を行います。
----------------------------------------
[CSceneMap::CMapData::GetTile]
<nodeType>GameObject/MemberFunc
<summary>タイルパレット位置取得
<return:CPoint>タイルパレット上の位置
<p1:int layer>レイヤーインデックス
<p2:int x>マップX座標
<p3:int y>マップY座標
<comment>マップ上の指定した座標の、タイルパレット上の座標を取得します。
----------------------------------------
[CSceneMap::CMapData::SetTile]
<nodeType>GameObject/MemberFunc
<summary>タイルパレット位置設定
<return:void>
<p1:int layer>レイヤーインデックス
<p2:int x>マップX座標
<p3:int y>マップY座標
<p4:int tilex>設定後のタイルパレットX座標
<p5:int tiley>設定後のタイルパレットY座標
<p6:bool absolute>オートタイルを修正するかどうか
<comment>マップ上の指定した座標の、タイルパレット上の座標を設定します。
----------------------------------------
[CSceneMap::CMapData::GetQuarterTile]
<nodeType>GameObject/MemberFunc
<summary>タイル1/4取得
<return:int>1/4タイル位置
<p1:int layer>レイヤーインデックス
<p2:int x>マップX座標
<p3:int y>マップY座標
<p4:int q>1/4タイル位置
<comment>マップ上の指定した座標の、1/4単位のタイル情報を取得します。影層はTRUE/FALSE、その他のレイヤーはオートタイルのパターン番号です。
----------------------------------------
[CSceneMap::CMapData::SetQuarterTile]
<nodeType>GameObject/MemberFunc
<summary>タイル1/4設定
<return:void>
<p1:int layer>レイヤーインデックス
<p2:int x>マップX座標
<p3:int y>マップY座標
<p4:int q>1/4タイル位置
<p5:int val>設定値
<comment>マップ上の指定した座標の、1/4単位のタイル情報を設定します。影層はTRUE/FALSE、その他のレイヤーはオートタイルのパターン番号です。
----------------------------------------
[CSceneMap::CMapData::IsWalkableTile]
<nodeType>GameObject/MemberFunc
<summary>歩行可否判定
<return:bool>歩けるタイルである場合はTrue
<p1:int x>マップX座標
<p2:int y>マップY座標
<comment>マップ上の指定した座標が歩けるかどうかを取得します。
----------------------------------------
[CSceneMap::CMapData::CheckTileGroupNum]
<nodeType>GameObject/MemberFunc
<summary>グループ番号検証
<return:int>見つかったレイヤーのインデックス。見つからなかった場合は -1 が返されます。
<p1:int x>マップX座標
<p2:int y>マップY座標
<p3:int groupNum>検証するグループ番号
<comment>タイルセットDBで設定したグループ番号情報に基づいて、指定したタイルに該当番号が設定されているかどうかを検証します。
----------------------------------------
[CSceneMap::CMapData::GetTileGroupNum]
<nodeType>GameObject/MemberFunc
<summary>グループ番号取得
<return:int>タイルセットDBで設定されたグループ番号
<p1:int layer>レイヤーインデックス
<p2:int x>マップX座標
<p3:int y>マップY座標
<comment>指定したタイルのグループ番号を取得します。
----------------------------------------
[CSceneMap::CMapData::DrawMap]
<nodeType>GameObject/MemberFunc
<summary>マップ描画
<return:void>
<p1:int tileAnimLoopFrame>タイルアニメーションが一周するのに要するフレーム数
<comment>現在のマップを描画します。これには遠景やフォグも含まれます。
----------------------------------------
[CSceneMap::CMapData::LoadBack]
<nodeType>GameObject/MemberFunc
<summary>遠景読込
<return:void>
<p1:string fileName>ファイル名
<comment>
----------------------------------------
[CSceneMap::CMapData::DrawBack]
<nodeType>GameObject/MemberFunc
<summary>遠景描画
<return:void>
<comment>
----------------------------------------
[CSceneMap::CMapData::LoadFog]
<nodeType>GameObject/MemberFunc
<summary>フォグ読込
<return:void>
<p1:string fileName>ファイル名
<comment>
----------------------------------------
[CSceneMap::CMapData::DrawFog]
<nodeType>GameObject/MemberFunc
<summary>フォグ描画
<return:void>
<comment>
----------------------------------------
[CSceneMap::CMapData::EVCount]
<nodeType>GameObject/MemberFunc
<summary>イベント総数取得
<return:int>イベント数
<comment>現在のマップに配置されているイベントの数を取得します。
----------------------------------------
[CSceneMap::CMapData::EVReservedCount]
<nodeType>GameObject/MemberFunc
<summary>イベント実行予約数取得
<return:int>イベントの起動が予約されている数
<comment>次のフレームで実行するように予約されているイベントの数を取得します。
----------------------------------------
[CSceneMap::CMapData::GetEVFixedID]
<nodeType>GameObject/MemberFunc
<summary>イベントID取得
<return:int>イベントのFixedID。該当IDが存在しない場合は -1 が返されます。
<p1:int visibleID>イベントの可視ID
<comment>ユーザーが自由に設定できる可視IDから、FixedIDを取得します。可視IDが重複している場合の動作は不定となります。
----------------------------------------
[CSceneMap::CMapData::EVClear]
<nodeType>GameObject/MemberFunc
<summary>イベント全削除
<return:void>
<comment>すべてのイベントを削除します。
----------------------------------------
[CSceneMap::CMapData::EVDeleteFromID]
<nodeType>GameObject/MemberFunc
<summary>指定IDのイベント削除
<return:void>
<p1:int id>イベントID
<comment>指定したIDのイベントを削除します。
----------------------------------------
[CSceneMap::CMapData::EVExists]
<nodeType>GameObject/MemberFunc
<summary>イベント存在検証
<return:bool>存在している場合はTrue
<p1:int id>イベントID
<comment>指定したIDのイベントが存在しているかどうかを検証します。
----------------------------------------
[CSceneMap::CMapData::EVGetData]
<nodeType>GameObject/MemberFunc
<summary>イベントデータ取得
<return:CMapEventData*>イベント単体データのインスタンス
<p1:int id>イベントID
<comment>指定したIDのイベントデータを取得します。
----------------------------------------
[CSceneMap::CMapData::EVGetDataFromIndex]
<nodeType>GameObject/MemberFunc
<summary>インデックスからイベントデータ取得
<return:CMapEventData*>イベント単体データのインスタンス
<p1:int idx>イベントリスト上のインデックス
<comment>指定したインデックスにあたるイベントデータを取得します。
----------------------------------------
[CSceneMap::CMapData::ReserveEV]
<nodeType>GameObject/MemberFunc
<summary>イベント実行予約
<return:void>
<p1:int EVID>イベントID
<comment>指定したIDのイベントを次のフレームで実行する予約を行います。
----------------------------------------
[CSceneMap::CMapData::RunEV]
<nodeType>GameObject/MemberFunc
<summary>イベントスクリプト呼出
<return:bool>
<p1:int EVID>イベントID
<p2:int type>イベントスクリプト種別
<p3:bool pushRunningStack>実行中のイベントとして登録するかどうか
<comment>指定したIDの指定した種別のスクリプトを呼び出します。
----------------------------------------
[CSceneMap::CMapData::SetEV]
<nodeType>GameObject/MemberFunc
<summary>イベント配置
<return:void>
<p1:int EVID>イベントID
<p2:int visibleID>可視ID
<p3:int x>マップX座標
<p4:int y>マップY座標
<p5:string name>イベント名
<comment>ページを持たない空のイベントを生成します。
----------------------------------------
[CSceneMap::CMapData::AddEVPage]
<nodeType>GameObject/MemberFunc
<summary>イベントページ追加
<return:void>
<p1:int EVID>イベントID
<p2:string param>パラメーター
<p3:string graph>グラフィック名
<comment>指定したIDのイベントにページを追加します。このメソッドはエディターシステム向けのため、ユーザーが呼び出す必要はありません。
----------------------------------------
[CSceneMap::CMapData::SetDummyEV]
<nodeType>GameObject/MemberFunc
<summary>ダミーイベント配置
<return:int>イベントID
<p1:int x>マップX座標
<p2:int y>マップY座標
<p3:string graph>グラフィック名
<p4:int direction4>４方向
<p5:int animID>アニメーション番号
<p6:int priority>描画優先度
<p7:bool enabledStopAnim>静止アニメーション有無
<p8:bool enabledWalkAnim>歩行アニメーション有無
<p9:bool fixedDirection>向き固定有無
<comment>スクリプトを持たない表示専用のイベントを追加します。
----------------------------------------
[CSceneMap::CMapData::IsEVRunning]
<nodeType>GameObject/MemberProperty
<type>bool (読み取り専用)
<summary>イベントが実行中かどうか
<comment>何らかのイベントの実行内容を処理しているかどうかを示します。
----------------------------------------
[CSceneMap::CMapData::ClearDummyEVs]
<nodeType>GameObject/MemberFunc
<summary>ダミーイベント全削除
<return:void>
<comment>スクリプトを持たない表示専用のイベントをすべて削除します。
----------------------------------------
[CSceneMap::CMapData::ThisEVData]
<nodeType>GameObject/MemberProperty
<type>CMapEventData (読み取り専用)
<summary>実行中イベント
<comment>現在実行しているイベントのインスタンスです。
----------------------------------------
[CSceneMap::CMapData::CheckBeforeMove]
<nodeType>GameObject/MemberFunc
<summary>障害物検証
<return:bool>指定した方向に進めるかどうか
<p1:int EVID>主体イベントID (プレイヤーは-1)
<p2:int x>マップ現在位置X座標
<p3:int y>マップ現在位置Y座標
<p4:int direction4>４方向
<p5:bool EVTrigger>接触イベントの起動判定を行うかどうか
<comment>指定した方向にマップオブジェクトが進めるかどうかを検証します。すり抜けが有効であるときは常に進めます。
----------------------------------------
[CSceneMap::CMapData::CheckOverlapTriggerEV]
<nodeType>GameObject/MemberFunc
<summary>一致トリガーイベント起動判定
<return:bool>この処理でイベントの起動が予約されたかどうか
<p1:int EVID>主体イベントID (プレイヤーは-1)
<p2:int x>マップ現在位置X座標
<p3:int y>マップ現在位置Y座標
<comment>指定したイベントの現在位置でイベントが起動するかどうかを検証します。どちらかに当たり判定がなく、起動条件が「接触」に設定されているものが有効となります。起動する場合は次のフレームで実行する予約が行われます。
----------------------------------------
[CSceneMap::CMapData::CheckPressEnterTriggerEV]
<nodeType>GameObject/MemberFunc
<summary>決定キートリガーイベント起動判定
<return:bool>この処理でイベントの起動が予約されたかどうか
<comment>プレイヤーの現在位置で決定キーを押したときにイベントが起動するかどうかを検証します。起動する場合は次のフレームで実行する予約が行われます。
----------------------------------------
[CSceneMap::CShopData]
<nodeType>GameObject/Class
<summary>ショップデータクラス
<comment>ショップに関する情報を管理するクラスです。
----------------------------------------
[CSceneMap::CShopData::Add]
<nodeType>GameObject/MemberFunc
<summary>商品追加
<return:void>
<p1:int id>アイテムID
<comment>商品リストにアイテムを追加します。
----------------------------------------
[CSceneMap::CShopData::Clear]
<nodeType>GameObject/MemberFunc
<summary>商品全削除
<return:void>
<comment>商品リストをクリアします。
----------------------------------------
[CSceneMap::CShopData::GetCount]
<nodeType>GameObject/MemberFunc
<summary>商品数取得
<return:int>登録されている商品数
<comment>
----------------------------------------
[CSceneMap::CShopData::Get]
<nodeType>GameObject/MemberFunc
<summary>商品取得
<return:CIDValueData>商品データ
<p1:int index>商品リスト上のインデックス
<comment>商品リスト上の指定したインデックスからID、名前、価格を持ったデータを取得します。これ以上の情報を得たい場合はIDからアイテムDBにアクセスして下さい。
----------------------------------------
[CSceneMap::CShopData::SortItemsByVisibleID]
<nodeType>GameObject/MemberFunc
<summary>商品並び替え/可視ID順
<return:void>
<p1:bool reverse>逆順にするかどうか
<comment>商品リストを並び替えます。
----------------------------------------
[CSceneMap::CShopData::SortItemsByName]
<nodeType>GameObject/MemberFunc
<summary>商品並び替え/名前順
<return:void>
<p1:bool reverse>逆順にするかどうか
<comment>商品リストを並び替えます。
----------------------------------------
[CSceneMap::CShopData::SortItemsByPrice]
<nodeType>GameObject/MemberFunc
<summary>商品並び替え/価格順
<return:void>
<p1:bool reverse>逆順にするかどうか
<comment>商品リストを並び替えます。
----------------------------------------
[CSceneMap]
<nodeType>GameObject/Class
<parent>CSceneBase
<summary>マップシーンクラス
<comment>マップシーンを管理するクラスです。
----------------------------------------
[CSceneMap::MapData]
<nodeType>GameObject/MemberProperty
<type>CMapData (読み取り専用)
<summary>マップMGR
<comment>マップ情報のインスタンスです。
----------------------------------------
[CSceneMap::ShopData]
<nodeType>GameObject/MemberProperty
<type>CShopData (読み取り専用)
<summary>ショップMGR
<comment>ショップ情報のインスタンスです。
----------------------------------------
[CSceneMap::ShowMessage]
<nodeType>GameObject/MemberFunc
<summary>汎用/会話メッセージ
<return:void>
<p1:int faceID>フェイスID
<p2:string speakerName>話者名
<p3:string msg>メッセージ内容
<comment>会話メッセージを表示します。実際の処理内容はスクリプトのイベントハンドラーで実装されます。
----------------------------------------
[CSceneMap::ChangeMap]
<nodeType>GameObject/MemberFunc
<summary>汎用/マップ移動
<return:void>
<p1:string fileName>ファイル名
<p2:int x>移動先X座標
<p3:int y>移動先Y座標
<p4:int direction4>４方向
<comment>画面演出付きでマップを移動させます。実際の処理内容はスクリプトのイベントハンドラーで実装されます。
----------------------------------------
[CSceneMap::TurnLeft4]
<nodeType>GameObject/ClassFunc
<summary>左４方向を取得
<return:int>左に向いた４方向
<p1:int direction4>起点４方向
<comment>指定した方向から相対的に左を向いた方向を取得します。
----------------------------------------
[CSceneMap::TurnLeft8]
<nodeType>GameObject/ClassFunc
<summary>左８方向を取得
<return:int>左に向いた８方向
<p1:int direction8>起点８方向
<comment>指定した方向から相対的に左を向いた方向を取得します。
----------------------------------------
[CSceneMap::TurnRight4]
<nodeType>GameObject/ClassFunc
<summary>右４方向を取得
<return:int>右に向いた４方向
<p1:int direction4>起点４方向
<comment>指定した方向から相対的に右を向いた方向を取得します。
----------------------------------------
[CSceneMap::TurnRight8]
<nodeType>GameObject/ClassFunc
<summary>右８方向を取得
<return:int>右に向いた８方向
<p1:int direction8>起点４方向
<comment>指定した方向から相対的に右を向いた方向を取得します。
----------------------------------------
[CSceneMap::TurnHalf4]
<nodeType>GameObject/ClassFunc
<summary>後方４方向を取得
<return:int>後ろに向いた４方向
<p1:int direction4>起点４方向
<comment>指定した方向から相対的に後ろを向いた方向を取得します。
----------------------------------------
[CSceneMap::TurnHalf8]
<nodeType>GameObject/ClassFunc
<summary>後方８方向を取得
<return:int>後ろに向いた８方向
<p1:int direction8>起点８方向
<comment>指定した方向から相対的に後ろを向いた方向を取得します。
----------------------------------------
[CSceneMap::PointToDirection4]
<nodeType>GameObject/ClassFunc
<summary>相対位置から４方向を取得
<return:int>対応する４方向
<p1:const CPoint& pos>相対位置
<comment>原点を起点とした相対位置から対応する方向を取得します。相対位置の大小は問いません。
----------------------------------------
[CSceneMap::PointToDirection8]
<nodeType>GameObject/ClassFunc
<summary>相対位置を８方向を取得
<return:int>対応する８方向
<p1:const CPoint& pos>相対位置
<comment>原点を起点とした相対位置から対応する方向を取得します。相対位置の大小は問いません。
----------------------------------------
[CSceneMap::Direction4ToPoint]
<nodeType>GameObject/ClassFunc
<summary>４方向から一歩分の相対位置を取得
<return:CPoint>一歩分の相対位置
<p1:int direction4>進行４方向
<comment>指定した方向に一歩進んだ相対座標を取得します。
----------------------------------------
[CSceneMap::Direction8ToPoint]
<nodeType>GameObject/ClassFunc
<summary>８方向から一歩分の相対位置を取得
<return:CPoint>一歩分の相対位置
<p1:int direction8>進行８方向
<comment>指定した方向に一歩進んだ相対座標を取得します。
----------------------------------------
[CMultiThread::CThreadInfo]
<nodeType>GameObject/Class
<parent>CNullCheck
<summary>疑似スレッド単体クラス
<comment>毎フレーム実行される関数情報を格納するクラスです。
----------------------------------------
[CMultiThread::CThreadInfo::Name]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>スレッド名
<comment>任意に設定できるスレッド名です。変更はできません。
----------------------------------------
[CMultiThread::CThreadInfo::SQFuncName]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>スクリプト関数名
<comment>スクリプトの関数名です。変更はできません。
----------------------------------------
[CMultiThread::CThreadInfo::Suspended]
<nodeType>GameObject/MemberProperty
<type>bool
<summary>停止中かどうか
<comment>
----------------------------------------
[CMultiThread::CThreadInfo::Protected]
<nodeType>GameObject/MemberProperty
<type>bool
<summary>保護中かどうか
<comment>有効であるとき、シーンを遷移しても破棄されません。
----------------------------------------
[CMultiThread::CThreadInfo::Handle]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>ハンドル
<comment>一意の識別番号を示します。
----------------------------------------
[CMultiThread::CThreadInfo::AddValueInteger]
<nodeType>GameObject/MemberFunc
<summary>変数(整数型)を追加
<return:CThreadInfo*>スレッドオブジェクトを再帰的に返します。
<p1:string name>任意の変数名
<p2:int Value>初期値
<comment>このスレッドが保有する新たな変数を登録します。
----------------------------------------
[CMultiThread::CThreadInfo::AddValueDecimal]
<nodeType>GameObject/MemberFunc
<summary>変数(実数型)を追加
<return:CThreadInfo*>スレッドオブジェクトを再帰的に返します。
<p1:string name>任意の変数名
<p2:double Value>初期値
<comment>このスレッドが保有する新たな変数を登録します。
----------------------------------------
[CMultiThread::CThreadInfo::AddValueString]
<nodeType>GameObject/MemberFunc
<summary>変数(文字列型)を追加
<return:CThreadInfo*>スレッドオブジェクトを再帰的に返します。
<p1:string name>任意の変数名
<p2:string Value>初期値
<comment>このスレッドが保有する新たな変数を登録します。
----------------------------------------
[CMultiThread::CThreadInfo::SetValueInteger]
<nodeType>GameObject/MemberFunc
<summary>変数(整数型)値を設定
<return:void>
<p1:string name>変数名
<p2:int Value>値
<comment>
----------------------------------------
[CMultiThread::CThreadInfo::SetValueDecimal]
<nodeType>GameObject/MemberFunc
<summary>変数(実数型)値を設定
<return:void>
<p1:string name>変数名
<p2:double Value>値
<comment>
----------------------------------------
[CMultiThread::CThreadInfo::SetValueString]
<nodeType>GameObject/MemberFunc
<summary>変数(文字列型)値を設定
<return:void>
<p1:string name>変数名
<p2:string Value>値
<comment>
----------------------------------------
[CMultiThread::CThreadInfo::GetValueInteger]
<nodeType>GameObject/MemberFunc
<summary>変数(整数型)値を取得
<return:int>値
<p1:string name>変数名
<comment>
----------------------------------------
[CMultiThread::CThreadInfo::GetValueDecimal]
<nodeType>GameObject/MemberFunc
<summary>変数(実数型)値を取得
<return:double>値
<p1:string name>変数名
<comment>
----------------------------------------
[CMultiThread::CThreadInfo::GetValueString]
<nodeType>GameObject/MemberFunc
<summary>変数(文字列型)値を取得
<return:string>値
<p1:string name>変数名
<comment>
----------------------------------------
[CMultiThread]
<nodeType>GameObject/Class
<summary>疑似スレッド管理クラス
<comment>毎フレーム実行される関数情報を統括管理するクラスです。
----------------------------------------
[CMultiThread::AddThread]
<nodeType>GameObject/MemberFunc
<summary>スレッド追加
<return:CMultiThread::CThreadInfo*>追加されたスレッドのオブジェクト
<p1:string name>スレッド名
<p2:string funcName>スクリプトの関数名 (整数型の引数を一つ持つ必要があります)
<p3:int enableSceneID>有効なシーンID
<p4:bool isProtected>保護状態にするかどうか
<comment>スクリプト用の新規スレッドを追加します。対象とする関数は既に読み込まれており、整数型の引数を一つ持ち、戻り値として true/false を返す必要があります。引数にはこのスレッドのハンドルが渡されます。戻り値が false のとき継続、true のときスレッド終了を意味します。
----------------------------------------
[CMultiThread::GetThreadCount]
<nodeType>GameObject/MemberFunc
<summary>スレッド数取得
<return:int>現在登録されているスレッドの総数
<comment>現在登録されているスレッドの総数を取得します。
----------------------------------------
[CMultiThread::CountThread]
<nodeType>GameObject/MemberFunc
<summary>指定したスレッドを数える
<return:int>ヒットした数
<p1:string name>スレッド名
<comment>指定したスレッド名を持つスレッドの総数を数えます。
----------------------------------------
[CMultiThread::GetThread]
<nodeType>GameObject/MemberFunc
<summary>スレッド取得
<return:CThreadInfo*>スレッドのオブジェクト
<p1:int handle>一意の識別番号
<comment>スクリプト用のスレッド関数に引数として渡される識別番号を用いてスレッドのオブジェクトを取得します。
----------------------------------------
[CMultiThread::Clear]
<nodeType>GameObject/MemberFunc
<summary>すべて削除
<return:void>
<p1:bool LeaveCurrentScene>現在のシーンに該当するスレッドを残すかどうか
<comment>すべてのスレッドを削除します。ただし、保護されているスレッドは除きます。
----------------------------------------
[CMultiThread::DeleteThread]
<nodeType>GameObject/MemberFunc
<summary>スレッド削除
<return:void>
<p1:string name>スレッド名
<comment>指定したスレッド名を持つスレッドを削除します。
----------------------------------------
[CMultiThread::SetSuspend]
<nodeType>GameObject/MemberFunc
<summary>停止切替
<return:void>
<p1:string name>スレッド名
<p2:bool IsSuspended>停止するかどうか
<comment>指定したスレッドを停止させます。
----------------------------------------
[CMultiThread::SetProtect]
<nodeType>GameObject/MemberFunc
<summary>保護切替
<return:void>
<p1:string name>スレッド名
<p2:bool IsProtected>保護するかどうか
<comment>指定したスレッドを保護状態にします。
----------------------------------------
[CMultiThread::GetSuspend]
<nodeType>GameObject/MemberFunc
<summary>停止状態取得
<return:bool>停止しているかどうか
<p1:string name>スレッド名
<comment>指定したスレッドが停止しているかどうかを取得します。
----------------------------------------
[CMultiThread::GetProtect]
<nodeType>GameObject/MemberFunc
<summary>保護状態取得
<return:bool>保護されているかどうか
<p1:string name>スレッド名
<comment>指定したスレッドが保護しているかどうかを取得します。
----------------------------------------
[CMultiThread::WaitForThread]
<nodeType>GameObject/MemberFunc
<summary>スレッド終了待機
<return:void>
<p1:string name>スレッド名
<p2:double MaxSec>最大秒数
<comment>指定したスレッドが終了するまで待機します。スレッドが無限ループに陥ったときのために、必ず最大秒数を指定するようになっています。
----------------------------------------
[CFPS]
<nodeType>GameObject/Class
<summary>FPS管理クラス
<comment>フレームレートを管理するクラスです。
----------------------------------------
[CFPS::SkipFrameCount]
<nodeType>GameObject/MemberProperty
<type>int
<summary>フレームスキップ数
<comment>画面更新をスキップするフレーム数です。スペックの低いパソコンはこの数値を大きくすると改善できるかもしれません。
----------------------------------------
[CFPS::Update]
<nodeType>GameObject/MemberFunc
<summary>画面更新
<return:void>
<comment>FPSを維持しながら画面を更新します。
----------------------------------------
[TS::System::DXInterpolation]
<nodeType>Const/Enum
<summary>画像補間法
<comment>画像を拡大・縮小したときの補間方法です。
----------------------------------------
[TS::System::DXInterpolation::Nearest]
<nodeType>Const/EnumMember
<summary>最近傍補間
<comment>ニアレスト法
----------------------------------------
[TS::System::DXInterpolation::Bilinear]
<nodeType>Const/EnumMember
<summary>線形補間
<comment>バイリニア法
----------------------------------------
[TS::System::BlendMode]
<nodeType>Const/Enum
<summary>画像合成法
<comment>画像を合成する方法です。
----------------------------------------
[TS::System::BlendMode::Alpha]
<nodeType>Const/EnumMember
<summary>アルファ
<comment>アルファブレンド（透過ブレンド）
----------------------------------------
[TS::System::BlendMode::Add]
<nodeType>Const/EnumMember
<summary>加算
<comment>
----------------------------------------
[TS::System::BlendMode::Subtract]
<nodeType>Const/EnumMember
<summary>減算
<comment>
----------------------------------------
[TS::System::BlendMode::Multiply]
<nodeType>Const/EnumMember
<summary>乗算
<comment>
----------------------------------------
[TS::System::BlendMode::Invsrc]
<nodeType>Const/EnumMember
<summary>反対色
<comment>
----------------------------------------
[TS::DB::DBDefaultColumnIndices]
<nodeType>Const/Enum
<summary>DB既定列Index
<comment>標準データベースの左から３列のインデックスです。
----------------------------------------
[TS::DB::DBDefaultColumnIndices::FixedID]
<nodeType>Const/EnumMember
<summary>FixedID
<comment>ユーザーによって変更できない固定のIDです。
----------------------------------------
[TS::DB::DBDefaultColumnIndices::VisibleID]
<nodeType>Const/EnumMember
<summary>VisibleID
<comment>ユーザーが自由に変更できるIDです。これは通常、並び替えに用いられます。
----------------------------------------
[TS::DB::DBDefaultColumnIndices::Name]
<nodeType>Const/EnumMember
<summary>名前
<comment>
----------------------------------------
[TS::DB::DBCurveDataIndices]
<nodeType>Const/Enum
<summary>DB曲線Index
<comment>データベースで使われる曲線情報の順序です。
----------------------------------------
[TS::DB::DBCurveDataIndices::IDName]
<nodeType>Const/EnumMember
<summary>ID/名前
<comment>
----------------------------------------
[TS::DB::DBCurveDataIndices::Base]
<nodeType>Const/EnumMember
<summary>基底値
<comment>
----------------------------------------
[TS::DB::DBCurveDataIndices::Coefficient]
<nodeType>Const/EnumMember
<summary>係数
<comment>
----------------------------------------
[TS::DB::DBCurveDataIndices::Index]
<nodeType>Const/EnumMember
<summary>指数
<comment>
----------------------------------------
[TS::DB::DBCurveDataIndices::Count]
<nodeType>Const/EnumMember
<summary>情報数
<comment>
----------------------------------------
[TS::DB::DBElementIndices]
<nodeType>Const/Enum
<summary>基本要素DBIndex
<comment>基本要素DBのサブDBの順序です。
----------------------------------------
[TS::DB::DBElementIndices::Parameter]
<nodeType>Const/EnumMember
<summary>パラメーター
<comment>
----------------------------------------
[TS::DB::DBElementIndices::Attribute]
<nodeType>Const/EnumMember
<summary>属性
<comment>
----------------------------------------
[TS::DB::DBElementIndices::SkillType]
<nodeType>Const/EnumMember
<summary>スキル種別
<comment>
----------------------------------------
[TS::DB::DBElementIndices::ItemType]
<nodeType>Const/EnumMember
<summary>アイテム大種別
<comment>
----------------------------------------
[TS::DB::DBElementIndices::ItemSubType]
<nodeType>Const/EnumMember
<summary>アイテム小種別
<comment>
----------------------------------------
[TS::DB::DBValueIndices]
<nodeType>Const/Enum
<summary>変数DBIndex
<comment>変数DBのサブDBの順序です。
----------------------------------------
[TS::DB::DBValueIndices::CommonFlag]
<nodeType>Const/EnumMember
<summary>共通フラグ
<comment>
----------------------------------------
[TS::DB::DBValueIndices::CommonInteger]
<nodeType>Const/EnumMember
<summary>共通変数
<comment>
----------------------------------------
[TS::DB::DBValueIndices::CommonString]
<nodeType>Const/EnumMember
<summary>共通文字変数
<comment>
----------------------------------------
[TS::DB::DBValueIndices::SelfActor]
<nodeType>Const/EnumMember
<summary>アクター個別変数
<comment>パーティキャラ・エネミーで共通の変数です。
----------------------------------------
[TS::DB::DBValueIndices::SelfClass]
<nodeType>Const/EnumMember
<summary>クラス個別変数
<comment>
----------------------------------------
[TS::DB::DBValueIndices::SelfUse]
<nodeType>Const/EnumMember
<summary>直接効果個別変数
<comment>アイテム・スキルで共通の変数です。
----------------------------------------
[TS::DB::DBValueIndices::SelfState]
<nodeType>Const/EnumMember
<summary>間接効果個別変数
<comment>
----------------------------------------
[TS::DB::DBValueIndices::SelfUnit]
<nodeType>Const/EnumMember
<summary>ユニット個別変数
<comment>
----------------------------------------
[TS::DB::DBValueIndices::SelfEvent]
<nodeType>Const/EnumMember
<summary>マップイベント個別変数
<comment>
----------------------------------------
[TS::DB::DBInitIndices]
<nodeType>Const/Enum
<summary>初期設定DBIndex
<comment>初期設定DBのデータ順序です。
----------------------------------------
[TS::DB::DBInitIndices::Party]
<nodeType>Const/EnumMember
<summary>パーティ隊列
<comment>
----------------------------------------
[TS::DB::DBInitIndices::PartyButton]
<nodeType>Const/EnumMember
<summary>パーティ隊列（ボタン）
<comment>パーティ隊列をセットするためのボタン列です。
----------------------------------------
[TS::DB::DBInitIndices::Item]
<nodeType>Const/EnumMember
<summary>所持アイテム
<comment>
----------------------------------------
[TS::DB::DBInitIndices::ItemButton]
<nodeType>Const/EnumMember
<summary>所持アイテム（ボタン）
<comment>所持アイテムをセットするためのボタン列です。
----------------------------------------
[TS::DB::DBInitIndices::Money]
<nodeType>Const/EnumMember
<summary>所持金
<comment>
----------------------------------------
[TS::DB::DBMaterialIndices]
<nodeType>Const/Enum
<summary>素材DBIndex
<comment>素材DBのサブDBの順序です。
----------------------------------------
[TS::DB::DBMaterialIndices::Face]
<nodeType>Const/EnumMember
<summary>フェイスグラフィック
<comment>
----------------------------------------
[TS::DB::DBMaterialIndices::Graphics]
<nodeType>Const/EnumMember
<summary>汎用グラフィック
<comment>
----------------------------------------
[TS::DB::DBMaterialIndices::Sound]
<nodeType>Const/EnumMember
<summary>汎用サウンド
<comment>
----------------------------------------
[TS::DB::DBMaterialIndices::Font]
<nodeType>Const/EnumMember
<summary>汎用フォント
<comment>
----------------------------------------
[TS::DB::DBUnitEnemyIndices]
<nodeType>Const/Enum
<summary>ユニットDBのエネミー情報順序
<comment>ユニットDBのエネミー情報の順序です。
----------------------------------------
[TS::DB::DBUnitEnemyIndices::FixedID]
<nodeType>Const/EnumMember
<summary>FixedID
<comment>
----------------------------------------
[TS::DB::DBUnitEnemyIndices::Position]
<nodeType>Const/EnumMember
<summary>表示位置
<comment>
----------------------------------------
[TS::DB::DBEffectColumnIndices]
<nodeType>Const/Enum
<summary>エフェクトDBIndex
<comment>エフェクトDBのデータ順序です。
----------------------------------------
[TS::DB::DBEffectColumnIndices::FrameLength]
<nodeType>Const/EnumMember
<summary>フレーム数
<comment>
----------------------------------------
[TS::DB::DBEffectColumnIndices::DrawDest]
<nodeType>Const/EnumMember
<summary>描画基準
<comment>
----------------------------------------
[TS::DB::DBEffectColumnIndices::Layers]
<nodeType>Const/EnumMember
<summary>レイヤー数
<comment>
----------------------------------------
[TS::DB::DBTilesetColumnIndices]
<nodeType>Const/Enum
<summary>タイルセットDBIndex
<comment>タイルセットDBのデータ順序です。この列挙体は標準３列を抜いています。
----------------------------------------
[TS::DB::DBTilesetColumnIndices::Comment]
<nodeType>Const/EnumMember
<summary>メモ欄
<comment>
----------------------------------------
[TS::DB::DBTilesetColumnIndices::AutoTiles]
<nodeType>Const/EnumMember
<summary>オートタイルファイルリスト
<comment>
----------------------------------------
[TS::DB::DBTilesetColumnIndices::ObjTiles]
<nodeType>Const/EnumMember
<summary>オブジェクトタイルリスト
<comment>
----------------------------------------
[TS::DB::DBEffectViewPosition]
<nodeType>Const/Enum
<summary>エフェクトDB描画基準
<comment>エフェクトが表示される基準点です。
----------------------------------------
[TS::DB::DBEffectViewPosition::Each]
<nodeType>Const/EnumMember
<summary>対象個別
<comment>
----------------------------------------
[TS::DB::DBEffectViewPosition::OnlyOne]
<nodeType>Const/EnumMember
<summary>対象一括
<comment>
----------------------------------------
[TS::DB::DBEffectViewPosition::CenterScreen]
<nodeType>Const/EnumMember
<summary>画面中心
<comment>
----------------------------------------
[TS::DBLiteral::UseType]
<nodeType>Const/Enum
<summary>直接効果
<comment>
----------------------------------------
[TS::DBLiteral::UseType::Script]
<nodeType>Const/EnumMember
<summary>スクリプト指定
<comment>
----------------------------------------
[TS::DBLiteral::UseType::Physic]
<nodeType>Const/EnumMember
<summary>物理攻撃
<comment>
----------------------------------------
[TS::DBLiteral::UseType::Magic]
<nodeType>Const/EnumMember
<summary>魔法攻撃
<comment>
----------------------------------------
[TS::DBLiteral::UseType::Heal]
<nodeType>Const/EnumMember
<summary>回復
<comment>
----------------------------------------
[TS::DBLiteral::UseType::Utility]
<nodeType>Const/EnumMember
<summary>補助
<comment>
----------------------------------------
[TS::DBLiteral::SceneLimit]
<nodeType>Const/Enum
<summary>場面制限
<comment>
----------------------------------------
[TS::DBLiteral::SceneLimit::AlwaysNG]
<nodeType>Const/EnumMember
<summary>常時NG
<comment>
----------------------------------------
[TS::DBLiteral::SceneLimit::OnlyMap]
<nodeType>Const/EnumMember
<summary>移動時のみ
<comment>
----------------------------------------
[TS::DBLiteral::SceneLimit::OnlyBattle]
<nodeType>Const/EnumMember
<summary>戦闘時のみ
<comment>
----------------------------------------
[TS::DBLiteral::SceneLimit::AlwaysOK]
<nodeType>Const/EnumMember
<summary>常時OK
<comment>
----------------------------------------
[TS::DBLiteral::TargetType]
<nodeType>Const/Enum
<summary>対象種別
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::None]
<nodeType>Const/EnumMember
<summary>なし
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::OneParty]
<nodeType>Const/EnumMember
<summary>味方１人
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::OnePartyWithDead]
<nodeType>Const/EnumMember
<summary>味方１人（死者含む）
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::AllParty]
<nodeType>Const/EnumMember
<summary>味方全体
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::AllPartyWithDead]
<nodeType>Const/EnumMember
<summary>味方全体（死者含む）
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::OneEnemy]
<nodeType>Const/EnumMember
<summary>敵１体
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::AllEnemy]
<nodeType>Const/EnumMember
<summary>敵全体
<comment>
----------------------------------------
[TS::DBLiteral::TargetType::Place]
<nodeType>Const/EnumMember
<summary>場所
<comment>
----------------------------------------
[TS::DBLiteral::StateLimit]
<nodeType>Const/Enum
<summary>間接効果の制約
<comment>
----------------------------------------
[TS::DBLiteral::StateLimit::None]
<nodeType>Const/EnumMember
<summary>なし
<comment>
----------------------------------------
[TS::DBLiteral::StateLimit::KO]
<nodeType>Const/EnumMember
<summary>戦闘不能
<comment>
----------------------------------------
[TS::DBLiteral::StateLimit::ForbiddenAction]
<nodeType>Const/EnumMember
<summary>行動不能
<comment>
----------------------------------------
[TS::DBLiteral::StateSolve]
<nodeType>Const/Enum
<summary>間接効果の解除条件
<comment>
----------------------------------------
[TS::DBLiteral::StateSolve::None]
<nodeType>Const/EnumMember
<summary>なし
<comment>
----------------------------------------
[TS::DBLiteral::StateSolve::Damamge]
<nodeType>Const/EnumMember
<summary>ダメージを受けたら
<comment>
----------------------------------------
[TS::DBLiteral::StateSolve::Turn]
<nodeType>Const/EnumMember
<summary>ターン経過
<comment>
----------------------------------------
[TS::DBLiteral::StateSolve::Walk]
<nodeType>Const/EnumMember
<summary>歩数経過
<comment>
----------------------------------------
[TS::DBLiteral::FontDrawing]
<nodeType>Const/Enum
<summary>フォント描画方法
<comment>
----------------------------------------
[TS::DBLiteral::FontDrawing::Normal]
<nodeType>Const/EnumMember
<summary>標準
<comment>
----------------------------------------
[TS::DBLiteral::FontDrawing::Edge]
<nodeType>Const/EnumMember
<summary>縁あり
<comment>
----------------------------------------
[TS::DBLiteral::FontDrawing::AS]
<nodeType>Const/EnumMember
<summary>アンチエイリアス
<comment>文字の縁が背景に馴染むように処理されて見やすくなります。
----------------------------------------
[TS::DBLiteral::FontDrawing::EdgeAS]
<nodeType>Const/EnumMember
<summary>縁ありアンチエイリアス
<comment>
----------------------------------------
[TS::DBLiteral::Addon]
<nodeType>Const/Enum
<summary>アドオン種別
<comment>
----------------------------------------
[TS::DBLiteral::Addon::SelfValuePlus]
<nodeType>Const/EnumMember
<summary>個別変数に加算
<comment>
----------------------------------------
[TS::DBLiteral::Addon::ParameterPlus]
<nodeType>Const/EnumMember
<summary>パラメーターに加算
<comment>
----------------------------------------
[TS::DBLiteral::Addon::AttributeResistanceSet]
<nodeType>Const/EnumMember
<summary>属性耐性を設定
<comment>
----------------------------------------
[TS::DBLiteral::Addon::StateResistanceSet]
<nodeType>Const/EnumMember
<summary>間接効果耐性を設定
<comment>
----------------------------------------
[TS::DBLiteral::Addon::LockEquipType]
<nodeType>Const/EnumMember
<summary>装備大種別を固定
<comment>
----------------------------------------
[TS::DBLiteral::Addon::SetEquipType]
<nodeType>Const/EnumMember
<summary>装備大種別の装備可否を設定
<comment>
----------------------------------------
[TS::DBLiteral::Addon::SetEquipSubType]
<nodeType>Const/EnumMember
<summary>装備小種別の装備可否を設定
<comment>
----------------------------------------
[TS::DBLiteral::Addon::SetSkillUse]
<nodeType>Const/EnumMember
<summary>スキルの使用可否を設定
<comment>
----------------------------------------
[TS::DBLiteral::Addon::SetSkillType]
<nodeType>Const/EnumMember
<summary>スキル種別の使用可否を設定
<comment>
----------------------------------------
[TS::Map::TileColumnCount]
<nodeType>Const/Const
<type>int
<summary>タイルパレット横方向の最大数
<comment>
----------------------------------------
[TS::Map::AutoTileRowLength]
<nodeType>Const/Const
<type>int
<summary>オートタイルパターン数
<comment>独立型・左右接続型・上下接続型・四方接続型・八方接続型があります。
----------------------------------------
[TS::Map::MapSizeMaxLength]
<nodeType>Const/Const
<type>int
<summary>マップの長さ最大値
<comment>マップは縦・横ともにこの長さが最大となります。
----------------------------------------
[TS::Map::Layer]
<nodeType>Const/Enum
<summary>マップレイヤー
<comment>
----------------------------------------
[TS::Map::Layer::Low]
<nodeType>Const/EnumMember
<summary>下層
<comment>
----------------------------------------
[TS::Map::Layer::Middle]
<nodeType>Const/EnumMember
<summary>中層
<comment>
----------------------------------------
[TS::Map::Layer::High]
<nodeType>Const/EnumMember
<summary>上層
<comment>
----------------------------------------
[TS::Map::Layer::Shadow]
<nodeType>Const/EnumMember
<summary>影層
<comment>
----------------------------------------
[TS::Map::Layer::Event]
<nodeType>Const/EnumMember
<summary>イベント
<comment>
----------------------------------------
[TS::Map::QuarterTile]
<nodeType>Const/Enum
<summary>1/4タイル
<comment>１タイルを４つに分けた細かいタイルです。
----------------------------------------
[TS::Map::QuarterTile::LeftTop]
<nodeType>Const/EnumMember
<summary>左上
<comment>
----------------------------------------
[TS::Map::QuarterTile::RightTop]
<nodeType>Const/EnumMember
<summary>右上
<comment>
----------------------------------------
[TS::Map::QuarterTile::LeftBottom]
<nodeType>Const/EnumMember
<summary>左下
<comment>
----------------------------------------
[TS::Map::QuarterTile::RightBottom]
<nodeType>Const/EnumMember
<summary>右下
<comment>
----------------------------------------
[TS::Map::Direction4]
<nodeType>Const/Enum
<summary>4方向
<comment>
----------------------------------------
[TS::Map::Direction4::South]
<nodeType>Const/EnumMember
<summary>南
<comment>
----------------------------------------
[TS::Map::Direction4::West]
<nodeType>Const/EnumMember
<summary>西
<comment>
----------------------------------------
[TS::Map::Direction4::East]
<nodeType>Const/EnumMember
<summary>東
<comment>
----------------------------------------
[TS::Map::Direction4::North]
<nodeType>Const/EnumMember
<summary>北
<comment>
----------------------------------------
[TS::Map::Direction4::None]
<nodeType>Const/EnumMember
<summary>中立
<comment>
----------------------------------------
[TS::Map::Direction8]
<nodeType>Const/Enum
<summary>8方向
<comment>
----------------------------------------
[TS::Map::Direction8::SouthWest]
<nodeType>Const/EnumMember
<summary>南西
<comment>
----------------------------------------
[TS::Map::Direction8::South]
<nodeType>Const/EnumMember
<summary>南
<comment>
----------------------------------------
[TS::Map::Direction8::SouthEast]
<nodeType>Const/EnumMember
<summary>南東
<comment>
----------------------------------------
[TS::Map::Direction8::West]
<nodeType>Const/EnumMember
<summary>西
<comment>
----------------------------------------
[TS::Map::Direction8::None]
<nodeType>Const/EnumMember
<summary>中立
<comment>
----------------------------------------
[TS::Map::Direction8::East]
<nodeType>Const/EnumMember
<summary>東
<comment>
----------------------------------------
[TS::Map::Direction8::NorthWest]
<nodeType>Const/EnumMember
<summary>北西
<comment>
----------------------------------------
[TS::Map::Direction8::North]
<nodeType>Const/EnumMember
<summary>北
<comment>
----------------------------------------
[TS::Map::Direction8::NorthEast]
<nodeType>Const/EnumMember
<summary>北東
<comment>
----------------------------------------
[TS::Map::Speed]
<nodeType>Const/Enum
<summary>速度
<comment>
----------------------------------------
[TS::Map::Speed::VeryLow]
<nodeType>Const/EnumMember
<summary>非常に遅い
<comment>
----------------------------------------
[TS::Map::Speed::Low]
<nodeType>Const/EnumMember
<summary>遅い
<comment>
----------------------------------------
[TS::Map::Speed::Normal]
<nodeType>Const/EnumMember
<summary>標準
<comment>
----------------------------------------
[TS::Map::Speed::High]
<nodeType>Const/EnumMember
<summary>速い
<comment>
----------------------------------------
[TS::Map::Speed::VeryHigh]
<nodeType>Const/EnumMember
<summary>非常に速い
<comment>
----------------------------------------
[TS::Map::Speed::Moment]
<nodeType>Const/EnumMember
<summary>瞬間
<comment>
----------------------------------------
[TS::Map::TileDataType]
<nodeType>Const/Enum
<summary>タイル設定種別
<comment>
----------------------------------------
[TS::Map::TileDataType::Hit]
<nodeType>Const/EnumMember
<summary>当たり判定
<comment>
----------------------------------------
[TS::Map::TileDataType::InOut]
<nodeType>Const/EnumMember
<summary>出入設定
<comment>
----------------------------------------
[TS::Map::TileDataType::Priority]
<nodeType>Const/EnumMember
<summary>描画優先度
<comment>
----------------------------------------
[TS::Map::TileDataType::GroupNumber]
<nodeType>Const/EnumMember
<summary>グループ番号
<comment>
----------------------------------------
[TS::Map::HitType]
<nodeType>Const/Enum
<summary>当たり判定種別
<comment>
----------------------------------------
[TS::Map::HitType::OK]
<nodeType>Const/EnumMember
<summary>通行可能
<comment>
----------------------------------------
[TS::Map::HitType::NG]
<nodeType>Const/EnumMember
<summary>通行不可
<comment>
----------------------------------------
[TS::Map::HitType::Depend]
<nodeType>Const/EnumMember
<summary>下位層依存
<comment>
----------------------------------------
[TS::Map::InOutType]
<nodeType>Const/Enum
<summary>出入設定種別
<comment>出入設定はビット演算で設定します。
----------------------------------------
[TS::Map::InOutType::None]
<nodeType>Const/EnumMember
<summary>通行不可
<comment>
----------------------------------------
[TS::Map::InOutType::OKBottom]
<nodeType>Const/EnumMember
<summary>下方向OK
<comment>
----------------------------------------
[TS::Map::InOutType::OKLeft]
<nodeType>Const/EnumMember
<summary>左方向OK
<comment>
----------------------------------------
[TS::Map::InOutType::OKRight]
<nodeType>Const/EnumMember
<summary>右方向OK
<comment>
----------------------------------------
[TS::Map::InOutType::OKTop]
<nodeType>Const/EnumMember
<summary>上方向OK
<comment>
----------------------------------------
[TS::Map::TileDrawPriority]
<nodeType>Const/Enum
<summary>タイル描画優先度
<comment>
----------------------------------------
[TS::Map::TileDrawPriority::Normal]
<nodeType>Const/EnumMember
<summary>標準
<comment>
----------------------------------------
[TS::Map::TileDrawPriority::SemiTransparent]
<nodeType>Const/EnumMember
<summary>半透明
<comment>タイルに重なったキャラの下半身が半透明になります。
----------------------------------------
[TS::Map::TileDrawPriority::SemiTopMost]
<nodeType>Const/EnumMember
<summary>優先
<comment>タイルに重なったキャラの下半身を隠します。
----------------------------------------
[TS::Map::TileDrawPriority::TopMost]
<nodeType>Const/EnumMember
<summary>最前面表示
<comment>
----------------------------------------
[TS::Map::AutoTilePattern]
<nodeType>Const/Enum
<summary>オートタイルパターン
<comment>
----------------------------------------
[TS::Map::AutoTilePattern::Isolate]
<nodeType>Const/EnumMember
<summary>独立型
<comment>
----------------------------------------
[TS::Map::AutoTilePattern::Vertical]
<nodeType>Const/EnumMember
<summary>上下接続型
<comment>
----------------------------------------
[TS::Map::AutoTilePattern::Horizontal]
<nodeType>Const/EnumMember
<summary>左右接続型
<comment>
----------------------------------------
[TS::Map::AutoTilePattern::FourSide]
<nodeType>Const/EnumMember
<summary>四方接続型
<comment>
----------------------------------------
[TS::Map::AutoTilePattern::AllSide]
<nodeType>Const/EnumMember
<summary>八方接続型
<comment>
----------------------------------------
[TS::Map::MapLoopType]
<nodeType>Const/Enum
<summary>マップループ方法
<comment>
----------------------------------------
[TS::Map::MapLoopType::None]
<nodeType>Const/EnumMember
<summary>無効
<comment>
----------------------------------------
[TS::Map::MapLoopType::Vertical]
<nodeType>Const/EnumMember
<summary>縦方向
<comment>
----------------------------------------
[TS::Map::MapLoopType::Horizontal]
<nodeType>Const/EnumMember
<summary>横方向
<comment>
----------------------------------------
[TS::Map::MapLoopType::Both]
<nodeType>Const/EnumMember
<summary>縦/横方向
<comment>
----------------------------------------
[TS::Map::ScrollType]
<nodeType>Const/Enum
<summary>スクロール方法
<comment>
----------------------------------------
[TS::Map::ScrollType::None]
<nodeType>Const/EnumMember
<summary>無効
<comment>
----------------------------------------
[TS::Map::ScrollType::FollowChar]
<nodeType>Const/EnumMember
<summary>プレイヤー移動に伴う
<comment>
----------------------------------------
[TS::Map::ScrollType::LeftDown]
<nodeType>Const/EnumMember
<summary>左下
<comment>
----------------------------------------
[TS::Map::ScrollType::Down]
<nodeType>Const/EnumMember
<summary>下
<comment>
----------------------------------------
[TS::Map::ScrollType::RightDown]
<nodeType>Const/EnumMember
<summary>右下
<comment>
----------------------------------------
[TS::Map::ScrollType::Left]
<nodeType>Const/EnumMember
<summary>左
<comment>
----------------------------------------
[TS::Map::ScrollType::Right]
<nodeType>Const/EnumMember
<summary>右
<comment>
----------------------------------------
[TS::Map::ScrollType::LeftUp]
<nodeType>Const/EnumMember
<summary>左上
<comment>
----------------------------------------
[TS::Map::ScrollType::Up]
<nodeType>Const/EnumMember
<summary>上
<comment>
----------------------------------------
[TS::Map::ScrollType::RightUp]
<nodeType>Const/EnumMember
<summary>右上
<comment>
----------------------------------------
[TS::Map::EventScriptType]
<nodeType>Const/Enum
<summary>イベントスクリプト種別
<comment>
----------------------------------------
[TS::Map::EventScriptType::Page]
<nodeType>Const/EnumMember
<summary>ページ条件
<comment>
----------------------------------------
[TS::Map::EventScriptType::Trigger]
<nodeType>Const/EnumMember
<summary>起動条件
<comment>
----------------------------------------
[TS::Map::EventScriptType::Move]
<nodeType>Const/EnumMember
<summary>日常移動
<comment>
----------------------------------------
[TS::Map::EventScriptType::Run]
<nodeType>Const/EnumMember
<summary>実行内容
<comment>
----------------------------------------
[TS::Map::EventTriggerType]
<nodeType>Const/Enum
<summary>イベント起動条件
<comment>
----------------------------------------
[TS::Map::EventTriggerType::None]
<nodeType>Const/EnumMember
<summary>起動しない
<comment>
----------------------------------------
[TS::Map::EventTriggerType::PressEnterKey]
<nodeType>Const/EnumMember
<summary>決定キー押下
<comment>
----------------------------------------
[TS::Map::EventTriggerType::Push]
<nodeType>Const/EnumMember
<summary>プレイヤーから接触
<comment>
----------------------------------------
[TS::Map::EventTriggerType::Pushed]
<nodeType>Const/EnumMember
<summary>イベントから接触
<comment>プレイヤーからの接触も含みます。
----------------------------------------
[TS::Map::EventTriggerType::Auto]
<nodeType>Const/EnumMember
<summary>自動
<comment>
----------------------------------------
[TS::Map::EventTriggerType::AfterMoveMap]
<nodeType>Const/EnumMember
<summary>マップ移動直後
<comment>
----------------------------------------
[TS::Map::EventTriggerType::Parallel]
<nodeType>Const/EnumMember
<summary>並列
<comment>イベントが起動している間も操作が可能になります。
----------------------------------------
[TS::Map::EventMoveType]
<nodeType>Const/Enum
<summary>イベント日常移動
<comment>
----------------------------------------
[TS::Map::EventMoveType::None]
<nodeType>Const/EnumMember
<summary>移動しない
<comment>
----------------------------------------
[TS::Map::EventMoveType::Random]
<nodeType>Const/EnumMember
<summary>ランダム移動
<comment>一定の範囲内をランダムに移動します。
----------------------------------------
[TS::Map::EventMoveType::Near]
<nodeType>Const/EnumMember
<summary>主人公へ近づく
<comment>
----------------------------------------
[TS::Map::EventMoveType::Away]
<nodeType>Const/EnumMember
<summary>主人公から遠ざかる
<comment>
----------------------------------------
[TS::Map::EventMoveType::Script]
<nodeType>Const/EnumMember
<summary>スクリプト指定
<comment>
----------------------------------------
[TS::Map::EventDrawPriority]
<nodeType>Const/Enum
<summary>イベント描画優先度
<comment>
----------------------------------------
[TS::Map::EventDrawPriority::Low]
<nodeType>Const/EnumMember
<summary>主人公より下
<comment>
----------------------------------------
[TS::Map::EventDrawPriority::Middle]
<nodeType>Const/EnumMember
<summary>主人公と同じ
<comment>
----------------------------------------
[TS::Map::EventDrawPriority::High]
<nodeType>Const/EnumMember
<summary>主人公より上
<comment>
----------------------------------------
[TS::Map::EventAnimation]
<nodeType>Const/Enum
<summary>イベントアニメーション
<comment>
----------------------------------------
[TS::Map::EventAnimation::Move1]
<nodeType>Const/EnumMember
<summary>歩行１
<comment>
----------------------------------------
[TS::Map::EventAnimation::Stop]
<nodeType>Const/EnumMember
<summary>静止
<comment>
----------------------------------------
[TS::Map::EventAnimation::Move2]
<nodeType>Const/EnumMember
<summary>歩行２
<comment>
----------------------------------------
[TS::Map::EventAnimation::Count]
<nodeType>Const/EnumMember
<summary>アニメーションパターン総数
<comment>
----------------------------------------
[TS::Map::EventMoveTask]
<nodeType>Const/Enum
<summary>イベント日常移動の指示内容
<comment>
----------------------------------------
[TS::Map::EventMoveTask::Direction]
<nodeType>Const/EnumMember
<summary>方向設定
<comment>
----------------------------------------
[TS::Map::EventMoveTask::Forward]
<nodeType>Const/EnumMember
<summary>一歩前進
<comment>
----------------------------------------
[TS::Map::EventMoveTask::Backward]
<nodeType>Const/EnumMember
<summary>一歩後退
<comment>
----------------------------------------
[TS::Map::EventMoveTask::Move]
<nodeType>Const/EnumMember
<summary>指定方向へ一歩進む
<comment>
----------------------------------------
[TS::Map::EventMoveTask::MoveRandom]
<nodeType>Const/EnumMember
<summary>ランダム方向へ一歩進む
<comment>
----------------------------------------
[TS::Map::EventMoveTask::MoveToPlayer]
<nodeType>Const/EnumMember
<summary>主人公へ一歩進む
<comment>
----------------------------------------
[TS::Map::EventMoveTask::MoveAgainstPlayer]
<nodeType>Const/EnumMember
<summary>主人公から一歩後退
<comment>
----------------------------------------
[TS::Map::EventMoveTask::TurnLeft]
<nodeType>Const/EnumMember
<summary>左を向く
<comment>現在の向きからの相対的な「左」です。
----------------------------------------
[TS::Map::EventMoveTask::TurnRight]
<nodeType>Const/EnumMember
<summary>右を向く
<comment>現在の向きからの相対的な「右」です。
----------------------------------------
[TS::Map::EventMoveTask::Turn180]
<nodeType>Const/EnumMember
<summary>後ろを向く
<comment>
----------------------------------------
[TS::Map::EventMoveTask::TurnRandom]
<nodeType>Const/EnumMember
<summary>ランダム方向を向く
<comment>
----------------------------------------
[TS::Map::EventMoveTask::TurnToPlayer]
<nodeType>Const/EnumMember
<summary>主人公を向く
<comment>
----------------------------------------
[TS::Map::EventMoveTask::TurnAgainstPlayer]
<nodeType>Const/EnumMember
<summary>主人公から背ける
<comment>
----------------------------------------
[TS::Map::EventMoveTask::Wait]
<nodeType>Const/EnumMember
<summary>ミリ秒待機
<comment>実際にはフレームレートの関係で若干の誤差が生じることがあります。
----------------------------------------
[TS::Map::EventMoveTask::SetMoveSpeed]
<nodeType>Const/EnumMember
<summary>移動速度
<comment>
----------------------------------------
[TS::Map::EventMoveTask::SetMoveFrequency]
<nodeType>Const/EnumMember
<summary>移動頻度
<comment>
----------------------------------------
[TS::Map::EventMoveTask::EnabledWalkAnim]
<nodeType>Const/EnumMember
<summary>歩行アニメ有無
<comment>
----------------------------------------
[TS::Map::EventMoveTask::EnabledStopAnim]
<nodeType>Const/EnumMember
<summary>静止アニメ有無
<comment>
----------------------------------------
[TS::Map::EventMoveTask::NoHit]
<nodeType>Const/EnumMember
<summary>すり抜け
<comment>
----------------------------------------
[TS::Map::EventMoveTask::FixedDirection]
<nodeType>Const/EnumMember
<summary>向き固定
<comment>
----------------------------------------
[TS::Map::EventMoveTask::Hide]
<nodeType>Const/EnumMember
<summary>非表示切替
<comment>
----------------------------------------
[TS::Map::EventMoveTask::ChangeGraphics]
<nodeType>Const/EnumMember
<summary>グラフィック変更
<comment>
----------------------------------------
[TS::Map::EventMoveTask::SQ]
<nodeType>Const/EnumMember
<summary>スクリプト呼出
<comment>
----------------------------------------
[TS::Map::EventMoveTask::LockRoute]
<nodeType>Const/EnumMember
<summary>経路固定切替
<comment>障害物がある等で指示された方向に移動ができない場合の挙動を設定します。TRUEの場合は障害物がなくなるまで待機します。既定値はFALSEです。
----------------------------------------
[TS::Map::EventMoveTask::Repeat]
<nodeType>Const/EnumMember
<summary>上記繰り返し
<comment>指示した移動経路を繰り返します。この指示は繰り返しの最後に置いて下さい。
----------------------------------------
[TS::System::FixedFPS]
<nodeType>Const/Const
<type>int
<summary>固定FPS
<comment>システムで定められた固定フレームレート (60 FPS) です。
----------------------------------------
[TS::System::RunMode]
<nodeType>Const/Enum
<summary>起動モード
<comment>
----------------------------------------
[TS::System::RunMode::MainGame]
<nodeType>Const/EnumMember
<summary>ゲーム本編
<comment>
----------------------------------------
[TS::System::RunMode::MapTest]
<nodeType>Const/EnumMember
<summary>マップテスト
<comment>
----------------------------------------
[TS::System::RunMode::BattleTest]
<nodeType>Const/EnumMember
<summary>バトルテスト
<comment>
----------------------------------------
[TS::System::RunMode::SQCompile]
<nodeType>Const/EnumMember
<summary>スクリプトコンパイル
<comment>
----------------------------------------
[TS::System::RunMode::SQTest]
<nodeType>Const/EnumMember
<summary>スクリプト単体テスト
<comment>
----------------------------------------
[TS::System::RunMode::DXArchive]
<nodeType>Const/EnumMember
<summary>アーカイブ
<comment>
----------------------------------------
[TS::System::ExitCode]
<nodeType>Const/Enum
<summary>終了コード
<comment>
----------------------------------------
[TS::System::ExitCode::Error]
<nodeType>Const/EnumMember
<summary>エラー終了
<comment>
----------------------------------------
[TS::System::ExitCode::Success]
<nodeType>Const/EnumMember
<summary>正常終了
<comment>
----------------------------------------
[TS::System::ExitCode::Question]
<nodeType>Const/EnumMember
<summary>ユーザーに問い合わせて終了
<comment>
----------------------------------------
[TS::System::ExitCode::InvalidSystemDB]
<nodeType>Const/EnumMember
<summary>システムDB無効のため終了
<comment>
----------------------------------------
[TS::System::Scene]
<nodeType>Const/Enum
<summary>シーン
<comment>サブシーンを含みます。
----------------------------------------
[TS::System::Scene::All]
<nodeType>Const/EnumMember
<summary>全体
<comment>
----------------------------------------
[TS::System::Scene::Title]
<nodeType>Const/EnumMember
<summary>タイトル
<comment>
----------------------------------------
[TS::System::Scene::Map]
<nodeType>Const/EnumMember
<summary>マップ
<comment>
----------------------------------------
[TS::System::Scene::Menu]
<nodeType>Const/EnumMember
<summary>メニュー
<comment>
----------------------------------------
[TS::System::Scene::Shop]
<nodeType>Const/EnumMember
<summary>ショップ
<comment>
----------------------------------------
[TS::System::Scene::Battle]
<nodeType>Const/EnumMember
<summary>バトル
<comment>
----------------------------------------
[TS::System::MessageBoxIcon]
<nodeType>Const/Enum
<summary>メッセージボックスのアイコン
<comment>
----------------------------------------
[TS::System::MessageBoxIcon::None]
<nodeType>Const/EnumMember
<summary>なし
<comment>
----------------------------------------
[TS::System::MessageBoxIcon::Warning]
<nodeType>Const/EnumMember
<summary>警告
<comment>
----------------------------------------
[TS::System::MessageBoxIcon::Information]
<nodeType>Const/EnumMember
<summary>情報
<comment>
----------------------------------------
[TS::System::MessageBoxIcon::Error]
<nodeType>Const/EnumMember
<summary>エラー
<comment>
----------------------------------------
[TS::System::MessageBoxButton]
<nodeType>Const/Enum
<summary>メッセージボックスのボタン種別
<comment>
----------------------------------------
[TS::System::MessageBoxButton::OK]
<nodeType>Const/EnumMember
<summary>OK
<comment>
----------------------------------------
[TS::System::MessageBoxButton::OKCancel]
<nodeType>Const/EnumMember
<summary>OK/キャンセル
<comment>
----------------------------------------
[TS::System::MessageBoxButton::YesNo]
<nodeType>Const/EnumMember
<summary>はい/いいえ
<comment>
----------------------------------------
[TS::System::MessageBoxButton::YesNoCancel]
<nodeType>Const/EnumMember
<summary>はい/いいえ/キャンセル
<comment>
----------------------------------------
[TS::System::MessageBoxButton::RetryCancel]
<nodeType>Const/EnumMember
<summary>再試行/キャンセル
<comment>
----------------------------------------
[TS::System::MessageBoxButton::AbortRetryIgnore]
<nodeType>Const/EnumMember
<summary>中止/再試行/無視
<comment>
----------------------------------------
[TS::System::MessageBoxResult]
<nodeType>Const/Enum
<summary>メッセージボックスの結果
<comment>
----------------------------------------
[TS::System::MessageBoxResult::OK]
<nodeType>Const/EnumMember
<summary>OK
<comment>
----------------------------------------
[TS::System::MessageBoxResult::Cancel]
<nodeType>Const/EnumMember
<summary>キャンセル
<comment>
----------------------------------------
[TS::System::MessageBoxResult::Yes]
<nodeType>Const/EnumMember
<summary>はい
<comment>
----------------------------------------
[TS::System::MessageBoxResult::No]
<nodeType>Const/EnumMember
<summary>いいえ
<comment>
----------------------------------------
[TS::System::MessageBoxResult::Abort]
<nodeType>Const/EnumMember
<summary>中止
<comment>
----------------------------------------
[TS::System::MessageBoxResult::Retry]
<nodeType>Const/EnumMember
<summary>再試行
<comment>
----------------------------------------
[TS::System::MessageBoxResult::Ignore]
<nodeType>Const/EnumMember
<summary>無視
<comment>
----------------------------------------
[TS::System::ErrorID]
<nodeType>Const/Enum
<summary>システムエラー種別
<comment>ゲームプログラムによって出されるエラーの種別です。
----------------------------------------
[TS::System::ErrorID::NotFound]
<nodeType>Const/EnumMember
<summary>見つからない
<comment>
----------------------------------------
[TS::System::ErrorID::Exists]
<nodeType>Const/EnumMember
<summary>既に存在している
<comment>
----------------------------------------
[TS::System::ErrorID::OutOfRange]
<nodeType>Const/EnumMember
<summary>範囲外である
<comment>
----------------------------------------
[TS::System::ErrorID::Except]
<nodeType>Const/EnumMember
<summary>例外である
<comment>
----------------------------------------
[TS::System::ErrorID::Invalid]
<nodeType>Const/EnumMember
<summary>無効である
<comment>
----------------------------------------
[TS::System::ErrorID::Failed]
<nodeType>Const/EnumMember
<summary>失敗した
<comment>
----------------------------------------
[TS::System::ErrorID::WinAPI]
<nodeType>Const/EnumMember
<summary>OSエラー
<comment>
----------------------------------------
[TS::System::ErrorID::SQ]
<nodeType>Const/EnumMember
<summary>スクリプトエラー
<comment>
----------------------------------------
[TS::System::KeyID]
<nodeType>Const/Enum
<summary>キー番号
<comment>
----------------------------------------
[TS::System::KeyID::Backspace]
<nodeType>Const/EnumMember
<summary>Backspace
<comment>
----------------------------------------
[TS::System::KeyID::Tab]
<nodeType>Const/EnumMember
<summary>Tab
<comment>
----------------------------------------
[TS::System::KeyID::Enter]
<nodeType>Const/EnumMember
<summary>Enter
<comment>
----------------------------------------
[TS::System::KeyID::LShift]
<nodeType>Const/EnumMember
<summary>左Shift
<comment>
----------------------------------------
[TS::System::KeyID::RShift]
<nodeType>Const/EnumMember
<summary>右Shift
<comment>
----------------------------------------
[TS::System::KeyID::LCtrl]
<nodeType>Const/EnumMember
<summary>左Ctrl
<comment>
----------------------------------------
[TS::System::KeyID::RCtrl]
<nodeType>Const/EnumMember
<summary>右Ctrl
<comment>
----------------------------------------
[TS::System::KeyID::Escape]
<nodeType>Const/EnumMember
<summary>ESC
<comment>
----------------------------------------
[TS::System::KeyID::Space]
<nodeType>Const/EnumMember
<summary>Space
<comment>
----------------------------------------
[TS::System::KeyID::PageUp]
<nodeType>Const/EnumMember
<summary>PageUp
<comment>
----------------------------------------
[TS::System::KeyID::PageDown]
<nodeType>Const/EnumMember
<summary>PageDown
<comment>
----------------------------------------
[TS::System::KeyID::End]
<nodeType>Const/EnumMember
<summary>End
<comment>
----------------------------------------
[TS::System::KeyID::Home]
<nodeType>Const/EnumMember
<summary>Home
<comment>
----------------------------------------
[TS::System::KeyID::Left]
<nodeType>Const/EnumMember
<summary>左
<comment>
----------------------------------------
[TS::System::KeyID::Up]
<nodeType>Const/EnumMember
<summary>上
<comment>
----------------------------------------
[TS::System::KeyID::Right]
<nodeType>Const/EnumMember
<summary>右
<comment>
----------------------------------------
[TS::System::KeyID::Down]
<nodeType>Const/EnumMember
<summary>下
<comment>
----------------------------------------
[TS::System::KeyID::Insert]
<nodeType>Const/EnumMember
<summary>Insert
<comment>
----------------------------------------
[TS::System::KeyID::Delete]
<nodeType>Const/EnumMember
<summary>Delete
<comment>
----------------------------------------
[TS::System::KeyID::Minus]
<nodeType>Const/EnumMember
<summary>マイナス
<comment>
----------------------------------------
[TS::System::KeyID::Yen]
<nodeType>Const/EnumMember
<summary>円記号
<comment>
----------------------------------------
[TS::System::KeyID::Prevtrack]
<nodeType>Const/EnumMember
<summary>カレット
<comment>
----------------------------------------
[TS::System::KeyID::Period]
<nodeType>Const/EnumMember
<summary>ピリオド
<comment>
----------------------------------------
[TS::System::KeyID::Slash]
<nodeType>Const/EnumMember
<summary>スラッシュ
<comment>
----------------------------------------
[TS::System::KeyID::LAlt]
<nodeType>Const/EnumMember
<summary>左Alt
<comment>
----------------------------------------
[TS::System::KeyID::RAlt]
<nodeType>Const/EnumMember
<summary>右Alt
<comment>
----------------------------------------
[TS::System::KeyID::ScrollLock]
<nodeType>Const/EnumMember
<summary>ScrollLock
<comment>
----------------------------------------
[TS::System::KeyID::SemiColon]
<nodeType>Const/EnumMember
<summary>セミコロン
<comment>
----------------------------------------
[TS::System::KeyID::Colon]
<nodeType>Const/EnumMember
<summary>コロン
<comment>
----------------------------------------
[TS::System::KeyID::LBracket]
<nodeType>Const/EnumMember
<summary>開き括弧
<comment>
----------------------------------------
[TS::System::KeyID::RBracket]
<nodeType>Const/EnumMember
<summary>閉じ括弧
<comment>
----------------------------------------
[TS::System::KeyID::At]
<nodeType>Const/EnumMember
<summary>アットマーク
<comment>
----------------------------------------
[TS::System::KeyID::BackSlash]
<nodeType>Const/EnumMember
<summary>バックスラッシュ（円記号）
<comment>
----------------------------------------
[TS::System::KeyID::Comma]
<nodeType>Const/EnumMember
<summary>カンマ
<comment>
----------------------------------------
[TS::System::KeyID::Kanji]
<nodeType>Const/EnumMember
<summary>漢字
<comment>
----------------------------------------
[TS::System::KeyID::Convert]
<nodeType>Const/EnumMember
<summary>変換
<comment>
----------------------------------------
[TS::System::KeyID::NoConvert]
<nodeType>Const/EnumMember
<summary>無変換
<comment>
----------------------------------------
[TS::System::KeyID::Kana]
<nodeType>Const/EnumMember
<summary>かな
<comment>
----------------------------------------
[TS::System::KeyID::Apps]
<nodeType>Const/EnumMember
<summary>アプリケーション
<comment>
----------------------------------------
[TS::System::KeyID::CapsLock]
<nodeType>Const/EnumMember
<summary>CapsLock
<comment>
----------------------------------------
[TS::System::KeyID::PrintScreen]
<nodeType>Const/EnumMember
<summary>PrintScreen
<comment>
----------------------------------------
[TS::System::KeyID::PauseBreak]
<nodeType>Const/EnumMember
<summary>Pause/Break
<comment>
----------------------------------------
[TS::System::KeyID::LWin]
<nodeType>Const/EnumMember
<summary>左Windows
<comment>
----------------------------------------
[TS::System::KeyID::RWin]
<nodeType>Const/EnumMember
<summary>右Windows
<comment>
----------------------------------------
[TS::System::KeyID::NumLock]
<nodeType>Const/EnumMember
<summary>NumLock
<comment>
----------------------------------------
[TS::System::KeyID::Num0]
<nodeType>Const/EnumMember
<summary>テンキー0
<comment>
----------------------------------------
[TS::System::KeyID::Num1]
<nodeType>Const/EnumMember
<summary>テンキー1
<comment>
----------------------------------------
[TS::System::KeyID::Num2]
<nodeType>Const/EnumMember
<summary>テンキー2
<comment>
----------------------------------------
[TS::System::KeyID::Num3]
<nodeType>Const/EnumMember
<summary>テンキー3
<comment>
----------------------------------------
[TS::System::KeyID::Num4]
<nodeType>Const/EnumMember
<summary>テンキー4
<comment>
----------------------------------------
[TS::System::KeyID::Num5]
<nodeType>Const/EnumMember
<summary>テンキー5
<comment>
----------------------------------------
[TS::System::KeyID::Num6]
<nodeType>Const/EnumMember
<summary>テンキー6
<comment>
----------------------------------------
[TS::System::KeyID::Num7]
<nodeType>Const/EnumMember
<summary>テンキー7
<comment>
----------------------------------------
[TS::System::KeyID::Num8]
<nodeType>Const/EnumMember
<summary>テンキー8
<comment>
----------------------------------------
[TS::System::KeyID::Num9]
<nodeType>Const/EnumMember
<summary>テンキー9
<comment>
----------------------------------------
[TS::System::KeyID::NumMultiply]
<nodeType>Const/EnumMember
<summary>テンキー乗算記号
<comment>
----------------------------------------
[TS::System::KeyID::NumAdd]
<nodeType>Const/EnumMember
<summary>テンキー加算記号
<comment>
----------------------------------------
[TS::System::KeyID::NumSubtract]
<nodeType>Const/EnumMember
<summary>テンキー減算記号
<comment>
----------------------------------------
[TS::System::KeyID::NumDecimal]
<nodeType>Const/EnumMember
<summary>テンキー小数点
<comment>
----------------------------------------
[TS::System::KeyID::NumDivide]
<nodeType>Const/EnumMember
<summary>テンキー除算記号
<comment>
----------------------------------------
[TS::System::KeyID::NumEnter]
<nodeType>Const/EnumMember
<summary>テンキーEnter
<comment>
----------------------------------------
[TS::System::KeyID::F1]
<nodeType>Const/EnumMember
<summary>F1
<comment>
----------------------------------------
[TS::System::KeyID::F2]
<nodeType>Const/EnumMember
<summary>F2
<comment>
----------------------------------------
[TS::System::KeyID::F3]
<nodeType>Const/EnumMember
<summary>F3
<comment>
----------------------------------------
[TS::System::KeyID::F4]
<nodeType>Const/EnumMember
<summary>F4
<comment>
----------------------------------------
[TS::System::KeyID::F5]
<nodeType>Const/EnumMember
<summary>F5
<comment>
----------------------------------------
[TS::System::KeyID::F6]
<nodeType>Const/EnumMember
<summary>F6
<comment>
----------------------------------------
[TS::System::KeyID::F7]
<nodeType>Const/EnumMember
<summary>F7
<comment>
----------------------------------------
[TS::System::KeyID::F8]
<nodeType>Const/EnumMember
<summary>F8
<comment>
----------------------------------------
[TS::System::KeyID::F9]
<nodeType>Const/EnumMember
<summary>F9
<comment>
----------------------------------------
[TS::System::KeyID::F10]
<nodeType>Const/EnumMember
<summary>F10
<comment>
----------------------------------------
[TS::System::KeyID::F11]
<nodeType>Const/EnumMember
<summary>F11
<comment>
----------------------------------------
[TS::System::KeyID::F12]
<nodeType>Const/EnumMember
<summary>F12
<comment>
----------------------------------------
[TS::System::KeyID::A]
<nodeType>Const/EnumMember
<summary>A
<comment>
----------------------------------------
[TS::System::KeyID::B]
<nodeType>Const/EnumMember
<summary>B
<comment>
----------------------------------------
[TS::System::KeyID::C]
<nodeType>Const/EnumMember
<summary>C
<comment>
----------------------------------------
[TS::System::KeyID::D]
<nodeType>Const/EnumMember
<summary>D
<comment>
----------------------------------------
[TS::System::KeyID::E]
<nodeType>Const/EnumMember
<summary>E
<comment>
----------------------------------------
[TS::System::KeyID::F]
<nodeType>Const/EnumMember
<summary>F
<comment>
----------------------------------------
[TS::System::KeyID::G]
<nodeType>Const/EnumMember
<summary>G
<comment>
----------------------------------------
[TS::System::KeyID::H]
<nodeType>Const/EnumMember
<summary>H
<comment>
----------------------------------------
[TS::System::KeyID::I]
<nodeType>Const/EnumMember
<summary>I
<comment>
----------------------------------------
[TS::System::KeyID::J]
<nodeType>Const/EnumMember
<summary>J
<comment>
----------------------------------------
[TS::System::KeyID::K]
<nodeType>Const/EnumMember
<summary>K
<comment>
----------------------------------------
[TS::System::KeyID::L]
<nodeType>Const/EnumMember
<summary>L
<comment>
----------------------------------------
[TS::System::KeyID::M]
<nodeType>Const/EnumMember
<summary>M
<comment>
----------------------------------------
[TS::System::KeyID::N]
<nodeType>Const/EnumMember
<summary>N
<comment>
----------------------------------------
[TS::System::KeyID::O]
<nodeType>Const/EnumMember
<summary>O
<comment>
----------------------------------------
[TS::System::KeyID::P]
<nodeType>Const/EnumMember
<summary>P
<comment>
----------------------------------------
[TS::System::KeyID::Q]
<nodeType>Const/EnumMember
<summary>Q
<comment>
----------------------------------------
[TS::System::KeyID::R]
<nodeType>Const/EnumMember
<summary>R
<comment>
----------------------------------------
[TS::System::KeyID::S]
<nodeType>Const/EnumMember
<summary>S
<comment>
----------------------------------------
[TS::System::KeyID::T]
<nodeType>Const/EnumMember
<summary>T
<comment>
----------------------------------------
[TS::System::KeyID::U]
<nodeType>Const/EnumMember
<summary>U
<comment>
----------------------------------------
[TS::System::KeyID::V]
<nodeType>Const/EnumMember
<summary>V
<comment>
----------------------------------------
[TS::System::KeyID::W]
<nodeType>Const/EnumMember
<summary>W
<comment>
----------------------------------------
[TS::System::KeyID::X]
<nodeType>Const/EnumMember
<summary>X
<comment>
----------------------------------------
[TS::System::KeyID::Y]
<nodeType>Const/EnumMember
<summary>Y
<comment>
----------------------------------------
[TS::System::KeyID::Z]
<nodeType>Const/EnumMember
<summary>Z
<comment>
----------------------------------------
[TS::System::KeyID::Key0]
<nodeType>Const/EnumMember
<summary>0
<comment>
----------------------------------------
[TS::System::KeyID::Key1]
<nodeType>Const/EnumMember
<summary>1
<comment>
----------------------------------------
[TS::System::KeyID::Key2]
<nodeType>Const/EnumMember
<summary>2
<comment>
----------------------------------------
[TS::System::KeyID::Key3]
<nodeType>Const/EnumMember
<summary>3
<comment>
----------------------------------------
[TS::System::KeyID::Key4]
<nodeType>Const/EnumMember
<summary>4
<comment>
----------------------------------------
[TS::System::KeyID::Key5]
<nodeType>Const/EnumMember
<summary>5
<comment>
----------------------------------------
[TS::System::KeyID::Key6]
<nodeType>Const/EnumMember
<summary>6
<comment>
----------------------------------------
[TS::System::KeyID::Key7]
<nodeType>Const/EnumMember
<summary>7
<comment>
----------------------------------------
[TS::System::KeyID::Key8]
<nodeType>Const/EnumMember
<summary>8
<comment>
----------------------------------------
[TS::System::KeyID::Key9]
<nodeType>Const/EnumMember
<summary>9
<comment>
----------------------------------------
[TS::System::PadID]
<nodeType>Const/Enum
<summary>ジョイパッドボタン
<comment>
----------------------------------------
[TS::System::PadID::Down]
<nodeType>Const/EnumMember
<summary>下
<comment>
----------------------------------------
[TS::System::PadID::Left]
<nodeType>Const/EnumMember
<summary>左
<comment>
----------------------------------------
[TS::System::PadID::Right]
<nodeType>Const/EnumMember
<summary>右
<comment>
----------------------------------------
[TS::System::PadID::Up]
<nodeType>Const/EnumMember
<summary>上
<comment>
----------------------------------------
[TS::System::PadID::Button1]
<nodeType>Const/EnumMember
<summary>ボタン1
<comment>
----------------------------------------
[TS::System::PadID::Button2]
<nodeType>Const/EnumMember
<summary>ボタン2
<comment>
----------------------------------------
[TS::System::PadID::Button3]
<nodeType>Const/EnumMember
<summary>ボタン3
<comment>
----------------------------------------
[TS::System::PadID::Button4]
<nodeType>Const/EnumMember
<summary>ボタン4
<comment>
----------------------------------------
[TS::System::PadID::Button5]
<nodeType>Const/EnumMember
<summary>ボタン5
<comment>
----------------------------------------
[TS::System::PadID::Button6]
<nodeType>Const/EnumMember
<summary>ボタン6
<comment>
----------------------------------------
[TS::System::PadID::Button7]
<nodeType>Const/EnumMember
<summary>ボタン7
<comment>
----------------------------------------
[TS::System::PadID::Button8]
<nodeType>Const/EnumMember
<summary>ボタン8
<comment>
----------------------------------------
[TS::System::PadID::Button9]
<nodeType>Const/EnumMember
<summary>ボタン9
<comment>
----------------------------------------
[TS::System::PadID::Button10]
<nodeType>Const/EnumMember
<summary>ボタン10
<comment>
----------------------------------------
[TS::System::MouseID]
<nodeType>Const/Enum
<summary>マウスボタン
<comment>
----------------------------------------
[TS::System::MouseID::Left]
<nodeType>Const/EnumMember
<summary>左クリック
<comment>
----------------------------------------
[TS::System::MouseID::Right]
<nodeType>Const/EnumMember
<summary>右クリック
<comment>
----------------------------------------
[TS::System::MouseID::Middle]
<nodeType>Const/EnumMember
<summary>中央クリック
<comment>
----------------------------------------
[TS::Sprite::TextAlign]
<nodeType>Const/Enum
<summary>文字列整列方向
<comment>
----------------------------------------
[TS::Sprite::TextAlign::Left]
<nodeType>Const/EnumMember
<summary>左揃え
<comment>
----------------------------------------
[TS::Sprite::TextAlign::Center]
<nodeType>Const/EnumMember
<summary>中央揃え
<comment>
----------------------------------------
[TS::Sprite::TextAlign::Right]
<nodeType>Const/EnumMember
<summary>右揃え
<comment>
----------------------------------------
[TS::Sprite::WipeState]
<nodeType>Const/Enum
<summary>スプライトワイプ状態
<comment>
----------------------------------------
[TS::Sprite::WipeState::None]
<nodeType>Const/EnumMember
<summary>停止
<comment>
----------------------------------------
[TS::Sprite::WipeState::WipeIn]
<nodeType>Const/EnumMember
<summary>ワイプイン
<comment>
----------------------------------------
[TS::Sprite::WipeState::WipeOut]
<nodeType>Const/EnumMember
<summary>ワイプアウト
<comment>
----------------------------------------
[TS::Material::MaterialType]
<nodeType>Const/Enum
<summary>素材種別
<comment>
----------------------------------------
[TS::Material::MaterialType::Graphics]
<nodeType>Const/EnumMember
<summary>グラフィック
<comment>
----------------------------------------
[TS::Material::MaterialType::Sound]
<nodeType>Const/EnumMember
<summary>サウンド
<comment>
----------------------------------------
[TS::Material::MaterialType::Font]
<nodeType>Const/EnumMember
<summary>フォント
<comment>
----------------------------------------
[TS::Material::FontNormalSize]
<nodeType>Const/Const
<type>int
<summary>フォント標準サイズ
<comment>
----------------------------------------
[TS::Material::FontNormalThick]
<nodeType>Const/Const
<type>int
<summary>フォント標準太さ
<comment>
----------------------------------------
[TS::Material::FontNormalLineSpace]
<nodeType>Const/Const
<type>int
<summary>フォント標準行間
<comment>
----------------------------------------
[TS::Material::FontNormalType]
<nodeType>Const/Const
<type>int
<summary>フォント標準描画方法
<comment>
----------------------------------------
[TS::Material::Common_MinPitch]
<nodeType>Const/Const
<type>int
<summary>サウンド共通最小音程
<comment>
----------------------------------------
[TS::Material::Common_MaxPitch]
<nodeType>Const/Const
<type>int
<summary>サウンド共通最大音程
<comment>
----------------------------------------
[TS::Material::MIDI_MinVolume]
<nodeType>Const/Const
<type>int
<summary>MIDI最小音量
<comment>
----------------------------------------
[TS::Material::MIDI_MaxVolume]
<nodeType>Const/Const
<type>int
<summary>MIDI最大音量
<comment>
----------------------------------------
[TS::Material::MIDI_MinPitch]
<nodeType>Const/Const
<type>int
<summary>MIDI最小音程
<comment>
----------------------------------------
[TS::Material::MIDI_MaxPitch]
<nodeType>Const/Const
<type>int
<summary>MIDI最大音程
<comment>
----------------------------------------
[TS::Material::MinVolume]
<nodeType>Const/Const
<type>int
<summary>最小音量
<comment>
----------------------------------------
[TS::Material::MaxVolume]
<nodeType>Const/Const
<type>int
<summary>最大音量
<comment>
----------------------------------------
[TS::Material::MinPitch]
<nodeType>Const/Const
<type>int
<summary>一般サウンド最小音程
<comment>
----------------------------------------
[TS::Material::MaxPitch]
<nodeType>Const/Const
<type>int
<summary>一般サウンド最大音程
<comment>
----------------------------------------
[TS::Material::MinPan]
<nodeType>Const/Const
<type>int
<summary>サウンド左右位置/完全左
<comment>
----------------------------------------
[TS::Material::MaxPan]
<nodeType>Const/Const
<type>int
<summary>サウンド左右位置/完全右
<comment>
----------------------------------------
[TS::Material::PlayStatus]
<nodeType>Const/Enum
<summary>サウンド再生状態
<comment>
----------------------------------------
[TS::Material::PlayStatus::Error]
<nodeType>Const/EnumMember
<summary>エラー
<comment>
----------------------------------------
[TS::Material::PlayStatus::Stop]
<nodeType>Const/EnumMember
<summary>停止
<comment>
----------------------------------------
[TS::Material::PlayStatus::Playing]
<nodeType>Const/EnumMember
<summary>再生
<comment>
----------------------------------------
[TS::Material::PlayType]
<nodeType>Const/Enum
<summary>サウンド再生方法
<comment>
----------------------------------------
[TS::Material::PlayType::Wait]
<nodeType>Const/EnumMember
<summary>再生終了まで待機
<comment>
----------------------------------------
[TS::Material::PlayType::Back]
<nodeType>Const/EnumMember
<summary>バックグラウンド再生
<comment>
----------------------------------------
[TS::Material::PlayType::Loop]
<nodeType>Const/EnumMember
<summary>ループ再生
<comment>バックグラウンド再生です。
----------------------------------------
[TS::DB::DBType]
<nodeType>Const/Enum
<summary>DB大種別
<comment>
----------------------------------------
[TS::DB::DBType::FDB]
<nodeType>Const/EnumMember
<summary>固定DB
<comment>
----------------------------------------
[TS::DB::DBType::VDB]
<nodeType>Const/EnumMember
<summary>可変DB
<comment>
----------------------------------------
[TS::DB::DBType::UDB]
<nodeType>Const/EnumMember
<summary>ユーザーDB
<comment>
----------------------------------------
[TS::DB::ColumnType]
<nodeType>Const/Enum
<summary>DB列種別
<comment>
----------------------------------------
[TS::DB::ColumnType::None]
<nodeType>Const/EnumMember
<summary>なし
<comment>
----------------------------------------
[TS::DB::ColumnType::OneNumber]
<nodeType>Const/EnumMember
<summary>単一数値
<comment>
----------------------------------------
[TS::DB::ColumnType::Numbers]
<nodeType>Const/EnumMember
<summary>複数値
<comment>
----------------------------------------
[TS::DB::ColumnType::String]
<nodeType>Const/EnumMember
<summary>文字列
<comment>
----------------------------------------
[TS::DB::ColumnType::Boolean]
<nodeType>Const/EnumMember
<summary>チェックボックス
<comment>
----------------------------------------
[TS::DB::ColumnType::IDNames]
<nodeType>Const/EnumMember
<summary>IDリスト
<comment>
----------------------------------------
[TS::DB::ColumnType::IDValues]
<nodeType>Const/EnumMember
<summary>IDと値のリスト
<comment>
----------------------------------------
[TS::DB::FDBIndices]
<nodeType>Const/Enum
<summary>固定DBIndex
<comment>
----------------------------------------
[TS::DB::FDBIndices::System]
<nodeType>Const/EnumMember
<summary>システム
<comment>
----------------------------------------
[TS::DB::FDBIndices::Material]
<nodeType>Const/EnumMember
<summary>汎用素材
<comment>
----------------------------------------
[TS::DB::FDBIndices::Element]
<nodeType>Const/EnumMember
<summary>基本要素
<comment>
----------------------------------------
[TS::DB::FDBIndices::Class]
<nodeType>Const/EnumMember
<summary>クラス
<comment>
----------------------------------------
[TS::DB::FDBIndices::Skill]
<nodeType>Const/EnumMember
<summary>スキル
<comment>
----------------------------------------
[TS::DB::FDBIndices::Item]
<nodeType>Const/EnumMember
<summary>アイテム
<comment>
----------------------------------------
[TS::DB::FDBIndices::State]
<nodeType>Const/EnumMember
<summary>間接効果
<comment>
----------------------------------------
[TS::DB::FDBIndices::Char]
<nodeType>Const/EnumMember
<summary>パーティキャラ
<comment>
----------------------------------------
[TS::DB::FDBIndices::Enemy]
<nodeType>Const/EnumMember
<summary>エネミー
<comment>
----------------------------------------
[TS::DB::FDBIndices::Unit]
<nodeType>Const/EnumMember
<summary>ユニット
<comment>
----------------------------------------
[TS::DB::FDBIndices::Effect]
<nodeType>Const/EnumMember
<summary>エフェクト
<comment>
----------------------------------------
[TS::DB::FDBIndices::Tileset]
<nodeType>Const/EnumMember
<summary>タイルセット
<comment>
----------------------------------------
[TS::DB::FDBIndices::Init]
<nodeType>Const/EnumMember
<summary>初期設定
<comment>
----------------------------------------
[TS::DB::VDBIndices]
<nodeType>Const/Enum
<summary>可変DBIndex
<comment>
----------------------------------------
[TS::DB::VDBIndices::Value]
<nodeType>Const/EnumMember
<summary>変数
<comment>
----------------------------------------
[TS::DB::VDBIndices::Party]
<nodeType>Const/EnumMember
<summary>パーティ
<comment>
----------------------------------------
[TS::DB::VDBIndices::Actor]
<nodeType>Const/EnumMember
<summary>アクター
<comment>
----------------------------------------
[TS::DB::AddonFrom]
<nodeType>Const/Enum
<summary>アドオン優先度
<comment>アドオンの設定元を示すと同時に、アクターに対して競合するアドオンが適用されるときの優先順位を示します。
----------------------------------------
[TS::DB::AddonFrom::Actor]
<nodeType>Const/EnumMember
<summary>アクター
<comment>
----------------------------------------
[TS::DB::AddonFrom::Class]
<nodeType>Const/EnumMember
<summary>クラス
<comment>
----------------------------------------
[TS::DB::AddonFrom::Item]
<nodeType>Const/EnumMember
<summary>装備品
<comment>
----------------------------------------
[TS::DB::AddonFrom::State]
<nodeType>Const/EnumMember
<summary>間接効果
<comment>
----------------------------------------
[TS::Map::MapLayerCountWithoutEV]
<nodeType>Const/Const
<type>int
<summary>イベント層を除くタイルレイヤー数
<comment>
----------------------------------------
[TS::Map::SquareSpeed]
<nodeType>Const/Enum
<summary>速度係数値
<comment>２を底として速度を累乗した値です。
----------------------------------------
[TS::Map::SquareSpeed::VeryLow]
<nodeType>Const/EnumMember
<summary>非常に遅い
<comment>
----------------------------------------
[TS::Map::SquareSpeed::Low]
<nodeType>Const/EnumMember
<summary>遅い
<comment>
----------------------------------------
[TS::Map::SquareSpeed::Normal]
<nodeType>Const/EnumMember
<summary>通常
<comment>
----------------------------------------
[TS::Map::SquareSpeed::High]
<nodeType>Const/EnumMember
<summary>速い
<comment>
----------------------------------------
[TS::Map::SquareSpeed::VeryHigh]
<nodeType>Const/EnumMember
<summary>非常に速い
<comment>
----------------------------------------
[TS::Map::SquareSpeed::Moment]
<nodeType>Const/EnumMember
<summary>瞬間
<comment>
----------------------------------------
[TS::DB::ColumnNameMaterialHandle]
<nodeType>Const/Const
<type>string
<summary>素材DBハンドル列名
<comment>
----------------------------------------
[TS::DB::System::GameTitle]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/ゲームタイトル
<comment>
----------------------------------------
[TS::DB::System::GameVersion]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/ゲームバージョン
<comment>
----------------------------------------
[TS::DB::System::WindowSize]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/ウィンドウサイズ
<comment>
----------------------------------------
[TS::DB::System::AllowFullScreen]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/フルスクリーン許可
<comment>
----------------------------------------
[TS::DB::System::IconFileName]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/アイコンファイル
<comment>
----------------------------------------
[TS::DB::System::NowLoadingFileName]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/NowLoading素材ファイル
<comment>
----------------------------------------
[TS::DB::System::StandardTransparentColor]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/標準透過色
<comment>
----------------------------------------
[TS::DB::System::DrawInterpolation]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/補間方法
<comment>
----------------------------------------
[TS::DB::System::EffectAsyncLoadMode]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/エフェクト素材非同期読込モード
<comment>
----------------------------------------
[TS::DB::System::EffectFPS]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/エフェクトFPS
<comment>
----------------------------------------
[TS::DB::System::TileSize]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/タイル一辺あたりのピクセル数
<comment>
----------------------------------------
[TS::DB::System::IconSize]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/アイコン一辺あたりのピクセル数
<comment>
----------------------------------------
[TS::DB::System::MaxPartyCount]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/パーティ最大人数
<comment>
----------------------------------------
[TS::DB::System::MaxLevel]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/レベル最大値
<comment>
----------------------------------------
[TS::DB::System::MaxSaveDataCount]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/最大セーブデータ数
<comment>
----------------------------------------
[TS::DB::System::ShadowTransparent]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/影層透明度
<comment>0〜255
----------------------------------------
[TS::DB::System::FogTransparent]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/フォグ透明度
<comment>0〜255
----------------------------------------
[TS::DB::System::EnabledSystemResource]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/システムリソース表示切替
<comment>
----------------------------------------
[TS::DB::System::EnabledLimitedDebug]
<nodeType>Const/Const
<type>string
<summary>システムDB項目名/制限付きデバッグモード
<comment>
----------------------------------------
[CSaveLoad]
<nodeType>GameObject/Class
<summary>セーブロード管理クラス
<comment>ゲームデータのセーブとロードを管理するクラスです。
----------------------------------------
[CSaveLoad::GetAllSaveHeader]
<nodeType>GameObject/MemberFunc
<summary>全データのヘッダー情報更新
<return:void>
<comment>全セーブデータのヘッダー部分を読み込んで情報を更新します。
----------------------------------------
[CSaveLoad::CopyData]
<nodeType>GameObject/MemberFunc
<summary>データをコピー
<return:bool>成功したかどうか
<p1:int fromIndex>コピー元インデックス
<p2:int toIndex>コピー先インデックス
<comment>セーブデータをコピーします。
----------------------------------------
[CSaveLoad::DeleteData]
<nodeType>GameObject/MemberFunc
<summary>データを削除
<return:bool>成功したかどうか
<p1:int targetIndex>削除対象インデックス
<comment>セーブデータを削除します。
----------------------------------------
[CSaveLoad::LoadData]
<nodeType>GameObject/MemberFunc
<summary>データをロード
<return:bool>成功したかどうか
<p1:int targetIndex>ロード対象インデックス
<comment>セーブデータを読み込みます。
----------------------------------------
[CSaveLoad::SaveData]
<nodeType>GameObject/MemberFunc
<summary>データをセーブ
<return:bool>成功したかどうか
<p1:int targetIndex>セーブ対象インデックス
<comment>現在のゲーム情報をセーブします。既にデータが存在する場合、上書きの確認は行われませんのでご注意下さい。
----------------------------------------
[CSaveLoad::QuickSave]
<nodeType>GameObject/MemberFunc
<summary>クイックセーブ
<return:bool>成功したかどうか
<comment>起動中のみ有効なセーブデータを作成します。内部的な処理で完結しているため、ファイル出力は行われません。
----------------------------------------
[CSaveLoad::QuickLoad]
<nodeType>GameObject/MemberFunc
<summary>クイックロード
<return:bool>成功したかどうか
<comment>起動中のみ有効なセーブデータから復元します。
----------------------------------------
[CSaveLoad::IsEnabled]
<nodeType>GameObject/MemberFunc
<summary>セーブデータ検証
<return:bool>有効なセーブデータであるかどうか
<p1:int index>対象インデックス
<comment>指定したセーブデータが有効なデータ（存在しており、かつバージョンが一致している）であるかどうかを検証します。
----------------------------------------
[CSaveLoad::GetSaveHeader]
<nodeType>GameObject/MemberFunc
<summary>指定データのヘッダー取得
<return:string>ヘッダー情報
<p1:int index>対象インデックス
<comment>指定したセーブデータのヘッダー情報を取得します。
----------------------------------------
[CSaveLoad::GetSaveDateTime]
<nodeType>GameObject/MemberFunc
<summary>指定データの日時取得
<return:string>セーブ日時情報
<p1:int index>対象インデックス
<comment>指定したセーブデータの日時情報を取得します。
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>スプライト画像クラス
<comment>スプライトの画像部分に関する情報を管理するクラスです。
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea::VisibleRange]
<nodeType>GameObject/MemberProperty
<type>CRectangle (読み取り専用)
<summary>可視範囲
<comment>画像の領域について、表示制限を行う場合に設定します。
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea::Location]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>表示位置
<comment>スプライト自体の表示位置に依存します。
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea::Size]
<nodeType>GameObject/MemberProperty
<type>CSize (読み取り専用)
<summary>画像サイズ
<comment>この画像のサイズです。自動で設定されるため、取得にだけ使用します。
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea::ExtendRateV]
<nodeType>GameObject/MemberValue
<type>int
<summary>縦方向拡大率
<comment>等倍=100
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea::ExtendRateH]
<nodeType>GameObject/MemberValue
<type>int
<summary>横方向拡大率
<comment>等倍=100
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea::Draw]
<nodeType>GameObject/MemberFunc
<summary>グラフィック描画
<return:void>
<p1:CPoint pos>補正座標
<comment>このグラフィックを描画します。
----------------------------------------
[CSprite::CSpriteData::CSpriteGraphicArea::InitVisibleRange]
<nodeType>GameObject/MemberFunc
<summary>可視範囲を初期化
<return:void>
<comment>一度設定した可視範囲を初期化して、すべての範囲が見えるようにします。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>スプライト文字列クラス
<comment>スプライトの文字列に関する情報を管理するクラスです。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea::Text]
<nodeType>GameObject/MemberValue
<type>string
<summary>文字列
<comment>表示される文字列です。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea::Align]
<nodeType>GameObject/MemberValue
<type>int
<summary>整列方向
<comment>文字列の整列方向です。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea::Color]
<nodeType>GameObject/MemberValue
<type>int
<summary>表示色
<comment>カラーコードで示します。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea::FontID]
<nodeType>GameObject/MemberValue
<type>int
<summary>フォントID
<comment>汎用素材DBで定義されたフォントのFixedIDです。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea::DrawArea]
<nodeType>GameObject/MemberProperty
<type>CRectangle (読み取り専用)
<summary>可視範囲
<comment>文字列の領域について、表示制限を行う場合に設定します。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea::Location]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>表示位置
<comment>スプライト自体の表示位置に依存します。
----------------------------------------
[CSprite::CSpriteData::CSpriteTextArea::Draw]
<nodeType>GameObject/MemberFunc
<summary>テキストを描画
<return:void>
<p1:CPoint pos>補正座標
<comment>このテキストを描画します。
----------------------------------------
[CSprite::CSpriteData]
<nodeType>GameObject/Class
<parent>CIDNameData
<summary>スプライトデータクラス
<comment>スプライト単体のデータを管理するクラスです。
----------------------------------------
[CSprite::CSpriteData::WipeType]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>ワイプ種別
<comment>このスプライトのワイプ種別番号です。
----------------------------------------
[CSprite::CSpriteData::WipeSpeed]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>ワイプ速度
<comment>このスプライトの速度です。
----------------------------------------
[CSprite::CSpriteData::WipeCounter]
<nodeType>GameObject/MemberProperty
<type>int
<summary>ワイプカウンター
<comment>このスプライトのワイプがどのくらい進んでいるかを示します。
----------------------------------------
[CSprite::CSpriteData::Hide]
<nodeType>GameObject/MemberValue
<type>bool
<summary>非表示かどうか
<comment>
----------------------------------------
[CSprite::CSpriteData::Location]
<nodeType>GameObject/MemberProperty
<type>CPoint (読み取り専用)
<summary>表示位置
<comment>
----------------------------------------
[CSprite::CSpriteData::Trans]
<nodeType>GameObject/MemberProperty
<type>int
<summary>透明度
<comment>0〜255の範囲で有効です。
----------------------------------------
[CSprite::CSpriteData::GetGraphicsCount]
<nodeType>GameObject/MemberFunc
<summary>グラフィック総数取得
<return:int>このスプライトに含まれるグラフィック総数
<comment>このスプライトに含まれるグラフィックの総数を取得します。
----------------------------------------
[CSprite::CSpriteData::AddGraphics]
<nodeType>GameObject/MemberFunc
<summary>画像を追加
<return:int>スプライト画像リスト上における、新しく追加された画像のインデックス
<p1:string path>ファイル名
<p2:int x>表示位置X座標
<p3:int y>表示位置Y座標
<p4:int baseHandle = -1>既存の画像ハンドルを使用しない場合は -1 を入れてください。
<comment>このスプライトに画像を追加します。既存の画像ハンドルを使用する場合はファイル名が無効となります。
----------------------------------------
[CSprite::CSpriteData::ChangeGraphics]
<nodeType>GameObject/MemberFunc
<summary>画像を変更
<return:void>
<p1:int index>スプライト画像リスト上におけるインデックス
<p2:string path>ファイル名
<p3:int x>表示位置X座標
<p4:int y>表示位置Y座標
<p5:int baseHandle = -1>既存の画像ハンドルを使用しない場合は -1 を入れてください。
<comment>このスプライトの指定した画像を変更します。既存の画像ハンドルを使用する場合はファイル名が無効となります。
----------------------------------------
[CSprite::CSpriteData::DeleteGraphics]
<nodeType>GameObject/MemberFunc
<summary>画像を削除
<return:void>
<p1:int index>スプライト画像リスト上におけるインデックス
<comment>このスプライトの指定した画像を削除します。
----------------------------------------
[CSprite::CSpriteData::GetGraphics]
<nodeType>GameObject/MemberFunc
<summary>画像データ取得
<return:CSpriteGraphicArea*>スプライト画像データ
<p1:int index>スプライト画像リスト上のインデックス
<comment>このスプライトの指定した画像のデータを取得します。
----------------------------------------
[CSprite::CSpriteData::GetTextsCount]
<nodeType>GameObject/MemberFunc
<summary>テキスト総数取得
<return:int>このスプライトに含まれるテキストの総数
<comment>このスプライトに含まれるテキストの総数を取得します。
----------------------------------------
[CSprite::CSpriteData::AddText]
<nodeType>GameObject/MemberFunc
<summary>文字列を追加
<return:int>スプライト文字列リスト上における、新しく追加された文字列のインデックス
<p1:string text>表示文字列
<p2:int x>表示位置X座標
<p3:int y>表示位置Y座標
<p4:int color>表示色
<p5:int fontID>フォントID
<p6:int align = static_cast<int>(TS::Sprite::TextAlign::Left)>整列方向
<comment>このスプライトに文字列を追加します。
----------------------------------------
[CSprite::CSpriteData::ChangeText]
<nodeType>GameObject/MemberFunc
<summary>文字列を変更
<return:void>
<p1:int index>スプライト文字列リスト上におけるインデックス
<p2:string text>変更後の文字列
<comment>このスプライトの指定した文字列を変更します。
----------------------------------------
[CSprite::CSpriteData::DeleteText]
<nodeType>GameObject/MemberFunc
<summary>文字列を削除
<return:void>
<p1:int index>スプライト文字列リスト上におけるインデックス
<comment>このスプライトの指定した文字列を削除します。
----------------------------------------
[CSprite::CSpriteData::GetText]
<nodeType>GameObject/MemberFunc
<summary>文字列データ取得
<return:CSpriteTextArea*>スプライト文字列データ
<p1:int index>スプライト文字列リスト上におけるインデックス
<comment>このスプライトの指定した文字列のデータを取得します。
----------------------------------------
[CSprite::CSpriteData::Draw]
<nodeType>GameObject/MemberFunc
<summary>スプライト描画
<return:void>
<comment>このスプライトを描画します。
----------------------------------------
[CSprite::CSpriteData::WipeIn]
<nodeType>GameObject/MemberFunc
<summary>ワイプイン
<return:void>
<p1:int type>ワイプ種別 (ユーザー定義値)
<p2:int wipeSpeed>ワイプ速度
<comment>このスプライトを画面上に表示させます。反映にはシーン描画を行う必要があります。
----------------------------------------
[CSprite::CSpriteData::WipeOut]
<nodeType>GameObject/MemberFunc
<summary>ワイプアウト
<return:void>
<p1:int type>ワイプ種別 (ユーザー定義値)
<p2:int wipeSpeed>ワイプ速度
<p3:bool afterDelete>ワイプアウト後にリソースを破棄するかどうか。今後使用しない場合はTrue
<comment>このスプライトを画面上から消去します。反映にはシーン描画を行う必要があります。
----------------------------------------
[CSprite]
<nodeType>GameObject/Class
<summary>スプライト管理クラス
<comment>画面上に表示されるスプライトを統括管理するクラスです。
----------------------------------------
[CSprite::ForbidLayerDraw]
<nodeType>GameObject/MemberValue
<type>bool
<summary>スプライト描画禁止フラグ
<comment>このフラグが有効であるとき、スプライトは描画されなくなります。
----------------------------------------
[CSprite::Add]
<nodeType>GameObject/MemberFunc
<summary>スプライトを追加
<return:void>
<p1:int ID>ユーザー定義の識別番号
<comment>空のスプライトを追加します。
----------------------------------------
[CSprite::Delete]
<nodeType>GameObject/MemberFunc
<summary>スプライトを削除
<return:void>
<p1:int ID>ユーザー定義の識別番号
<comment>指定したIDのスプライトを削除します。
----------------------------------------
[CSprite::Clear]
<nodeType>GameObject/MemberFunc
<summary>すべて削除
<return:void>
<p1:int wipeType>ワイプ種別 (ユーザー定義値)
<p2:int wipeSpeed = static_cast<int>(TS::Map::Speed::Normal)>ワイプ速度
<comment>すべてのスプライトを消去し、リソースを開放させます。
----------------------------------------
[CSprite::Get]
<nodeType>GameObject/MemberFunc
<summary>スプライトデータ取得
<return:CSpriteData*>スプライトデータ
<p1:int ID>ユーザー定義の識別番号
<comment>指定したIDのスプライトデータを取得します。
----------------------------------------
[CSprite::AddNewGraphics]
<nodeType>GameObject/MemberFunc
<summary>新規画像付きのスプライトを追加
<return:void>
<p1:int ID>ユーザー定義の識別番号
<p2:string path>ファイル名
<p3:int x>表示位置X座標
<p4:int y>表示位置Y座標
<comment>指定した画像を持ったスプライトを追加します。ワイプインは手動で行う必要があります。
----------------------------------------
[CSprite::AddLoadedGraphics]
<nodeType>GameObject/MemberFunc
<summary>既存画像付きのスプライトを追加
<return:void>
<p1:int ID>ユーザー定義の識別番号
<p2:int graphID>既存の画像ハンドル
<p3:int x>表示位置X座標
<p4:int y>表示位置Y座標
<comment>指定した画像を持ったスプライトを追加します。ワイプインは手動で行う必要があります。
----------------------------------------
[CSprite::AddWipeNewGraphics]
<nodeType>GameObject/MemberFunc
<summary>新規画像付きのスプライトを追加してワイプイン
<return:void>
<p1:int ID>ユーザー定義の識別番号
<p2:string path>ファイル名
<p3:int x>表示位置X座標
<p4:int y>表示位置Y座標
<p5:int wipeType>ワイプ種別 (任意値)
<p6:int wipeSpeed>ワイプ速度
<comment>指定した画像を持ったスプライトを追加し、即座にワイプインを開始します。
----------------------------------------
[CSprite::AddWipeLoadedGraphics]
<nodeType>GameObject/MemberFunc
<summary>既存画像付きのスプライトを追加してワイプイン
<return:void>
<p1:int ID>ユーザー定義の識別番号
<p2:int graphID>既存の画像ハンドル
<p3:int x>表示位置X座標
<p4:int y>表示位置Y座標
<p5:int wipeType>ワイプ種別 (任意値)
<p6:int wipeSpeed>ワイプ速度
<comment>指定した画像を持ったスプライトを追加し、即座にワイプインを開始します。
----------------------------------------
[CSprite::Copy]
<nodeType>GameObject/MemberFunc
<summary>スプライトをコピー
<return:void>
<p1:int newID>新しいスプライトの識別番号
<p2:int baseID>コピー元の識別番号
<p3:int x>表示位置X座標
<p4:int y>表示位置Y座標
<comment>既存のスプライトをコピーします。ワイプインは手動で行う必要があります。
----------------------------------------
[CSprite::CopyWipe]
<nodeType>GameObject/MemberFunc
<summary>スプライトをコピーしてワイプイン
<return:void>
<p1:int newID>新しいスプライトの識別番号
<p2:int baseID>コピー元の識別番号
<p3:int x>表示位置X座標
<p4:int y>表示位置Y座標
<p5:int wipeType>ワイプ種別 (ユーザー定義値)
<p6:int wipeSpeed>ワイプ速度
<comment>既存のスプライトをコピーし、即座にワイプインを開始します。
----------------------------------------
[CSprite::WipeInRange]
<nodeType>GameObject/MemberFunc
<summary>指定ID範囲をワイプイン
<return:void>
<p1:int startID>始点とする識別番号
<p2:int endID>終点とする識別番号
<p3:int wipeType>ワイプ種別 (ユーザー定義値)
<p4:int wipeSpeed>ワイプ速度
<comment>指定したID範囲のスプライトについて一括でワイプインを開始します。
----------------------------------------
[CSprite::WipeOutRange]
<nodeType>GameObject/MemberFunc
<summary>指定ID範囲をワイプアウト
<return:void>
<p1:int startID>始点とする識別番号
<p2:int endID>終点とする識別番号
<p3:int wipeType>ワイプ種別 (ユーザー定義値)
<p4:int wipeSpeed>ワイプ速度
<p5:bool afterDelete = true>ワイプアウト後にリソースを破棄するかどうか。今後使用しない場合はTrue
<comment>指定したID範囲のスプライトについて一括でワイプアウトを開始します。
----------------------------------------
[CGameObject]
<nodeType>GameObject/Class
<summary>ゲーム管理クラス
<comment>ゲームプログラムの根幹となるクラスです。ユーザー自身でインスタンスを作成しても意味はありません。
----------------------------------------
[CGameObject::MT]
<nodeType>GameObject/MemberProperty
<type>CMultiThread (読み取り専用)
<summary>疑似スレッドMGR
<comment>疑似マルチスレッド管理クラスのインスタンスです。
----------------------------------------
[CGameObject::FPSKeeper]
<nodeType>GameObject/MemberProperty
<type>CFPS (読み取り専用)
<summary>フレームレートMGR
<comment>フレームレート管理クラスのインスタンスです。
----------------------------------------
[CGameObject::DXLib]
<nodeType>GameObject/MemberProperty
<type>CDXLibWrapper (読み取り専用)
<summary>DXライブラリMGR
<comment>DXライブラリラッパークラスのインスタンスです。
----------------------------------------
[CGameObject::DB]
<nodeType>GameObject/MemberProperty
<type>CDatabase (読み取り専用)
<summary>データベースMGR
<comment>データベース管理クラスのインスタンスです。
----------------------------------------
[CGameObject::Sprite]
<nodeType>GameObject/MemberProperty
<type>CSprite (読み取り専用)
<summary>スプライトMGR
<comment>スプライト管理クラスのインスタンスです。
----------------------------------------
[CGameObject::SaveLoad]
<nodeType>GameObject/MemberProperty
<type>CSaveLoad (読み取り専用)
<summary>セーブデータMGR
<comment>セーブデータ管理クラスのインスタンスです。
----------------------------------------
[CGameObject::Material]
<nodeType>GameObject/MemberProperty
<type>CMaterial (読み取り専用)
<summary>素材MGR
<comment>素材管理クラスのインスタンスです。
----------------------------------------
[CGameObject::ForbidSceneDraw]
<nodeType>GameObject/MemberValue
<type>bool
<summary>シーン描画禁止フラグ
<comment>このフラグが有効であるとき、シーン描画を停止します。
----------------------------------------
[CGameObject::ForbidSceneInput]
<nodeType>GameObject/MemberValue
<type>bool
<summary>シーン入力禁止フラグ
<comment>このフラグが有効であるとき、シーン入力を停止します。
----------------------------------------
[CGameObject::BGMKeep]
<nodeType>GameObject/MemberValue
<type>bool
<summary>シーン内BGM切替禁止フラグ
<comment>マップを移動してもBGMを切り替えないようにするためのフラグです。シーンをまたぐときはBGMが破棄されてしまうため維持することができません。一度有効にされると、ユーザーによって解除されるまで有効ですが、セーブの対象とはなりません。
----------------------------------------
[CGameObject::BGSKeep]
<nodeType>GameObject/MemberValue
<type>bool
<summary>シーン内BGS切替禁止フラグ
<comment>マップを移動してもBGSを切り替えないようにするためのフラグです。シーンをまたぐときはBGSが破棄されてしまうため維持することができません。一度有効にされると、ユーザーによって解除されるまで有効ですが、セーブの対象とはなりません。
----------------------------------------
[CGameObject::CurrentPath]
<nodeType>GameObject/MemberProperty
<type>string (読み取り専用)
<summary>カレントディレクトリ
<comment>ゲームプログラムのあるディレクトリのフルパスです。
----------------------------------------
[CGameObject::RunMode]
<nodeType>GameObject/MemberProperty
<type>int (読み取り専用)
<summary>起動モード
<comment>ゲームプログラムの起動モードを示します。
----------------------------------------
[CGameObject::WindowSize]
<nodeType>GameObject/MemberProperty
<type>CSize (読み取り専用)
<summary>ウィンドウサイズ
<comment>システムDBで設定されたウィンドウサイズです。
----------------------------------------
[CGameObject::DrawBright]
<nodeType>GameObject/MemberProperty
<type>CRGBColor (読み取り専用)
<summary>シーン描画輝度
<comment>シーンの描画輝度を示します。
----------------------------------------
[CGameObject::Wait]
<nodeType>GameObject/MemberFunc
<summary>ウェイト
<return:bool>キー入力によってウェイトが中断されたかどうか
<p1:double timeSecond>ウェイト秒数
<p2:bool enabledMT>バックグラウンド処理を継続するかどうか（シーン描画を含む）
<p3:bool keyUpBreak>キー入力によって中断できるようにするかどうか
<comment>処理を一時停止します。並列実行するスクリプトでは必ずバックグラウンド処理を継続させて下さい。
----------------------------------------
[CGameObject::WaitKey]
<nodeType>GameObject/MemberFunc
<summary>キーウェイト
<return:void>
<p1:bool enabledMT>バックグラウンド処理を継続するかどうか（シーン描画を含む）
<comment>キー入力があるまで処理を停止します。並列実行するスクリプトでは必ずバックグラウンド処理を継続させて下さい。
----------------------------------------
[CGameObject::IsAnyKeyDown]
<nodeType>GameObject/MemberFunc
<summary>キー押下チェック
<return:bool>押されている場合はTrue
<comment>何らかのキーが押されているかどうかをチェックします。
----------------------------------------
[CGameObject::GetKeyInputCounter]
<nodeType>GameObject/MemberFunc
<summary>キー継続押下情報を取得
<return:int>フレーム単位での押下時間
<p1:int keyID>取得するキー番号
<comment>指定したキーが押しっぱなしにされている時間をフレーム単位で取得します。
----------------------------------------
[CGameObject::SetKeyInputCounter]
<nodeType>GameObject/MemberFunc
<summary>キー継続押下情報を設定
<return:void>
<p1:int keyID>設定するキー番号
<p2:int val>値
<comment>指定したキーが押しっぱなしにされているフレーム時間を手動で設定します。
----------------------------------------
[CGameObject::PrepareTransition]
<nodeType>GameObject/MemberFunc
<summary>トランジション準備
<return:void>
<comment>画面の描画を停止します。内部の動作は継続されます。
----------------------------------------
[CGameObject::DoTransition]
<nodeType>GameObject/MemberFunc
<summary>トランジション実行
<return:void>
<p1:string blendFileName>トランジション用のパターン画像ファイル名
<p2:int speed>移行速度
<comment>前後の画面を滑らかに移行させます。必ず事前にトランジションの準備を行う必要があります。
----------------------------------------
[CGameObject::FadeOut]
<nodeType>GameObject/MemberFunc
<summary>フェードアウト
<return:void>
<p1:int speed>速度 (１フレーム当たりの増減量)
<comment>画面をフェードアウトさせます。フェードインするまではシーン描画が行われなくなります。
----------------------------------------
[CGameObject::FadeIn]
<nodeType>GameObject/MemberFunc
<summary>フェードイン
<return:void>
<p1:int speed>速度 (１フレーム当たりの増減量)
<comment>画面をフェードインさせます。
----------------------------------------
[CGameObject::StartSubScene]
<nodeType>GameObject/MemberFunc
<summary>サブシーン開始
<return:void>
<p1:int sceneID>シーン番号
<p2:bool keepMainScene>メインシーンの描画を維持するかどうか
<p3:bool waitMode>サブシーンが終了するまで処理を停止するかどうか
<comment>サブシーンへ移行します。タイトルとマップはメインシーンであるため、それ以外のシーンを割り当てます。
----------------------------------------
[CGameObject::EndSubScene]
<nodeType>GameObject/MemberFunc
<summary>サブシーン終了
<return:void>
<comment>メインシーンに処理を戻します。
----------------------------------------
[CGameObject::IsSubScene]
<nodeType>GameObject/MemberFunc
<summary>サブシーンに移行しているか
<return:bool>サブシーンである場合はTrue
<comment>メインシーンの中でサブシーンが動作している状態かどうかを検証します。メインシーンの描画を維持しない設定でもサブシーンであるときはTrueが返されます。
----------------------------------------
[CGameObject::ChangeToTitleScene]
<nodeType>GameObject/MemberFunc
<summary>タイトルシーンに移行
<return:void>
<comment>
----------------------------------------
[CGameObject::ChangeToMapScene]
<nodeType>GameObject/MemberFunc
<summary>マップシーンに移行
<return:void>
<comment>
----------------------------------------
[CGameObject::GetCurrentMainSceneID]
<nodeType>GameObject/MemberFunc
<summary>メインシーンID取得
<return:int>メインシーンID
<comment>
----------------------------------------
[CGameObject::GetCurrentSubSceneID]
<nodeType>GameObject/MemberFunc
<summary>サブシーンID取得
<return:int>サブシーンID (サブシーンが無効な場合は -1)
<comment>サブシーンに移行していない場合は -1 が返されます。
----------------------------------------
[CGameObject::CheckCurrentSceneID]
<nodeType>GameObject/MemberFunc
<summary>シーンID検証
<return:bool>現在アクティブなシーンと一致する場合はTrue
<p1:int sceneID>シーンID
<comment>指定したシーンが現在アクティブなシーンであるかを検証します。メインシーンを維持しながらサブシーンに移行している場合は、サブシーンでのみ一致します。
----------------------------------------
[CGameObject::DoSceneDraw]
<nodeType>GameObject/MemberFunc
<summary>シーン描画
<return:void>
<comment>現在のシーン描画を行います。これにはスプライトの描画等も含まれます。
----------------------------------------
[CGameObject::DoSceneInput]
<nodeType>GameObject/MemberFunc
<summary>シーン入力
<return:void>
<comment>現在のシーン入力を行います。これには各種キーの継続的な押下状態のチェック等も含まれます。
----------------------------------------
[CGameObject::SceneMap]
<nodeType>GameObject/MemberProperty
<type>CSceneMap (読み取り専用)
<summary>マップシーンMGR
<comment>マップシーンのインスタンスです。現在のシーンがマップシーンでない場合は無効となります。
----------------------------------------
[CGameObject::SceneTitle]
<nodeType>GameObject/MemberProperty
<type>CSceneTitle (読み取り専用)
<summary>タイトルシーンMGR
<comment>タイトルシーンのインスタンスです。現在のシーンがタイトルシーンでない場合は無効となります。
----------------------------------------
[CGameObject::GetCurrentSceneName]
<nodeType>GameObject/MemberFunc
<summary>現在のシーン名を取得
<return:string>シーン名
<comment>
----------------------------------------
[CGameObject::SQInclude]
<nodeType>GameObject/MemberFunc
<summary>外部スクリプト読込
<return:void>
<p1:string fileName>ファイル名
<comment>グローバル領域にあるコードはそのまま実行されます。機能の読み込みとして使う場合は宣言だけにするか、関数としてまとめて下さい。なお、スクリプトの仕様のため定数や列挙体は取り込めません。
----------------------------------------
[CGameObject::SQBreakPoint]
<nodeType>GameObject/MemberFunc
<summary>ブレークポイント
<return:void>
<comment>次の行からステップ実行を開始させます。これは手動でステップ実行に移るのが難しい箇所のデバッグ用途で使います。
----------------------------------------
[CGameObject::SQBreakResume]
<nodeType>GameObject/MemberFunc
<summary>ステップ実行から復帰
<return:void>
<comment>スクリプトのステップ実行を終了し、通常のコード実行に戻ります。
----------------------------------------
[CGameObject::MsgBox]
<nodeType>GameObject/ClassFunc
<summary>メッセージボックス表示
<return:int>押されたボタン
<p1:string msg>メッセージ内容
<p2:string caption>タイトル
<p3:int iconID>メッセージボックスのアイコン
<p4:int buttonID>メッセージボックスのボタン種別
<comment>Windows標準のメッセージボックスを表示します。しかし、ゲームには操作性やデザインの面であまり適していません。
----------------------------------------
[CGameObject::ScanConsole]
<nodeType>GameObject/ClassFunc
<summary>デバッグコンソール入力受付
<return:string>入力文字列
<comment>【デバッグ時のみ】デバッグコンソールからの入力を受け付け、その文字列を返します。
----------------------------------------
[CGameObject::PrintLog]
<nodeType>GameObject/ClassFunc
<summary>ログ出力
<return:void>
<p1:string text>文字列
<comment>任意の文字列をデバッグコンソールに出力します。出力された文字列は、エラー発生時に書き込まれるログファイルにも含められます。
----------------------------------------
[CGameObject::ApplicationExit]
<nodeType>GameObject/ClassFunc
<summary>プログラム終了
<return:void>
<p1:int code = static_cast<int>(TS::System::ExitCode::Error)>終了コード
<comment>ゲームプログラムをただちに終了させます。
----------------------------------------
[CGameObject::StartMeasureProcTime]
<nodeType>GameObject/ClassFunc
<summary>処理時間の計測開始
<return:void>
<comment>指定した区間の処理時間を計測するのに使います。計測終了時にその経過時間がコンソールにログ出力されます。
----------------------------------------
[CGameObject::ContinueMeasureProcTime]
<nodeType>GameObject/ClassFunc
<summary>処理時間の計測続行
<return:void>
<p1:string tag>表示名
<comment>指定した区間の処理時間を計測するのに使います。計測結果を表示してすぐに新たな計測を開始します。
----------------------------------------
[CGameObject::EndMeasureProcTime]
<nodeType>GameObject/ClassFunc
<summary>処理時間の計測終了
<return:void>
<p1:string tag>表示名
<comment>指定した区間の処理時間を計測するのに使います。計測結果を表示します。
----------------------------------------
[CGameObject::WithIn]
<nodeType>GameObject/ClassFunc
<summary>数値補正
<return:int>補正後の値
<p1:int val>補正前の値
<p2:int _min>最小値
<p3:int _max>最大値
<comment>与えられた値を最小値〜最大値の間に補正します。
----------------------------------------
[CGameObject::UpAround]
<nodeType>GameObject/ClassFunc
<summary>ループ数値加算
<return:int>加算後の値
<p1:int val>現在の値（次の値ではない）
<p2:int _min>最小値
<p3:int _max>最大値
<comment>与えられた値を１足して、最大値に達した場合は最小値に戻して返します。
----------------------------------------
[CGameObject::DownAround]
<nodeType>GameObject/ClassFunc
<summary>ループ数値減算
<return:int>減算後の値
<p1:int val>現在の値（次の値ではない）
<p2:int _min>最小値
<p3:int _max>最大値
<comment>与えられた値から１引いて、最小値を下回った場合は（最大値−１）に戻して返します。
----------------------------------------
[CGameObject::IntToBool]
<nodeType>GameObject/ClassFunc
<summary>整数値を論理値へ変換
<return:bool>変換後の論理値
<p1:int value>変換前の整数値
<comment>
----------------------------------------
[CGameObject::BoolToInt]
<nodeType>GameObject/ClassFunc
<summary>論理値を整数値へ変換
<return:int>変換後の整数値
<p1:bool value>変換前の論理値
<comment>
----------------------------------------
[CGameObject::NextRand]
<nodeType>GameObject/ClassFunc
<summary>ランダム値を取得
<return:int>ランダム値
<p1:int min>最小値
<p2:int max>最大値
<comment>最小値〜最大値の間でランダムな数値を生成します。
----------------------------------------
[CGameObject::CutDQ]
<nodeType>GameObject/ClassFunc
<summary>両端のダブルクォートを削除
<return:string>ダブルクォートが削除された文字列
<p1:string baseString>両端にダブルクォートが付いた文字列
<comment>
----------------------------------------
[CGameObject::IntToAlphabet]
<nodeType>GameObject/ClassFunc
<summary>整数値をアルファベットに変換
<return:string>アルファベット１文字
<p1:int value>値
<comment>0=A, 1=B, ... の要領で数値をアルファベットに変換します。
----------------------------------------
[CGameObject::SubString]
<nodeType>GameObject/ClassFunc
<summary>部分文字列を取得
<return:string>部分文字列
<p1:string src>対象文字列
<p2:int start>開始インデックス
<p3:int length>長さ (-1で末尾までを対象とする)
<comment>与えられた文字列の一部分を取得します。
----------------------------------------
[CGameObject::Replace]
<nodeType>GameObject/ClassFunc
<summary>指定文字列を置換
<return:string>置換後の文字列
<p1:string baseString>対象文字列
<p2:string before>置換対象の文字列
<p3:string after>置換後の文字列
<comment>指定した文字列を置換します。
----------------------------------------
[CGameObject::Insert]
<nodeType>GameObject/ClassFunc
<summary>文字列を挿入
<return:string>挿入後の文字列
<p1:string dest>対象文字列
<p2:int index>挿入位置
<p3:string text>挿入する文字列
<comment>与えられた文字列の指定位置に文字列を挿入して返します。
----------------------------------------
[CGameObject::GetStringLength]
<nodeType>GameObject/ClassFunc
<summary>文字数を取得
<return:int>文字数
<p1:string src>対象文字列
<comment>与えられた文字列の文字数（全角文字を１文字と数える）を取得します。
----------------------------------------
[Game]
<nodeType>Value/GlobalValue
<type>CGameObject
<summary>ゲームMGR
<comment>ゲームプログラムに関するすべての情報を司るインスタンスです。
----------------------------------------
[DEBUG]
<nodeType>Const/Const
<summary>デバッグモードかどうか
<comment>デバッグモードであるかどうかを示す論理値です。
----------------------------------------
[FALSE]
<nodeType>Const/Const
<summary>OFF/数値
<comment>論理値の「偽」を整数で表したものです。
----------------------------------------
[TRUE]
<nodeType>Const/Const
<summary>ON/数値
<comment>論理値の「真」を整数で表したものです。
----------------------------------------
[RED]
<nodeType>Const/Const
<summary>カラーコード赤
<comment>
----------------------------------------
[GREEN]
<nodeType>Const/Const
<summary>カラーコード緑
<comment>
----------------------------------------
[BLUE]
<nodeType>Const/Const
<summary>カラーコード青
<comment>
----------------------------------------
[BLACK]
<nodeType>Const/Const
<summary>カラーコード黒
<comment>
----------------------------------------
[WHITE]
<nodeType>Const/Const
<summary>カラーコード白
<comment>
----------------------------------------
[YELLOW]
<nodeType>Const/Const
<summary>カラーコード黄
<comment>
----------------------------------------
[GREENYELLOW]
<nodeType>Const/Const
<summary>カラーコード黄緑
<comment>
----------------------------------------
[GREENBLUE]
<nodeType>Const/Const
<summary>カラーコード緑青
<comment>
----------------------------------------
[BLUEGREEN]
<nodeType>Const/Const
<summary>カラーコード青緑
<comment>
----------------------------------------
[GRAY]
<nodeType>Const/Const
<summary>カラーコード灰
<comment>
----------------------------------------
[DARKGRAY]
<nodeType>Const/Const
<summary>カラーコード濃灰
<comment>
----------------------------------------
[ORANGE]
<nodeType>Const/Const
<summary>カラーコード橙
<comment>
----------------------------------------
[PURPLE]
<nodeType>Const/Const
<summary>カラーコード紫
<comment>
----------------------------------------
[PINK]
<nodeType>Const/Const
<summary>カラーコード桃
<comment>
----------------------------------------
[CYAN]
<nodeType>Const/Const
<summary>カラーコード薄青
<comment>
----------------------------------------
[BROWN]
<nodeType>Const/Const
<summary>カラーコード茶
<comment>
----------------------------------------
[DARKBLUE]
<nodeType>Const/Const
<summary>カラーコード濃青
<comment>
----------------------------------------
[INT_MAX]
<nodeType>Const/Const
<summary>整数/最大値
<comment>スクリプトで表現できる整数値の最大値です。
----------------------------------------
[INT_MIN]
<nodeType>Const/Const
<summary>整数/最小値
<comment>スクリプトで表現できる整数値の最小値です。
----------------------------------------
[SQEventHandler::EventHandler_NowLoading]
<nodeType>SQEventHandler/SQFunc
<summary>リソース読込時の背景処理
<return:void>
<p1:intGraphHandle>背景処理に必要なグラフィック素材のハンドル
<comment>リソースをバックグラウンドで読み込んでいる間に毎フレーム呼び出されます。False以外を返すと背景処理が継続されます。
----------------------------------------
[SQEventHandler::EventHandler_StartMapTest]
<nodeType>SQEventHandler/SQFunc
<summary>マップテスト開始
<return:void>
<p1:strMapFileName>ファイル名
<p2:intX>X座標
<p3:intY>Y座標
<comment>マップテスターが起動したときに呼び出されます。
----------------------------------------
[SQEventHandler::EventHandler_StartBattleTest]
<nodeType>SQEventHandler/SQFunc
<summary>バトルテスト開始
<return:void>
<p1:intUnitID>ユニットID
<comment>バトルテスターが起動したときに呼び出されます。
----------------------------------------
[SQEventHandler::EventHandler_WipeSprite]
<nodeType>SQEventHandler/SQFunc
<summary>拡張ワイプ
<return:void>
<p1:spriteData>対象スプライト
<comment>ワイプ処理を行うときに呼び出されます。
----------------------------------------
[SQEventHandler::EventHandler_RequiredSaveHeader]
<nodeType>SQEventHandler/SQFunc
<summary>セーブデータのヘッダー定義
<return:string>セーブデータのヘッダー文字列
<comment>セーブデータのヘッダーとして用いられる文字列を定義します。
----------------------------------------
[SQEventHandler::EventHandler_LoadUserData]
<nodeType>SQEventHandler/SQFunc
<summary>セーブデータのユーザー定義部分読込
<return:void>
<p1:strSaveData>事前に読み込まれたユーザー定義部分の文字列
<comment>ユーザーが自由に読み書きできるセーブデータ領域部分を操作します。
----------------------------------------
[SQEventHandler::EventHandler_SaveUserData]
<nodeType>SQEventHandler/SQFunc
<summary>セーブデータのユーザー定義部分書込
<return:string>書き込むユーザー定義部分の文字列
<comment>ユーザーが自由に読み書きできるセーブデータ領域部分を操作します。
----------------------------------------
[SQEventHandler::EventHandler_ShowMessage]
<nodeType>SQEventHandler/SQFunc
<summary>会話メッセージ
<return:void>
<p1:intFaceID>フェイスID
<p2:strSpeaker>話者名
<p3:strMsg>メッセージ内容
<comment>会話等のセリフを表示します。
----------------------------------------
[SQEventHandler::EventHandler_ChangeMap]
<nodeType>SQEventHandler/SQFunc
<summary>マップ移動
<return:void>
<p1:strMapFileName>ファイル名
<p2:intX>X座標
<p3:intY>Y座標
<p4:intDirection4>移動後の向き
<comment>マップを移動させます。同一マップ内でも移動することができます。
----------------------------------------
[SQEventHandler::EventHandler_EVMove]
<nodeType>SQEventHandler/SQFunc
<summary>拡張イベント移動
<return:bool>移動が完了したかどうか
<p1:intEVID>対象イベントID
<p2:intOption>オプション値
<comment>イベント日常移動/臨時移動で拡張的な処理をする場合に呼び出されます。
----------------------------------------
[SQEventHandler::EventHandler_DebugCommand]
<nodeType>SQEventHandler/SQFunc
<summary>拡張デバッグコマンド
<return:bool>適切に処理されたかどうか
<p1:strCommandArg>ユーザーによって入力されたパラメーター文字列
<comment>デバッグウィンドウで操作できるコマンドで拡張的な処理をする場合に呼び出されます。
----------------------------------------
[SQEventHandler::StateStart]
<nodeType>SQEventHandler/SQFunc
<summary>間接効果設定時
<return:void>
<p1:intStateID>間接効果ID
<p2:actorData>アクター情報
<comment>指定した間接効果に罹ったときに追加的な処理をする場合に呼び出されます。
----------------------------------------
[SQEventHandler::StateEnd]
<nodeType>SQEventHandler/SQFunc
<summary>間接効果解除時
<return:void>
<p1:intStateID>間接効果ID
<p2:actorData>アクター情報
<p3:hasUpper>上位互換の間接効果に罹患させるために解除されたかどうか
<comment>指定した間接効果が解除されたときに追加的な処理をする場合に呼び出されます。
----------------------------------------
[SQEventHandler::SceneMainDraw]
<nodeType>SQEventHandler/SQFunc
<summary>メインシーン描画
<return:void>
<comment>
----------------------------------------
[SQEventHandler::SceneMainInput]
<nodeType>SQEventHandler/SQFunc
<summary>メインシーン入力
<return:void>
<comment>サブシーンが有効であるときは実行されません。
----------------------------------------
[SQEventHandler::SceneMainSetup]
<nodeType>SQEventHandler/SQFunc
<summary>メインシーン初期化
<return:void>
<comment>シーンが始まるときに一度だけ実行されます。
----------------------------------------
[SQEventHandler::SceneMainDispose]
<nodeType>SQEventHandler/SQFunc
<summary>メインシーン破棄
<return:void>
<comment>シーンが破棄されるときに一度だけ実行されます。
----------------------------------------
[SQEventHandler::SceneSubDraw]
<nodeType>SQEventHandler/SQFunc
<summary>サブシーン描画
<return:void>
<comment>メインシーンを維持している場合は、メインシーンの画面を上書きする形で描画します。
----------------------------------------
[SQEventHandler::SceneSubInput]
<nodeType>SQEventHandler/SQFunc
<summary>サブシーン入力
<return:void>
<comment>このメソッドが呼び出されるときは、メインシーンの入力処理は停止しています。
----------------------------------------
[SQEventHandler::SceneSubSetup]
<nodeType>SQEventHandler/SQFunc
<summary>サブシーン初期化
<return:void>
<comment>シーンが始まるときに一度だけ実行されます。
----------------------------------------
[SQEventHandler::SceneSubDispose]
<nodeType>SQEventHandler/SQFunc
<summary>サブシーン破棄
<return:void>
<comment>シーンが破棄されるときに一度だけ実行されます。
----------------------------------------
