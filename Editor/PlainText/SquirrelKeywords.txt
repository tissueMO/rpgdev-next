_add;();メタメソッド;;演算子 + に相当します。
_call;();メタメソッド;;テーブル、ユーザデータ、クラスインスタンスが呼び出されたときに呼び出されます。
_cmp;();メタメソッド;;比較演算子 <, >, <=, >= に相当します。
_delslot;();メタメソッド;;テーブルからスロットを削除するときに呼び出されます。
_div;();メタメソッド;;演算子 / に相当します。
_dloned;();メタメソッド;;テーブル、ユーザデータ、クラスインスタンスが複製されたときに、複製先から呼び出されます。
_get;(INDEX);メタメソッド;;インデックスが存在しないときに呼び出されます。
_inherited;();メタメソッド;;クラスオブジェクトを継承するときに呼び出されます。
_modulo;();メタメソッド;;演算子 % に相当します。
_mul;();メタメソッド;;演算子 * に相当します。
_newmember;();メタメソッド;;クラス本体で宣言される各メンバーに対して宣言時に呼び出されます。
_newslot;();メタメソッド;;テーブルに新規スロットを追加するときに呼び出されます。
_nexti;();メタメソッド;;テーブル、ユーザデータ、クラスインスタンスがforeachループによって反復されたときに呼び出されます。
_set;(INDEX, VALUE);メタメソッド;;インデックスが存在しないときに呼び出されます。
_sub;();メタメソッド;;演算子 - に相当します。
_tostring;();メタメソッド;;オブジェクトを文字列に変換する必要があるときに呼び出されます。
_typeof;();メタメソッド;;演算子 typeof に相当します。
_unm;();メタメソッド;;単項演算子 - に相当します。
abs;(x);ライブラリ/数学;絶対値/整数;整数型として絶対値を取得します。
acos;(x);ライブラリ/数学;三角関数/arccos;アークコサイン値を取得します。
append;(VALUE);配列;末尾に追加;配列の末尾に要素を追加するためのデフォルト委譲メソッドです。
array;(SIZE, [FILL]);配列;作成;指定したサイズの配列を作成します。
asin;(x);ライブラリ/数学;三角関数/arcsin;アークサイン値を取得します。
assert;();スクリプト制御;式判定による例外送出;指定した式が満たされない場合に例外を発生させます。
atan;(x);ライブラリ/数学;三角関数/arctan;アークタンジェント値を取得します。
atan2;(x, y);ライブラリ/数学;三角関数/arctan/2値;X, Y座標からアークタンジェントを取得します。
break;;t;スクリプト制御;ブロック脱出;場合分けや繰り返しから脱出します。
call;();スレッド;開始;引数を渡してスレッドを開始させます。
capture;(STR, [START]);ライブラリ/文字列;正規表現/キャプチャー;regexpで生成されるオブジェクトのメンバーメソッドです。与えられた文字列をこのオブジェクトで定義されたパターンに従って検索し、ヒットしたすべての部分文字列を取得します。結果はbegin/endをスロットとして持つテーブルの配列が返されます。
case; N:;スクリプト制御;場合分け-該当値;場合分けの該当値を設定します。
catch; (e) {};スクリプト制御;例外捕捉処理;例外発生時に実行されるブロックを定義します。
ceil;(x);ライブラリ/数学;概数/切り上げ;小数点以下を切り上げます。
class; {};t;クラス;クラス定義;クラスを定義します。メンバーはすべてpublicなものとして定義されます。
clone;汎用;オブジェクト複製;このキーワードの後に続くテーブル、配列、インスタンスを複製（シャローコピー）します。
collectgarbage;();マイナー;GC呼び出し;ガベージコレクターを明示的に呼び出します。通常使う必要はありません。
compilestring;();マイナー;文字列コンパイル;引数に指定した文字列をコンパイルして関数オブジェクトを作成します。
const;汎用;定数定義;定数を定義します。再定義も可能です。
constructor;();クラス;コンストラクター;コンストラクターを定義します。
continue;;t;スクリプト制御;ブロック再評価;場合分けや繰り返しの先頭に戻って式を再評価します。
cos;(x);ライブラリ/数学;三角関数/cos;コサイン値を取得します。
default;:;スクリプト制御;場合分け-該当なし;場合分けでどれにも該当しないことを示します。
delegate; DEST : SRC;マイナー;委譲を持たせる;テーブルやユーザーデータに委譲を持たせます。
delete;テーブル;スロット削除;このキーワードに続くテーブルの値（スロット）を削除します。
do; {} while();t;スクリプト制御;繰り返し-先行型;先に一度実行し、式を満たす場合に繰り返します。
else; {};スクリプト制御;条件分岐-それ以外;条件分岐でどれにも当てはまらなかった場合に実行されます。
enum; NAME {};t;汎用;列挙体定義;列挙体を定義します。
exp;(x);ライブラリ/数学;自然指数関数;ネイピア数を底とした指数関数値を取得します。
extend;(ARRAY);配列;末尾に配列を追加;引数で指定した配列を現在の配列の末尾に追加するためのデフォルト委譲メソッドです。
extends;クラス;派生;派生元となるスーパークラスを示します。
fabs;(x);ライブラリ/数学;絶対値/実数;実数型として絶対値を取得します。
false;予約定義値;OFF;論理値の「偽」を示します。
find;(STR, [START]);文字列;指定文字列を検索;START位置から文字列STRを検索し、最初にマッチした位置のインデックスを返します。見つからなかった場合はnullが返されます。
floor;(x);ライブラリ/数学;概数/切り下げ;小数点以下を切り捨てます。
for;(local ) {};スクリプト制御;繰り返し-for;初期化式・継続判定・再初期化式を用いて繰り返します。
foreach;(item in ARRAY) {};スクリプト制御;繰り返し-foreach;配列の要素数だけ繰り返します。
format;(FORMAT, ...);ライブラリ/文字列;書式文字列作成;書式に従った文字列を作成します。第1引数に書式文字列を、以降の引数に任意数の値を指定します。
function;() {};関数;関数定義;関数を定義します。
getclass;();インスタンス;クラス型取得;クラスインスタンスのクラス型を取得するためのデフォルト委譲メソッドです。
getconsttable;();マイナー;定数テーブル取得;スクリプトの定数が格納されたテーブルを取得します。
getroottable;();マイナー;ルートテーブル取得;スクリプトのグローバルスコープに相当するテーブルを取得します。
getstatus;();スレッド;動作状況取得;スレッドの動作状況を取得するためのデフォルト委譲メソッドです。
if;() {};スクリプト制御;条件分岐;式を満たす場合に実行されます。
in;汎用;コンテナー要素検証;foreach文において、配列の要素を取り出すために使うキーワードです。または別な使い方として、テーブルや配列に指定した要素が含まれるかどうかを調べるのにも使います。
insert;(INDEX, VALUE);配列;要素を挿入;配列の指定したインデックスに要素を挿入するためのデフォルト委譲メソッドです。
instance;();クラス;インスタンス生成;コンストラクターを呼び出さずにクラスインスタンスを生成するためのデフォルト委譲メソッドです。
instanceof;クラス;クラス型比較;インスタンスが指定したクラス型と一致するかどうかを調べる演算子です。
len;();汎用デフォルト委譲メソッド;文字列/配列の長さ取得;配列や文字列の長さを取得するためのデフォルト委譲メソッドです。文字列はバイト数で返されます。
local;汎用;ローカル変数定義;スコープ内でのみ有効な変数を定義します。
log;(x);ライブラリ/数学;対数/自然;自然対数を取得します。
log10;(x);ライブラリ/数学;対数/常用;常用対数を取得します。
lstrip;(STR);ライブラリ/文字列;空白文字列除去/先頭;先頭の空白文字列を除去します。
match;(STR);ライブラリ/文字列;正規表現/判定;regexpで生成されるオブジェクトのメンバーメソッドです。与えられた文字列をこのオブジェクトで定義されたパターンに従って検索し、ヒットしたかどうかを返します。
newthread;(FUNC);スレッド;新規作成;新しいスレッドオブジェクトを生成します。引数には関数名を指定します。
null;予約定義値;空オブジェクト;空のオブジェクトを指します。
PI;;ライブラリ/数学;円周率;円周率の近似値 (3.131592) です。
pop;();配列;末尾削除;配列の末尾を削除します。戻り値として削除した要素の値が返されます。
pow;(x, y);ライブラリ/数学;累乗;XのY乗を取得します。
print;("");汎用;出力;ログに文字列を出力します。
ref;マイナー;弱参照が指すオブジェクトを取得;弱参照が指しているオブジェクトを取得します。もしそのオブジェクトが削除されている場合はnullが返されます。
regexp;(PATTERN);ライブラリ/文字列;正規表現/オブジェクト生成;与えられた正規表現のパターンに基づくオブジェクト (Regexpクラス) を生成します。
remove;(INDEX);配列;要素を削除;配列の指定したインデックスの要素を削除するためのデフォルト委譲メソッドです。戻り値として削除した要素の値が返されます。
resize;(SIZE, [FILL]);配列;サイズを変更;配列のサイズを変更するためのデフォルト委譲メソッドです。
resume;ジェネレーター;再開;指定したジェネレーターを再開させます。
return;関数;戻り値をセット;戻り値を返して関数を終了します。
reverse;();配列;逆順にする;配列を逆順にするためのデフォルト委譲メソッドです。
rstrip;(STR);ライブラリ/文字列;空白文字列除去/末尾;末尾の空白文字列を除去します。
search;(STR, [START]);ライブラリ/文字列;正規表現/検索;regexpで生成されるオブジェクトのメンバーメソッドです。与えられた文字列をこのオブジェクトで定義されたパターンに従って検索します。結果はbegin/endをスロットとして持つテーブルとして返されます。
sin;(x);ライブラリ/数学;三角関数/sin;サイン値を取得します。
slice;(START, [END]);汎用デフォルト委譲メソッド;部分文字列/配列を取得;文字列や配列の指定した範囲の要素を返すためのデフォルト委譲メソッドです。STARTをマイナスにすると、末尾から数えます。
sort;();配列;ソート;配列を並び替えます。引数を与えない場合は昇順ソートになります。
split;(STR, SEPARATORS);ライブラリ/文字列;文字列分割;与えられた文字列を区切り文字に従って分割した配列を返します。区切り文字を複数個にすることでいずれかの文字を区切り記号とみなします。
sqrt;(x);ライブラリ/数学;平方根;平方根を取得します。
static;クラス;静的メンバー;静的なメンバーを定義します。このメンバーの値は一度定義されると書き換えることができなくなります。
strip;(STR);ライブラリ/文字列;空白文字列除去/前後;先頭と末尾の空白文字列を除去します。
suspend;();スレッド;中断;スレッドを中断し、途中の戻り値を返します。
switch;() {};スクリプト制御;場合分け;値を評価し、場合分けを行います。
tan;(x);ライブラリ/数学;三角関数/tan;タンジェント値を取得します。
this;クラス;自身参照;自分自身のクラスを参照します。
throw;スクリプト制御;例外送出;例外を発生させます。
tochar;();汎用デフォルト委譲メソッド;整数で表現される文字列に変換;整数によって表現された文字を含む文字列を返すためのデフォルト委譲メソッドです。
tofloat;();汎用デフォルト委譲メソッド;小数値に変換;値を小数値に変換するためのデフォルト委譲メソッドです。
tointeger;();汎用デフォルト委譲メソッド;整数値に変換;値を整数値に変換するためのデフォルト委譲メソッドです。
tolower;();文字列;小文字に変換;文字列を小文字に変換するためのデフォルト委譲メソッドです。
top;();配列;末尾を取得;配列の末尾の要素を取得するためのデフォルト委譲メソッドです。
tostring;();汎用デフォルト委譲メソッド;文字列に変換;値を文字列に変換するためのデフォルト委譲メソッドです。
toupper;();文字列;大文字に変換;文字列を大文字に変換するためのデフォルト委譲メソッドです。
true;予約定義値;ON;論理値の「真」を示します。
try; {};スクリプト制御;例外捕捉構文;例外を捕捉するための構文です。このブロックの中で発生した例外をcatch構文で処理します。
type;();汎用;オブジェクト型を調べる;オブジェクトの「生」の型を返します。
typeof;演算子;オブジェクト型を調べる;オブジェクトの型を調べます。
vargc;関数;可変長引数の個数;可変長引数を受ける関数で、その個数を示します。
vargv;関数;可変長引数の内容;可変長引数を受ける関数で、その内容を取り出すのに使います。添え字でアクセスできますが、疑似配列のためデフォルト委譲メソッドは使えません。
wakeup;();スレッド;再開;中断していたスレッドを再開させます。
weakref;();マイナー;自身への弱参照;オブジェクトへの弱参照を返すためのデフォルト委譲メソッドです。
while;() {};スクリプト制御;繰り返し-条件付き;条件を満たす間繰り返します。
yield;ジェネレーター;中断;ジェネレーターを中断し、戻り値を返します。