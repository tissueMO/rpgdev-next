// JavaScript Document
// 「組み込みオブジェクト」ツリーに対応するドキュメントを出力します。
function GenerateAutoDocument(strClassPath) {
	var div = document.getElementById("mainContainer");
	div.innerHTML = "<div id =\"breadcrumb\"><a href=\"index.html\">HOME</a> &gt; 組み込みオブジェクト</div>";
	div.innerHTML += generator(strClassPath);
}

function generator(strClassPath) {
	switch(strClassPath) {
		case "CNullCheck": return "<h2>Null検証クラス</h2><div class=\"text\">オブジェクトがnullであるかどうかを検証するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CNullCheck</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CNullCheck:IsNull": return "<h2>Null検証</h2><div class=\"text\">自身のオブジェクトがNullであるかどうかを調べます。<hr><h3>定義位置</h3><div class=\"text\">CNullCheck::IsNull</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: このオブジェクトがNullである場合はTrueが返されます。<br></div></div>";
		case "CIDNameData": return "<h2>IDと名前のデータクラス</h2><div class=\"text\">IDと名前をセットにしたデータです。<hr><h3>定義位置</h3><div class=\"text\">CIDNameData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CIDNameData:ID": return "<h2>ID</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CIDNameData::ID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CIDNameData:Name": return "<h2>名前</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CIDNameData::Name</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CIDValueData": return "<h2>IDと値のデータクラス</h2><div class=\"text\">IDと値、名前をセットにしたクラスです。<hr><h3>定義位置</h3><div class=\"text\">CIDValueData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CIDValueData:Value": return "<h2>値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CIDValueData::Value</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSoundData": return "<h2>サウンドデータ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSoundData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSoundData:Handle": return "<h2>ハンドル</h2><div class=\"text\">素材クラスを経由して再生するのに必要となる識別番号です。<hr><h3>定義位置</h3><div class=\"text\">CSoundData::Handle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSoundData:Load": return "<h2>読込</h2><div class=\"text\">このサウンドオブジェクトに指定したサウンドを読み込みます。<br>このメソッドのみ一般サウンドの音程が設定できます。<hr><h3>定義位置</h3><div class=\"text\">CSoundData::Load</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li><li>第2引数 [int vol]: 音量（0～255）</li><li>第3引数 [int pit]: 音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上</li><li>第4引数 [int pan]: 左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSoundData:Play": return "<h2>再生</h2><div class=\"text\">このサウンドを非同期的に再生します。<hr><h3>定義位置</h3><div class=\"text\">CSoundData::Play</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int playType]: 再生方法</li><li>第2引数 [bool oncePlay]: 一度きりの再生かどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSoundData:Stop": return "<h2>停止</h2><div class=\"text\">このサウンドを停止します。<hr><h3>定義位置</h3><div class=\"text\">CSoundData::Stop</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSoundData:Pause": return "<h2>一時停止</h2><div class=\"text\">このサウンドを一時停止します。<hr><h3>定義位置</h3><div class=\"text\">CSoundData::Pause</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSoundData:Resume": return "<h2>再開</h2><div class=\"text\">このサウンドを一時停止から再開させます。<hr><h3>定義位置</h3><div class=\"text\">CSoundData::Resume</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool loopMode]: ループ再生するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSoundData:Dispose": return "<h2>破棄</h2><div class=\"text\">このサウンドを破棄してメモリの空き容量を確保します。<hr><h3>定義位置</h3><div class=\"text\">CSoundData::Dispose</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CPoint": return "<h2>座標クラス</h2><div class=\"text\">二次元座標を示すクラスです。<hr><h3>定義位置</h3><div class=\"text\">CPoint</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CPoint:X": return "<h2>X座標</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CPoint::X</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CPoint:Y": return "<h2>Y座標</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CPoint::Y</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CPoint:Set": return "<h2>設定</h2><div class=\"text\">二次元座標を一括設定します。<hr><h3>定義位置</h3><div class=\"text\">CPoint::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: X座標</li><li>第2引数 [int y]: Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CPoint:IsEmpty": return "<h2>原点検証</h2><div class=\"text\">原点 (0, 0) にあるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CPoint::IsEmpty</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: この座標が原点である場合はTrueが返されます。<br></div></div>";
		case "CSize": return "<h2>サイズクラス</h2><div class=\"text\">二次元サイズを示すクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSize</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CSize:Width": return "<h2>幅</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSize::Width</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSize:Height": return "<h2>高さ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSize::Height</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSize:Set": return "<h2>設定</h2><div class=\"text\">二次元サイズを一括設定します。<hr><h3>定義位置</h3><div class=\"text\">CSize::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int width]: 幅</li><li>第2引数 [int height]: 高さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSize:IsEmpty": return "<h2>ゼロサイズ検証</h2><div class=\"text\">このサイズが 0x0 であるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CSize::IsEmpty</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: サイズがゼロである場合はTrueが返されます。<br></div></div>";
		case "CRectangle": return "<h2>矩形クラス</h2><div class=\"text\">二次元空間上にある四角形を示すクラスです。<hr><h3>定義位置</h3><div class=\"text\">CRectangle</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CRectangle:Left": return "<h2>左端</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::Left</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CRectangle:Top": return "<h2>上端</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::Top</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CRectangle:Width": return "<h2>幅</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::Width</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CRectangle:Height": return "<h2>高さ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::Height</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CRectangle:Set": return "<h2>左上座標でセット</h2><div class=\"text\">左上座標とサイズを指定して矩形を一括設定します。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int left]: 左端</li><li>第2引数 [int top]: 上端</li><li>第3引数 [int width]: 幅</li><li>第4引数 [int height]: 高さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CRectangle:SetByCorner": return "<h2>四隅でセット</h2><div class=\"text\">矩形の四隅座標を指定して矩形を一括設定します。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::SetByCorner</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int left]: 左端</li><li>第2引数 [int top]: 上端</li><li>第3引数 [int right]: 右端</li><li>第4引数 [int bottom]: 下端</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CRectangle:Right": return "<h2>右端</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::Right</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 右端座標が返されます。<br></div></div>";
		case "CRectangle:Bottom": return "<h2>下端</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::Bottom</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 下端座標が返されます。<br></div></div>";
		case "CRectangle:PointContains": return "<h2>点包含検証</h2><div class=\"text\">指定した点座標が、この矩形内にあるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CRectangle::PointContains</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 指定点のX座標</li><li>第2引数 [int y]: 指定点のY座標</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 指定した点がこの矩形内にある場合はTrue</div></div>";
		case "CCircle": return "<h2>円クラス</h2><div class=\"text\">二次元空間上にある円を示すクラスです。<hr><h3>定義位置</h3><div class=\"text\">CCircle</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CCircle:Radius": return "<h2>半径</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CCircle::Radius</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CCircle:CenterX": return "<h2>中心X座標</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CCircle::CenterX</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CCircle:CenterY": return "<h2>中心Y座標</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CCircle::CenterY</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CCircle:Set": return "<h2>設定</h2><div class=\"text\">中心と半径から一括設定します。<hr><h3>定義位置</h3><div class=\"text\">CCircle::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 中心X座標</li><li>第2引数 [int y]: 中心Y座標</li><li>第3引数 [int r]: 半径</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CCircle:FromRectangle": return "<h2>矩形から設定</h2><div class=\"text\">与えられた矩形を基に短辺に接する円として一括設定します。<hr><h3>定義位置</h3><div class=\"text\">CCircle::FromRectangle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [const CRectangle& rect]: 矩形オブジェクト</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CCircle:ToRectangle": return "<h2>矩形に変換</h2><div class=\"text\">この円に外接する四角形を取得します。<hr><h3>定義位置</h3><div class=\"text\">CCircle::ToRectangle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">CRectangle: 変換後の矩形オブジェクト</div></div>";
		case "CCircle:PointContains": return "<h2>点包含検証</h2><div class=\"text\">指定した点座標が、この円の中にあるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CCircle::PointContains</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 指定点X座標</li><li>第2引数 [int y]: 指定点Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 指定した点がこの円の中にある場合はTrue</div></div>";
		case "CCircle:CircleContains": return "<h2>円接触検証</h2><div class=\"text\">指定した円が、この円に接触しているかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CCircle::CircleContains</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [CCircle& c]: 対象とする円</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 指定した円がこの円に接触している場合はTrue</div></div>";
		case "CRGBColor": return "<h2>RGBカラークラス</h2><div class=\"text\">色を示すクラスです。<hr><h3>定義位置</h3><div class=\"text\">CRGBColor</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CRGBColor:Red": return "<h2>赤情報</h2><div class=\"text\">0～255までの値をとります。<hr><h3>定義位置</h3><div class=\"text\">CRGBColor::Red</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CRGBColor:Green": return "<h2>緑情報</h2><div class=\"text\">0～255までの値をとります。<hr><h3>定義位置</h3><div class=\"text\">CRGBColor::Green</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CRGBColor:Blue": return "<h2>青情報</h2><div class=\"text\">0～255までの値をとります。<hr><h3>定義位置</h3><div class=\"text\">CRGBColor::Blue</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CRGBColor:Set": return "<h2>一括設定</h2><div class=\"text\">３原色から色を設定します。<hr><h3>定義位置</h3><div class=\"text\">CRGBColor::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int r]: 赤</li><li>第2引数 [int g]: 緑</li><li>第3引数 [int b]: 青</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CRGBColor:ToCode": return "<h2>カラーコードへ変換</h2><div class=\"text\">フォント色や描画色としてセットできるカラーコードに変換します。<hr><h3>定義位置</h3><div class=\"text\">CRGBColor::ToCode</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: カラーコード</div></div>";
		case "CIntegerArray": return "<h2>配列クラス/整数型</h2><div class=\"text\">整数型に限定された配列です。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CIntegerArray:Add": return "<h2>追加</h2><div class=\"text\">要素を追加します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CIntegerArray:Exists": return "<h2>値検証</h2><div class=\"text\">指定した値がこの配列の中にあるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Exists</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 指定した値を含む場合はTrue</div></div>";
		case "CIntegerArray:Count": return "<h2>総数取得</h2><div class=\"text\">この配列の要素数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Count</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: この配列の要素数</div></div>";
		case "CIntegerArray:Get": return "<h2>要素取得</h2><div class=\"text\">指定したインデックスの要素の値を取得します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 値</div></div>";
		case "CIntegerArray:Set": return "<h2>要素設定</h2><div class=\"text\">指定したインデックスの要素の値を設定します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li><li>第2引数 [int value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CIntegerArray:Insert": return "<h2>挿入</h2><div class=\"text\">指定したインデックスに要素を挿入します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Insert</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li><li>第2引数 [int value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CIntegerArray:Delete": return "<h2>削除</h2><div class=\"text\">指定したインデックスの要素を削除します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CIntegerArray:Clear": return "<h2>初期化</h2><div class=\"text\">全要素を削除します。<hr><h3>定義位置</h3><div class=\"text\">CIntegerArray::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CStringArray": return "<h2>配列クラス/文字列型</h2><div class=\"text\">文字列に限定された配列です。<hr><h3>定義位置</h3><div class=\"text\">CStringArray</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CStringArray:Add": return "<h2>追加</h2><div class=\"text\">要素を追加します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CStringArray:Exists": return "<h2>値検証</h2><div class=\"text\">指定した値がこの配列の中にあるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Exists</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 指定した値を含む場合はTrue</div></div>";
		case "CStringArray:Count": return "<h2>総数取得</h2><div class=\"text\">この配列の要素数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Count</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: この配列の要素数</div></div>";
		case "CStringArray:Get": return "<h2>要素取得</h2><div class=\"text\">指定したインデックスの要素の値を取得します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 値</div></div>";
		case "CStringArray:Set": return "<h2>要素設定</h2><div class=\"text\">指定したインデックスの要素の値を設定します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li><li>第2引数 [string value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CStringArray:Insert": return "<h2>挿入</h2><div class=\"text\">指定したインデックスに要素を挿入します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Insert</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li><li>第2引数 [string value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CStringArray:Delete": return "<h2>削除</h2><div class=\"text\">指定したインデックスの要素を削除します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CStringArray:Clear": return "<h2>初期化</h2><div class=\"text\">全要素を削除します。<hr><h3>定義位置</h3><div class=\"text\">CStringArray::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSelfValueData": return "<h2>個別変数データクラス</h2><div class=\"text\">各種個別変数の情報を格納するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSelfValueData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CSelfValueData:Get": return "<h2>個別変数取得</h2><div class=\"text\">IDを指定して個別変数の値データを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSelfValueData::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">CIDValueData*: 個別変数のデータ</div></div>";
		case "CSelfValueData:Set": return "<h2>個別変数の値を設定</h2><div class=\"text\">IDを指定して個別変数に値を代入します。<hr><h3>定義位置</h3><div class=\"text\">CSelfValueData::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ID</li><li>第2引数 [int val]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:CIPv4Address": return "<h2>IPアドレスクラス</h2><div class=\"text\">IPv4対応のアドレスを格納するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::CIPv4Address</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CDXLibWrapper:CIPv4Address:Set": return "<h2>IPアドレスを設定</h2><div class=\"text\">IPアドレスを設定します。<br>各バイトには 0～255 の値を格納します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::CIPv4Address::Set</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int d1]: １バイト目</li><li>第2引数 [int d2]: ２バイト目</li><li>第3引数 [int d3]: ３バイト目</li><li>第4引数 [int d4]: ４バイト目</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:CIPv4Address:Get": return "<h2>IPアドレスの一部を取得</h2><div class=\"text\">このアドレスの指定した位置の数値を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::CIPv4Address::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int d]: 取得するバイト位置 (0～3)</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 0～255 の値</div></div>";
		case "CDXLibWrapper:CIPv4Address:ToString": return "<h2>IPアドレスの文字列取得</h2><div class=\"text\">このアドレスが示す情報を一般的な表記法で文字列に変換します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::CIPv4Address::ToString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: [x.x.x.x] の形式で表されるIPアドレスの文字列</div></div>";
		case "CDXLibWrapper": return "<h2>DXLibラッパークラス</h2><div class=\"text\">DXライブラリを包含したクラスです。<br>描画や入力を司ります。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CDXLibWrapper:Offset": return "<h2>描画位置オフセット</h2><div class=\"text\">ウィンドウの左上を基点とした、全体の描画位置のオフセットです。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::Offset</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CDXLibWrapper:KeyInputResult": return "<h2>キー入力結果</h2><div class=\"text\">入力系のメソッドにおいて、キー入力の結果が代入されます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::KeyInputResult</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDXLibWrapper:RecvData": return "<h2>通信/取得データ</h2><div class=\"text\">TCP/UDP接続の受信における取得データです。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::RecvData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CDXLibWrapper:UDPRecvIP": return "<h2>UDP/送信元IPアドレス</h2><div class=\"text\">UDP接続の受信における送信元のIPアドレスです。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::UDPRecvIP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CIPv4Address (読み取り専用)</div></div>";
		case "CDXLibWrapper:UDPRecvPortNum": return "<h2>UDP/受信ポート番号</h2><div class=\"text\">UDP接続の受信において使われたポート番号です。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::UDPRecvPortNum</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDXLibWrapper:Flash": return "<h2>画面演出/フラッシュ</h2><div class=\"text\">画面全体にフラッシュ効果をかけます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::Flash</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int color]: 色</li><li>第2引数 [int strength]: 強さ 0～255</li><li>第3引数 [int speed]: 速さ</li><li>第4引数 [int count]: 回数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:ShakeOne": return "<h2>画面演出/単一振動</h2><div class=\"text\">画面全体に減衰する振動効果をかけます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::ShakeOne</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int strength]: 強さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:StartShake": return "<h2>画面演出/持続振動開始</h2><div class=\"text\">画面全体に持続する振動効果をかけます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::StartShake</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int strength]: 強さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:StopShake": return "<h2>画面演出/持続振動停止</h2><div class=\"text\">持続する振動効果を停止します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::StopShake</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawWindow": return "<h2>応用/ウィンドウ描画</h2><div class=\"text\">指定領域にウィンドウを描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawWindow</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: システムグラフィックハンドル</li><li>第2引数 [int intX]: 表示位置X座標</li><li>第3引数 [int intY]: 表示位置Y座標</li><li>第4引数 [int intWidth]: ウィンドウ幅</li><li>第5引数 [int intHeight]: ウィンドウ高さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawCursorPanel": return "<h2>応用/パネル型カーソル描画</h2><div class=\"text\">指定位置にパネル型のカーソルを描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawCursorPanel</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: システムグラフィックハンドル</li><li>第2引数 [int intX]: 表示位置X座標</li><li>第3引数 [int intY]: 表示位置Y座標</li><li>第4引数 [int intWidth]: パネル幅</li><li>第5引数 [int intHeight]: パネル高さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawCursorArrow": return "<h2>応用/矢印型カーソル描画</h2><div class=\"text\">指定位置に指定方向のカーソルを描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawCursorArrow</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: システムグラフィックハンドル</li><li>第2引数 [int intX]: 表示位置X座標</li><li>第3引数 [int intY]: 表示位置Y座標</li><li>第4引数 [int intDir4]: 矢印の向き</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawPixel": return "<h2>図形/点描画</h2><div class=\"text\">指定座標に点を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawPixel</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: X座標</li><li>第2引数 [int y]: Y座標</li><li>第3引数 [int color]: カラーコード</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawLine": return "<h2>図形/線描画</h2><div class=\"text\">指定座標の間に線を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawLine</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int sx]: 始点X座標</li><li>第2引数 [int sy]: 始点Y座標</li><li>第3引数 [int ex]: 終点X座標</li><li>第4引数 [int ey]: 終点Y座標</li><li>第5引数 [int color]: カラーコード</li><li>第6引数 [int thickness = 1]: 太さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawTriangle": return "<h2>図形/三角形描画</h2><div class=\"text\">指定した３つの頂点で三角形を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawTriangle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ax]: 頂点1のX座標</li><li>第2引数 [int ay]: 頂点1のY座標</li><li>第3引数 [int bx]: 頂点2のX座標</li><li>第4引数 [int by]: 頂点2のY座標</li><li>第5引数 [int cx]: 頂点3のX座標</li><li>第6引数 [int cy]: 頂点3のY座標</li><li>第7引数 [int color]: カラーコード</li><li>第8引数 [bool fill = true]: 塗りつぶすかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawBox": return "<h2>図形/4頂点で矩形描画</h2><div class=\"text\">指定した４つの頂点で四角形を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawBox</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int left]: 左端</li><li>第2引数 [int top]: 上端</li><li>第3引数 [int right]: 右端</li><li>第4引数 [int bottom]: 下端</li><li>第5引数 [int color]: カラーコード</li><li>第6引数 [bool fill = true]: 塗りつぶすかどうか</li><li>第7引数 [int thickness = 1]: 太さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawRect": return "<h2>図形/左上基点で矩形描画</h2><div class=\"text\">左上とサイズで四角形を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawRect</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int left]: 左端</li><li>第2引数 [int top]: 上端</li><li>第3引数 [int width]: 幅</li><li>第4引数 [int height]: 高さ</li><li>第5引数 [int color]: カラーコード</li><li>第6引数 [bool fill = true]: 塗りつぶすかどうか</li><li>第7引数 [int thickness = 1]: 太さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawCircle": return "<h2>図形/円描画</h2><div class=\"text\">指定した中心座標と半径で円を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawCircle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 中心X座標</li><li>第2引数 [int y]: 中心Y座標</li><li>第3引数 [int r]: 半径</li><li>第4引数 [int color]: カラーコード</li><li>第5引数 [bool fill = true]: 塗りつぶすかどうか</li><li>第6引数 [int thickness = 1]: 太さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawOval": return "<h2>図形/楕円描画</h2><div class=\"text\">指定した中心座標と半径で楕円を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawOval</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 中心X座標</li><li>第2引数 [int y]: 中心Y座標</li><li>第3引数 [int rx]: X軸方向の半径</li><li>第4引数 [int ry]: Y軸方向の半径</li><li>第5引数 [int color]: カラーコード</li><li>第6引数 [bool fill = true]: 塗りつぶすかどうか</li><li>第7引数 [int thickness = 1]: 太さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawGraph": return "<h2>画像描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li><li>第2引数 [int x]: 描画先の左上X座標</li><li>第3引数 [int y]: 描画先の左上Y座標</li><li>第4引数 [bool trans = true]: 透過するかどうか</li><li>第5引数 [bool turn = false]: 左右反転するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawExtendGraph": return "<h2>画像拡大描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像を拡大描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawExtendGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li><li>第2引数 [int x]: 描画先の左上X座標</li><li>第3引数 [int y]: 描画先の左上Y座標</li><li>第4引数 [double xRate]: X軸方向の拡大率 (1.0=等倍)</li><li>第5引数 [double yRate = 0.0F]: Y軸方向の拡大率 (1.0=等倍)</li><li>第6引数 [bool trans = true]: 透過するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawRotaGraph": return "<h2>画像回転描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像を回転・拡大描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawRotaGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li><li>第2引数 [int cx]: 描画先の中心X座標</li><li>第3引数 [int cy]: 描画先の中心Y座標</li><li>第4引数 [double angle]: 回転率 (弧度法/ラジアン単位)</li><li>第5引数 [double exRate = 1.0F]: 拡大率 (1.0=等倍)</li><li>第6引数 [bool trans = true]: 透過するかどうか</li><li>第7引数 [bool turn = false]: 左右反転するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawRectGraph": return "<h2>画像の一部を描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像の一部を描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawRectGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li><li>第2引数 [int sx]: 描画先の左上X座標</li><li>第3引数 [int sy]: 描画先の左上Y座標</li><li>第4引数 [int gx]: 画像上の左上X座標</li><li>第5引数 [int gy]: 画像上の左上Y座標</li><li>第6引数 [int width]: 抜き取る幅</li><li>第7引数 [int height]: 抜き取る高さ</li><li>第8引数 [bool trans = true]: 透過するかどうか</li><li>第9引数 [bool turn = false]: 左右反転するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawRectExtendGraph": return "<h2>画像の一部を拡大描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像の一部を拡大描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawRectExtendGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li><li>第2引数 [int left]: 描画先の左上X座標</li><li>第3引数 [int top]: 描画先の左上Y座標</li><li>第4引数 [int width]: 描画先での幅</li><li>第5引数 [int height]: 描画先での高さ</li><li>第6引数 [int gx]: 画像上の左上X座標</li><li>第7引数 [int gy]: 画像上の左上Y座標</li><li>第8引数 [int rawWidth]: 画像上の抜き取る幅</li><li>第9引数 [int rawHeight]: 画像上の抜き取る高さ</li><li>第10引数 [bool trans = true]: 透過するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawRectRotaGraph": return "<h2>画像の一部を回転描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像の一部を回転・拡大描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawRectRotaGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li><li>第2引数 [int cx]: 中心X座標</li><li>第3引数 [int cy]: 中心Y座標</li><li>第4引数 [int gx]: 画像上の左上X座標</li><li>第5引数 [int gy]: 画像上の左上Y座標</li><li>第6引数 [int rawWidth]: 画像上の抜き取る幅</li><li>第7引数 [int rawHeight]: 画像上の抜き取る高さ</li><li>第8引数 [double angle]: 回転率 (弧度法/ラジアン単位)</li><li>第9引数 [double exRate = 1.0F]: 拡大率 (1.0=等倍)</li><li>第10引数 [bool trans = true]: 透過するかどうか</li><li>第11引数 [bool turn = false]: 左右反転するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawModifiedGraph": return "<h2>画像自由変形描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像を自由変形描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawModifiedGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li><li>第2引数 [int leftTopX]: 左上X座標</li><li>第3引数 [int leftTopY]: 左上Y座標</li><li>第4引数 [int rightTopX]: 右上X座標</li><li>第5引数 [int rightTopY]: 右上Y座標</li><li>第6引数 [int rightBottomX]: 右下X座標</li><li>第7引数 [int rightBottomY]: 右下Y座標</li><li>第8引数 [int leftBottomX]: 左下X座標</li><li>第9引数 [int leftBottomY]: 左下Y座標</li><li>第10引数 [bool trans = true]: 透過するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawBlendGraph": return "<h2>画像合成描画</h2><div class=\"text\">指定した座標に予め読み込んだ画像と、合成用のパターン画像をブレンドして描画します。<br>これはトランジションと同様の仕組みで、画像を徐々にワイプさせるような描画に用いられます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawBlendGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 左上X座標</li><li>第2引数 [int y]: 左上Y座標</li><li>第3引数 [int Handle]: 画像ハンドル</li><li>第4引数 [bool trans]: 透過するかどうか</li><li>第5引数 [string blendFileName]: 合成用のパターン画像ファイル名</li><li>第6引数 [int borderParam]: 合成度合い（0=完全な画像で描画、255=完全に合成して描画）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawString": return "<h2>文字列描画/左</h2><div class=\"text\">指定した座標に文字列を左揃えで描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 左上X座標</li><li>第2引数 [int y]: 左上Y座標</li><li>第3引数 [int fontID]: フォントID</li><li>第4引数 [int color]: カラーコード</li><li>第5引数 [const TCHAR* text]: 文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawStringC": return "<h2>文字列描画/中央</h2><div class=\"text\">指定した座標に文字列を中央揃えで描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawStringC</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int centerX]: 中心X座標</li><li>第2引数 [int y]: Y座標</li><li>第3引数 [int fontID]: フォントID</li><li>第4引数 [int color]: カラーコード</li><li>第5引数 [const TCHAR* text]: 文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawStringR": return "<h2>文字列描画/右</h2><div class=\"text\">指定した座標に文字列を右揃えで描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawStringR</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int right]: 右上X座標</li><li>第2引数 [int y]: 右上Y座標</li><li>第3引数 [int fontID]: フォントID</li><li>第4引数 [int color]: カラーコード</li><li>第5引数 [const TCHAR* text]: 文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:DrawStringAlign": return "<h2>文字列描画/指定揃え</h2><div class=\"text\">指定した座標に文字列を指定した位置に揃えて描画します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DrawStringAlign</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: X座標</li><li>第2引数 [int y]: Y座標</li><li>第3引数 [int align]: 文字列を揃える位置</li><li>第4引数 [int fontID]: フォントID</li><li>第5引数 [int color]: カラーコード</li><li>第6引数 [const TCHAR* text]: 文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:GetGraphSize": return "<h2>画像サイズ取得</h2><div class=\"text\">指定した画像の大きさを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetGraphSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 画像ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">CSize: 画像のサイズ</div></div>";
		case "CDXLibWrapper:SetDrawBlendMode": return "<h2>画像合成方法設定</h2><div class=\"text\">画像の合成方法を設定します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SetDrawBlendMode</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int mode]: 列挙体：画像合成方法 (-1で通常描画に戻す)</li><li>第2引数 [int param]: 設定値 (0～255)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:RestoreDrawBlendMode": return "<h2>画像合成方法復元</h2><div class=\"text\">画像の合成方法を前の設定に戻します。<br>一つ前の情報を用いて再設定されるため、二回続けて実行すると元に戻ります。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::RestoreDrawBlendMode</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:SetDrawBright": return "<h2>描画輝度設定</h2><div class=\"text\">描画輝度を一時的に変更します。<br>すべてを255にすると通常通りの描画になります。<br>次のフレームではシーンの標準輝度に戻されます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SetDrawBright</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int r]: 赤 (0～255)</li><li>第2引数 [int g]: 緑 (0～255)</li><li>第3引数 [int b]: 青 (0～255)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:ResetDrawArea": return "<h2>描画範囲解除</h2><div class=\"text\">描画の範囲制限を解除します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::ResetDrawArea</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:SetDrawArea": return "<h2>描画範囲設定</h2><div class=\"text\">四隅を指定して描画可能な領域をセットします。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SetDrawArea</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int left]: 左端</li><li>第2引数 [int top]: 上端</li><li>第3引数 [int right]: 右端</li><li>第4引数 [int bottom]: 下端</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:GetDrawStringSize": return "<h2>文字列描画/サイズ検証</h2><div class=\"text\">指定した文字列を描画したときのサイズを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetDrawStringSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int fontID]: フォントID</li><li>第2引数 [const TCHAR* text]: 文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">CSize: 描画サイズ</div></div>";
		case "CDXLibWrapper:GetColor": return "<h2>カラーコード取得</h2><div class=\"text\">３色の強さを指定してカラーコードを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetColor</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int r]: 赤 (0～255)</li><li>第2引数 [int g]: 緑 (0～255)</li><li>第3引数 [int b]: 青 (0～255)</li></ul></div><h3>戻り値</h3><div class=\"text\">int: カラーコード</div></div>";
		case "CDXLibWrapper:PlayVideo": return "<h2>動画再生</h2><div class=\"text\">指定した動画を再生します。<br>コーデックがインストールされていない環境では再生できない場合があります。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::PlayVideo</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li><li>第2引数 [int exRate]: 拡大率 (等倍=100)</li><li>第3引数 [bool canCancel]: キャンセルできるようにするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:PlayMovieToGraph": return "<h2>動画像を再生</h2><div class=\"text\">「素材管理：グラフィック」によって開かれた動画の再生を開始します。<br>再生された動画は画像と同様の描画方法によって画面に反映できます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::PlayMovieToGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 動画像ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:PauseMovieToGraph": return "<h2>動画像を一時停止</h2><div class=\"text\">「素材管理：グラフィック」によって開かれた動画の再生を一停止します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::PauseMovieToGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 動画像ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:SeekMovieToGraph": return "<h2>動画像の再生位置変更</h2><div class=\"text\">「素材管理：グラフィック」によって開かれた動画の再生位置を変更します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SeekMovieToGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 動画像ハンドル</li><li>第2引数 [int timeMS]: 再生位置ミリ秒</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:TellMovieToGraph": return "<h2>動画像の再生位置取得</h2><div class=\"text\">「素材管理：グラフィック」によって開かれた動画の再生位置を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::TellMovieToGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 動画像ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 再生位置ミリ秒</div></div>";
		case "CDXLibWrapper:GetMovieStateToGraph": return "<h2>動画像の再生状態取得</h2><div class=\"text\">「素材管理：グラフィック」によって開かれた動画の再生状態を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetMovieStateToGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int Handle]: 動画像ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 停止している場合は０、再生されている場合は１</div></div>";
		case "CDXLibWrapper:GetJoypadNum": return "<h2>ジョイパッド/総数取得</h2><div class=\"text\">現在接続されているジョイパッドの数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetJoypadNum</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 接続されているジョイパッドの総数</div></div>";
		case "CDXLibWrapper:GetJoypadInputState": return "<h2>ジョイパッド/入力状態取得</h2><div class=\"text\">指定したプレイヤーのジョイパッドの入力状態を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetJoypadInputState</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int playerNum]: プレイヤー番号 (1～)</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 入力ボタン情報 (AND演算で判定)</div></div>";
		case "CDXLibWrapper:GetJoypadAnalogInput": return "<h2>ジョイパッド/アナログ入力状態取得</h2><div class=\"text\">指定したプレイヤーのジョイパッドのアナログ的な入力機構の状態を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetJoypadAnalogInput</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int playerNum]: プレイヤー番号 (1～)</li></ul></div><h3>戻り値</h3><div class=\"text\">CPoint: アナログ入力情報</div></div>";
		case "CDXLibWrapper:StartJoypadVibration": return "<h2>ジョイパッド/振動開始</h2><div class=\"text\">指定したプレイヤーのジョイパッドの振動を開始します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::StartJoypadVibration</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int playerNum]: プレイヤー番号 (1～)</li><li>第2引数 [int power]: 強さ</li><li>第3引数 [int time]: 時間</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:StopJoypadVibration": return "<h2>ジョイパッド/振動停止</h2><div class=\"text\">指定したプレイヤーのジョイパッドの振動を停止します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::StopJoypadVibration</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int playerNum]: プレイヤー番号 (1～)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:SetMouseDispFlag": return "<h2>マウス/カーソル表示切替</h2><div class=\"text\">マウスカーソルを表示するかどうかを設定します。<br>これはあくまでもウィンドウ内でのみ有効です。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SetMouseDispFlag</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool flag]: マウスカーソルを表示するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:GetMousePoint": return "<h2>マウス/カーソル位置取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetMousePoint</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">CPoint: マウスカーソル位置情報</div></div>";
		case "CDXLibWrapper:SetMousePoint": return "<h2>マウス/カーソル位置設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SetMousePoint</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: X座標</li><li>第2引数 [int y]: Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:GetMouseInput": return "<h2>マウス/ボタン入力状態取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetMouseInput</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: マウスボタン入力状態 (AND演算で判定)</div></div>";
		case "CDXLibWrapper:GetMouseWheelRotVol": return "<h2>マウス/ホイール量取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetMouseWheelRotVol</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: マウスホイール量 (＋－で上下を示す)</div></div>";
		case "CDXLibWrapper:KeyInputString": return "<h2>入力/文字列入力受付</h2><div class=\"text\">画面上に入力窓を生成し、文字列のユーザー入力を受け付けます。<br>操作の結果は[キー入力結果]に代入されます。<br>1=正常終了, 2=キャンセル, -1=エラー。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::KeyInputString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 表示X座標</li><li>第2引数 [int y]: 表示Y座標</li><li>第3引数 [int maxCharLength]: 最大バイト数 (全角文字を２バイトと数える)</li><li>第4引数 [bool allowCancel]: ESCキーでキャンセルできるようにするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 入力された文字列</div></div>";
		case "CDXLibWrapper:KeyInputSingleCharString": return "<h2>入力/半角文字列入力受付</h2><div class=\"text\">画面上に入力窓を生成し、半角文字列のユーザー入力を受け付けます。<br>操作の結果は[キー入力結果]に代入されます。<br>1=正常終了, 2=キャンセル, -1=エラー。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::KeyInputSingleCharString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 表示X座標</li><li>第2引数 [int y]: 表示Y座標</li><li>第3引数 [int maxCharLength]: 最大バイト数</li><li>第4引数 [bool allowCancel]: ESCキーでキャンセルできるようにするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 入力された文字列</div></div>";
		case "CDXLibWrapper:KeyInputNumber": return "<h2>入力/数値入力受付</h2><div class=\"text\">画面上に入力窓を生成し、数値のユーザー入力を受け付けます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::KeyInputNumber</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: 表示X座標</li><li>第2引数 [int y]: 表示Y座標</li><li>第3引数 [int min]: 最小値</li><li>第4引数 [int max]: 最大値</li><li>第5引数 [bool allowCancel]: ESCキーでキャンセルできるようにするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 入力された数値。<br>キャンセルされたときは最大値＋１、エラーが発生したときは最小値－１の値が返されます。<br></div></div>";
		case "CDXLibWrapper:SetKeyInputStringColor": return "<h2>入力/ユーザー入力周りの色設定</h2><div class=\"text\">この関数は引数が多いため便宜的に引数を文字列（区切り記号は ;）として取ります。<br>1. 入力文字列の色。<br>2. IME非使用時のカーソル色。<br>3. IME使用時の入力文字列の周りの色。<br>4. IME使用時のカーソル色。<br>5. IME使用時の変換文字列の下線色。<br>6. IME使用時の選択対象の変換候補文字列の色。<br>7. IME使用時の入力モード表示の色。<br>8. 入力文字列の縁色。<br>9. IME使用時の選択対象の変換候補文字列の縁色。<br>10. IME使用時の入力モード表示の縁色。<br>11. IME使用時の変換候補ウィンドウの縁色。<br>12. IME使用時の変換候補ウィンドウの背景色。<br>13. 入力文字列の選択部分の周りの色。<br>14. 入力文字列の選択部分の色。<br>15. 入力文字列の選択部分の縁色。<br>16. IME使用時の入力文字列の色。<br>17. IME使用時の入力文字列の縁色。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SetKeyInputStringColor</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [const TCHAR* param]: パラメーター</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:GetNowCount": return "<h2>ミリ秒時刻取得</h2><div class=\"text\">一般的な時刻とは異なります。<br>通常は差分をとって経過秒数を計算するのに使います。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetNowCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: コンピューターが起動してから経過したミリ秒数</div></div>";
		case "CDXLibWrapper:SaveDrawScreenToPNG": return "<h2>スクリーンショット撮影</h2><div class=\"text\">現在の画面をPNG形式で出力します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::SaveDrawScreenToPNG</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int leftTopX]: 対象領域の左上X座標</li><li>第2引数 [int leftTopY]: 対象領域の左上Y座標</li><li>第3引数 [int rightBottomX]: 対象領域の右下X座標</li><li>第4引数 [int rightBottomY]: 対象領域の右下Y座標</li><li>第5引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:CheckHandleAsyncLoad": return "<h2>非同期読込の状態確認</h2><div class=\"text\">指定したハンドルの非同期読み込みが継続しているかどうかを調べます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::CheckHandleAsyncLoad</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: TRUE=非同期読み込みをしている  FALSE=読み込み完了  -1=エラー</div></div>";
		case "CDXLibWrapper:GetASyncLoadNum": return "<h2>非同期読込の処理数取得</h2><div class=\"text\">現在行われている非同期読み込みの処理数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetASyncLoadNum</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 現在非同期読み込みをしている処理の総数</div></div>";
		case "CDXLibWrapper:FileRead_open": return "<h2>ファイル/テキスト読込開始</h2><div class=\"text\">指定したテキストファイルを開きます。<br>リソースを占有するので使い終わったら必ず閉じる必要があります。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::FileRead_open</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">int: ファイルハンドルです。<br>失敗した場合は -1 が返されます。<br></div></div>";
		case "CDXLibWrapper:FileRead_close": return "<h2>ファイル/テキスト読込終了</h2><div class=\"text\">指定したテキストファイルを閉じます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::FileRead_close</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: ファイルハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDXLibWrapper:FileRead_gets": return "<h2>ファイル/テキスト１行読込</h2><div class=\"text\">開いているテキストファイルから次の１行を読み込みます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::FileRead_gets</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: ファイルハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 読み込んだ１行分のテキスト (改行を含まない)</div></div>";
		case "CDXLibWrapper:FileRead_getc": return "<h2>ファイル/テキスト１文字読込</h2><div class=\"text\">開いているテキストファイルから次の１文字を読み込みます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::FileRead_getc</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: ファイルハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 読み込んだ１文字を示す文字コード。<br>失敗した場合は -1 が返されます。<br></div></div>";
		case "CDXLibWrapper:FileRead_eof": return "<h2>ファイル/終端検証</h2><div class=\"text\">開いているテキストファイルが終端まで読み終えたかどうかを調べます。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::FileRead_eof</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: ファイルハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: ファイルの終端に達している場合はTrue</div></div>";
		case "CDXLibWrapper:ConnectNetWork": return "<h2>TCP/他マシンへ接続</h2><div class=\"text\">LANやインターネット等で繋がっている他のマシンとの通信を確立します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::ConnectNetWork</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [CIPv4Address ip]: 接続先のIPアドレス</li><li>第2引数 [int portNum]: ポート番号</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0以上:TCPネットワークハンドル</div></div>";
		case "CDXLibWrapper:CloseNetWork": return "<h2>TCP/接続終了</h2><div class=\"text\">接続を切断し、データの送受信を終了します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::CloseNetWork</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0:成功</div></div>";
		case "CDXLibWrapper:PreparationListenNetWork": return "<h2>TCP/接続受付開始</h2><div class=\"text\">自分のマシンが他のマシンからの接続を受け付ける状態にします。<br>処理は停止せずにバックグラウンドで受け付けます。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::PreparationListenNetWork</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int portNum]: ポート番号</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0:成功</div></div>";
		case "CDXLibWrapper:StopListenNetWork": return "<h2>TCP/接続受付終了</h2><div class=\"text\">他のマシンから接続を受け付けている状態を解除します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::StopListenNetWork</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0:成功</div></div>";
		case "CDXLibWrapper:NetWorkSend": return "<h2>TCP/データ送信</h2><div class=\"text\">接続先のマシンにデータを送信します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::NetWorkSend</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li><li>第2引数 [const TCHAR* data]: 送信データ文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0:成功</div></div>";
		case "CDXLibWrapper:GetNetWorkDataLength": return "<h2>TCP/受信データの一時記憶バッファサイズ取得</h2><div class=\"text\">接続先マシンから送られてきたデータを一時的に記憶する内部バッファにあるデータサイズを取得します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetNetWorkDataLength</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0以上:受信データの一時記憶バッファサイズ（バイト単位）</div></div>";
		case "CDXLibWrapper:GetNetWorkSendDataLength": return "<h2>TCP/未送信データサイズ取得</h2><div class=\"text\">データ送信関数で実行してもすぐに送信されない場合があります。<br>その場合に一時的に記憶される内部バッファのデータサイズを取得します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetNetWorkSendDataLength</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0以上:未送信のデータサイズ（バイト単位）</div></div>";
		case "CDXLibWrapper:NetWorkRecv": return "<h2>TCP/受信データの一時記憶バッファデータ取得</h2><div class=\"text\">接続先から受信したデータを取得し、一時記憶バッファから削除します。<br>実際に取得されたデータは [通信/受信データ] プロパティで取得できます。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::NetWorkRecv</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li><li>第2引数 [int length]: 取得するデータサイズ（バイト単位）</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0:成功</div></div>";
		case "CDXLibWrapper:NetWorkRecvToPeek": return "<h2>TCP/受信データの一時記憶バッファデータ先読み</h2><div class=\"text\">接続先から受信したデータを取得しますが、一時記憶バッファからは削除しません。<br>実際に取得されたデータは [通信/受信データ] プロパティで取得できます。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::NetWorkRecvToPeek</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li><li>第2引数 [int length]: 取得するデータサイズ（バイト単位）</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0:成功</div></div>";
		case "CDXLibWrapper:GetNewAcceptNetWork": return "<h2>TCP/新規接続ハンドル取得</h2><div class=\"text\">接続受付状態のとき、新たに確立された接続先を示すネットワークハンドルを取得します。<br>ハンドルの取得は一度しか行えません。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetNewAcceptNetWork</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: -1:新規接続なし  0以上:TCPネットワークハンドル</div></div>";
		case "CDXLibWrapper:GetLostNetWork": return "<h2>TCP/新規切断ハンドル取得</h2><div class=\"text\">通信エラーや接続先による通信切断等により、新たに切断された接続先を示すネットワークハンドルを取得します。<br>ハンドルの取得は一度しか行えません。<br>ここでハンドルが得られた場合は、自分側のマシンも明示的に切断処理を行う必要があります。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetLostNetWork</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: -1:新規切断なし  0以上:TCPネットワークハンドル</div></div>";
		case "CDXLibWrapper:GetNetWorkAcceptState": return "<h2>TCP/接続状態取得</h2><div class=\"text\">指定した接続先マシンと現在接続状態にあるかどうかを検証します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetNetWorkAcceptState</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: FALSE:接続されていない  TRUE:接続されている</div></div>";
		case "CDXLibWrapper:GetNetWorkIP": return "<h2>TCP/接続先IPアドレス取得</h2><div class=\"text\">接続されている相手側のマシンのアドレスを取得します。<br>一度切断されてもハンドルを用いてアドレスを取得することはできるため、再接続を試行する場合等に使用します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::GetNetWorkIP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: TCPネットワークハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">CIPv4Address: 接続先のIPアドレス</div></div>";
		case "CDXLibWrapper:MakeUDPSocket": return "<h2>UDP/通信ソケット作成</h2><div class=\"text\">UDP通信を使用するためのソケットを作成します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::MakeUDPSocket</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int recvPortNum]: 受信ポート番号</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0以上:UDPソケットハンドル</div></div>";
		case "CDXLibWrapper:DeleteUDPSocket": return "<h2>UDP/通信ソケット削除</h2><div class=\"text\">UDP通信で使用するソケットを削除します。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::DeleteUDPSocket</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int UDPHandle]: UDPソケットハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  0:成功</div></div>";
		case "CDXLibWrapper:NetWorkSendUDP": return "<h2>UDP/データ送信</h2><div class=\"text\">宛先にデータを送信します。<br>UDPの仕組みの関係で、送信サイズは500バイト以内にすることが推奨されています。<br>また、1024バイト以上はゲームプログラムの関係で送れません。<br>エラーが発生した場合は一切データは送信されないので、再度試行する必要があります。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::NetWorkSendUDP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int UDPHandle]: UDPソケットハンドル</li><li>第2引数 [CIPv4Address sendIP]: 送信先IPアドレス</li><li>第3引数 [int sendPortNum]: 送信先のポート番号</li><li>第4引数 [const TCHAR* data]: 送信データ文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -3:送信準備が未完了  -2:送信データが大きすぎる  -1:エラー  0以上:送信データサイズ（バイト単位）</div></div>";
		case "CDXLibWrapper:NetWorkRecvUDP": return "<h2>UDP/データ取得</h2><div class=\"text\">UDP通信で受信したデータを一時記憶バッファから取り出します。<br>実際に取得されたデータは [通信/受信データ] プロパティで取得できます。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::NetWorkRecvUDP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int UDPHandle]: UDPソケットハンドル</li><li>第2引数 [bool peekMode]: 受信データを一時記憶バッファに残したままにするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -3:受信データなし  -2:受信データサイズが大きすぎる  -1:エラー  0以上:受信データサイズ（バイト単位）</div></div>";
		case "CDXLibWrapper:CheckNetWorkRecvUDP": return "<h2>UDP/受信チェック</h2><div class=\"text\">UDP通信でデータを受信したかどうかを検証します。<br>受信データがある場合は別途取得処理を呼び出す必要があります。<br>使用方法の詳細はDXライブラリの<a href=\"http://dxlib.o.oo7.jp/dxfunc.html\" target=\"_blank\">リファレンスマニュアル</a>をご覧下さい。<hr><h3>定義位置</h3><div class=\"text\">CDXLibWrapper::CheckNetWorkRecvUDP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int UDPHandle]: UDPソケットハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: -1:エラー  FALSE:受信データなし  TRUE:受信データあり</div></div>";
		case "CDatabase:CAddonData": return "<h2>アドオン情報</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CAddonData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDValueData</div></div>";
		case "CDatabase:CAddonData:Type": return "<h2>アドオン種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CAddonData::Type</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBCell:CDBIDValues": return "<h2>ID/値リストのセルクラス</h2><div class=\"text\">IDと値をペアにしたリストのセルです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:Exists": return "<h2>既存IDの検証</h2><div class=\"text\">指定したIDがリスト内に存在するかどうかを調べます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::Exists</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 存在する場合はTrue</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:Count": return "<h2>総数取得</h2><div class=\"text\">リストの要素数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::Count</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: IDの個数</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:Add": return "<h2>追加</h2><div class=\"text\">IDと値のペアをこのセルに追加します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: ID</li><li>第2引数 [int val]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:Insert": return "<h2>挿入</h2><div class=\"text\">このセルの指定したインデックスにIDと値のペアを挿入します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::Insert</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: ID</li><li>第2引数 [int val]: 値</li><li>第3引数 [int index]: 挿入インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:Delete": return "<h2>削除</h2><div class=\"text\">このセルの指定したインデックスの要素を削除します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:Clear": return "<h2>全削除</h2><div class=\"text\">このセルの情報をすべて削除します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:Get": return "<h2>取得</h2><div class=\"text\">このセルの指定したインデックスの要素を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CIDValueData*: IDと値のデータ</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:GetValue": return "<h2>値取得</h2><div class=\"text\">このセルの指定したIDに対応する値を取得します。<br>存在しない場合はエラーとなります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::GetValue</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: IDに対応する値</div></div>";
		case "CDatabase:CDBCell:CDBIDValues:SetValue": return "<h2>値設定</h2><div class=\"text\">このセルの指定したIDに対応する値を設定します。<br>存在しない場合はエラーとなります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBIDValues::SetValue</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: 設定する要素のID</li><li>第2引数 [int val]: 設定値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBCell:CDBAddons": return "<h2>アドオンセルクラス</h2><div class=\"text\">アドオンを格納するためのセルです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBAddons</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CDatabase:CDBCell:CDBAddons:Count": return "<h2>総数取得</h2><div class=\"text\">アドオン数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBAddons::Count</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: アドオン総数</div></div>";
		case "CDatabase:CDBCell:CDBAddons:Get": return "<h2>取得</h2><div class=\"text\">このセルの指定したインデックスの要素を取得します。<br>変更は反映されません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::CDBAddons::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CAddonData: アドオン単体情報</div></div>";
		case "CDatabase:CDBCell": return "<h2>セルクラス</h2><div class=\"text\">データベースのセル単体を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CDatabase:CDBCell:Init": return "<h2>初期化</h2><div class=\"text\">セル内のデータを初期状態に戻します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::Init</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBCell:ToString": return "<h2>文字列化</h2><div class=\"text\">セル内のデータを文字列にして返します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::ToString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: 文字列化されたセル内のデータ</div></div>";
		case "CDatabase:CDBCell:GetCellType": return "<h2>セル種別取得</h2><div class=\"text\">このセルの種別を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::GetCellType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: セル種別</div></div>";
		case "CDatabase:CDBCell:ConvertToColorCode": return "<h2>カラーコードに変換</h2><div class=\"text\">このセルの情報を基にカラーコードに変換します。<br>３つの値が存在しない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::ConvertToColorCode</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: カラーコード</div></div>";
		case "CDatabase:CDBCell:ConvertToPoint": return "<h2>座標に変換</h2><div class=\"text\">このセルの情報を基に座標データに変換します。<br>２つの値が : で区切られていない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::ConvertToPoint</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">CPoint: 座標情報</div></div>";
		case "CDatabase:CDBCell:Integer": return "<h2>整数値</h2><div class=\"text\">セル内の情報を整数データとして取り出します。<br>単一整数型のセルでない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::Integer</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBCell:Boolean": return "<h2>論理値</h2><div class=\"text\">セル内の情報を論理値データとして取り出します。<br>論理型のセルでない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::Boolean</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CDatabase:CDBCell:String": return "<h2>文字列値</h2><div class=\"text\">セル内の情報を文字列データとして取り出します。<br>文字列型のセルでない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::String</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CDatabase:CDBCell:Integers": return "<h2>複数値</h2><div class=\"text\">セル内の情報を複数値データとして取り出します。<br>複数値型のセルでない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::Integers</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CIntegerArray (読み取り専用)</div></div>";
		case "CDatabase:CDBCell:IDValues": return "<h2>ID/セルリスト値</h2><div class=\"text\">セル内の情報をID/セルリストデータとして取り出します。<br>ID/セルリスト型のセルでない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBCell::IDValues</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBIDValues (読み取り専用)</div></div>";
		case "CDatabase:CDBBaseOne": return "<h2>サブデータベース単体クラス</h2><div class=\"text\">行と列を成すデータベース単体クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CDatabase:CDBBaseOne:InitDB": return "<h2>すべて初期化</h2><div class=\"text\">このサブデータベースを初期化します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::InitDB</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBBaseOne:InitRow": return "<h2>指定ID行を初期化</h2><div class=\"text\">指定したIDの行を初期化します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::InitRow</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int rowID]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBBaseOne:InitRowFromIndex": return "<h2>指定インデックス行を初期化</h2><div class=\"text\">指定したインデックスの行を初期化します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::InitRowFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int rowIndex]: 行インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBBaseOne:InitCell": return "<h2>指定IDのセルを初期化</h2><div class=\"text\">IDと列名を指定してセルを初期化します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::InitCell</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int rowID]: ID</li><li>第2引数 [string columnName]: 列名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBBaseOne:InitCellFromIndex": return "<h2>指定インデックスセルを初期化</h2><div class=\"text\">行と列のインデックスを指定してセルを初期化します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::InitCellFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int rowIndex]: 行インデックス</li><li>第2引数 [int columnIndex]: 列インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBBaseOne:GetRowCount": return "<h2>行数取得</h2><div class=\"text\">このサブデータベースに含まれる行数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::GetRowCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: このサブデータベースに含まれる行数</div></div>";
		case "CDatabase:CDBBaseOne:GetColumnCount": return "<h2>列数取得</h2><div class=\"text\">このサブデータベースに含まれる列数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::GetColumnCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: このサブデータベースに含まれる列数</div></div>";
		case "CDatabase:CDBBaseOne:GetColumnIndex": return "<h2>列名から列インデックス取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::GetColumnIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string columnName]: 列名</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 列インデックス。<br>存在しない場合は -1 が返されます。<br></div></div>";
		case "CDatabase:CDBBaseOne:ConvertToFixedID": return "<h2>可視IDをFixedIDへ変換</h2><div class=\"text\">データベース上で任意に設定できるIDから固有のIDを取得します。<br>同一の可視IDが複数ある場合はデータベース上で最初に見つかった項目が返されます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::ConvertToFixedID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int visibleID]: 可視ID (ユーザー定義のID)</li></ul></div><h3>戻り値</h3><div class=\"text\">int: FixedID (存在しない場合は -1)</div></div>";
		case "CDatabase:CDBBaseOne:GetColumnName": return "<h2>列インデックスから列名取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::GetColumnName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int columnIndex]: 列インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 列名</div></div>";
		case "CDatabase:CDBBaseOne:GetColumnType": return "<h2>列種別取得</h2><div class=\"text\">指定した列インデックスに対応する列種別を示す文字列を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::GetColumnType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int columnIndex]: 列インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 列種別を示す文字列</div></div>";
		case "CDatabase:CDBBaseOne:GetCell": return "<h2>指定IDのセル取得</h2><div class=\"text\">IDと列名を指定してセルデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::GetCell</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int rowID]: ID</li><li>第2引数 [string columnName]: 列名</li></ul></div><h3>戻り値</h3><div class=\"text\">CDatabase::CDBCell*: セルデータ</div></div>";
		case "CDatabase:CDBBaseOne:GetCellFromIndex": return "<h2>指定インデックスのセル取得</h2><div class=\"text\">行と列のインデックスを指定してセルデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBaseOne::GetCellFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int rowIndex]: 行インデックス</li><li>第2引数 [int columnIndex]: 列インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CDatabase::CDBCell*: セルデータ</div></div>";
		case "CDatabase:CDBBase": return "<h2>データベースクラス</h2><div class=\"text\">サブデータベースを包含する親データベース単体クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBase</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CDatabase:CDBBase:GetSubDBCount": return "<h2>サブDBの総数取得</h2><div class=\"text\">このデータベースに含まれるサブデータベースの総数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBase::GetSubDBCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: サブデータベースの総数</div></div>";
		case "CDatabase:CDBBase:GetDBFileName": return "<h2>DBファイル名取得</h2><div class=\"text\">このデータベースのファイル名を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBase::GetDBFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: データベースのソースファイル名</div></div>";
		case "CDatabase:CDBBase:GetSubDB": return "<h2>サブDB取得</h2><div class=\"text\">このデータベースのサブDBを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBBase::GetSubDB</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBBaseOne*: サブDBのインスタンス</div></div>";
		case "CDatabase:CDBSystem": return "<h2>システムDBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBSystem</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBSystem:GetInteger": return "<h2>整数型の設定値を取得</h2><div class=\"text\">設定名は定数として定義されています。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBSystem::GetInteger</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string settingName]: 設定項目名</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 設定値</div></div>";
		case "CDatabase:CDBSystem:GetBoolean": return "<h2>論理型の設定値を取得</h2><div class=\"text\">設定名は定数として定義されています。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBSystem::GetBoolean</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string settingName]: 設定項目名</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 設定値</div></div>";
		case "CDatabase:CDBSystem:GetString": return "<h2>文字列型の設定値を取得</h2><div class=\"text\">設定名は定数として定義されています。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBSystem::GetString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string settingName]: 設定項目名</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 設定値</div></div>";
		case "CDatabase:CDBSystem:GetSize": return "<h2>サイズ型の設定値を取得</h2><div class=\"text\">設定名は定数として定義されています。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBSystem::GetSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string settingName]: 設定項目名</li></ul></div><h3>戻り値</h3><div class=\"text\">CSize: 設定値</div></div>";
		case "CDatabase:CDBMaterial": return "<h2>汎用素材DBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBMaterial</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBMaterial:GetHandle": return "<h2>素材ハンドル取得</h2><div class=\"text\">描画や再生、文字列の描画に使われる素材のハンドルを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBMaterial::GetHandle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int type]: 素材種別</li><li>第2引数 [int id]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 素材ハンドル (識別番号)</div></div>";
		case "CDatabase:CDBMaterial:Play": return "<h2>サウンド再生(非同期)</h2><div class=\"text\">サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を行います。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBMaterial::Play</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int soundID]: サウンドDB上のID</li><li>第2引数 [int volume]: 音量（0～255）</li><li>第3引数 [int pitch]: 音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）</li><li>第4引数 [int pan]: 左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBMaterial:PlayForWait": return "<h2>サウンド再生(同期)</h2><div class=\"text\">サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を行います。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBMaterial::PlayForWait</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int soundID]: サウンドDB上のID</li><li>第2引数 [int volume]: 音量（0～255）</li><li>第3引数 [int pitch]: 音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）</li><li>第4引数 [int pan]: 左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBMaterial:Stop": return "<h2>サウンド停止</h2><div class=\"text\">サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を停止します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBMaterial::Stop</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int soundID]: サウンドDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData": return "<h2>エフェクト再生データクラス</h2><div class=\"text\">再生中のエフェクトに関するデータクラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:Frame": return "<h2>フレーム番号</h2><div class=\"text\">現在のフレーム番号です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::Frame</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:TargetType": return "<h2>描画基準</h2><div class=\"text\">表示位置の基準点です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::TargetType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:WaitBreakFlag": return "<h2>再生待機中断フラグ</h2><div class=\"text\">再生終了まで待つ場合について、待機を再生途中に解除するときに使います。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::WaitBreakFlag</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:LoadGraph": return "<h2>グラフィック素材読込</h2><div class=\"text\">レイヤーグラフィックを読み込みます。<br>セクションとはアニメーション１区画のことを指します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::LoadGraph</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int layerIndex]: レイヤーインデックス</li><li>第2引数 [string fileName]: ファイル名</li><li>第3引数 [int secSizeWidth]: セクション幅</li><li>第4引数 [int secSizeHeight]: セクション高さ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:Draw": return "<h2>エフェクト描画</h2><div class=\"text\">このエフェクトを画面上に描画します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::Draw</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int layerIndex]: レイヤーインデックス</li><li>第2引数 [int destX]: 描画先中心X座標</li><li>第3引数 [int destY]: 描画先中心Y座標</li><li>第4引数 [int secX]: セクションX座標</li><li>第5引数 [int secY]: セクションY座標</li><li>第6引数 [int blendMode]: 合成方法</li><li>第7引数 [int trans]: 透明度 (0～255)</li><li>第8引数 [int ext]: 拡大率 (等倍=100)</li><li>第9引数 [int angle]: 回転率 (度数指定)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:PlaySE": return "<h2>効果音再生</h2><div class=\"text\">サウンドハンドルを使用せず、サウンドDB上のIDから直接的に再生を行います。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::PlaySE</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: サウンドDB上のID</li><li>第2引数 [int volume]: 音量</li><li>第3引数 [int pitch]: 音程</li><li>第4引数 [int pan]: pan</li><li>第5引数 [int sameCounter]: 同一フレームの実行回数 (初回を０と数える)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:Flash": return "<h2>フラッシュ</h2><div class=\"text\">画面に対してフラッシュ演出を行います。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::Flash</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int color]: 色</li><li>第2引数 [int strength]: 強さ</li><li>第3引数 [int count]: 回数</li><li>第4引数 [int sameCounter]: 同一フレームの実行回数 (初回を０と数える)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:Shake": return "<h2>減衰振動</h2><div class=\"text\">画面に対して減衰する振動の演出を行います。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::Shake</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int strength]: 強さ</li><li>第2引数 [int sameCounter]: 同一フレームの実行回数 (初回を０と数える)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect:CDBEffectData:WaitBreak": return "<h2>再生待機解除</h2><div class=\"text\">再生終了まで待つ場合について、その待機を途中で解除します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::CDBEffectData::WaitBreak</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect": return "<h2>エフェクトDBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBEffect:Show": return "<h2>再生(非同期)</h2><div class=\"text\">指定したエフェクトをバックグラウンドで再生します。<br>再生中のエフェクトデータにはハンドルを使ってアクセスすることができます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::Show</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: ID</li><li>第2引数 [int destX]: 表示位置中心X座標</li><li>第3引数 [int destY]: 表示位置中心Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">int: エフェクトデータのハンドル (識別番号)</div></div>";
		case "CDatabase:CDBEffect:ShowForWait": return "<h2>再生(同期)</h2><div class=\"text\">指定したエフェクトを再生し、終了まで待機します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::ShowForWait</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: ID</li><li>第2引数 [int destX]: 表示位置中心X座標</li><li>第3引数 [int destY]: 表示位置中心Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBEffect:GetEffectData": return "<h2>エフェクトデータ取得</h2><div class=\"text\">エフェクトデータのハンドルからエフェクトデータを取得します。<br>このメソッドはエフェクト再生スクリプトの引数に渡されているハンドルから、再生中のエフェクトデータにアクセスするために使います。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBEffect::GetEffectData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: エフェクトデータのハンドル (識別番号)</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBEffectData*: エフェクトデータのインスタンス</div></div>";
		case "CDatabase:CDBTileset:CTileData": return "<h2>タイル単体データクラス</h2><div class=\"text\">タイルデータに関するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTileData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CDatabase:CDBTileset:CTileData:Hit": return "<h2>当たり判定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTileData::Hit</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBTileset:CTileData:InOut": return "<h2>出入設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTileData::InOut</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBTileset:CTileData:Priority": return "<h2>描画優先度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTileData::Priority</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBTileset:CTileData:Tag": return "<h2>グループ番号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTileData::Tag</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBTileset:CTileData:AnimPatternCount": return "<h2>アニメーションパターン数</h2><div class=\"text\">オートタイルのアニメーションパターンの個数です。<br>オブジェクトタイルは常に０となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTileData::AnimPatternCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBTileset:CTilePallet": return "<h2>タイルパレットクラス</h2><div class=\"text\">タイルパレットに関するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTilePallet</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CDatabase:CDBTileset:CTilePallet:TilesetHandle": return "<h2>グラフィックハンドル</h2><div class=\"text\">タイルセットを使って描画を行うのに必要なグラフィックハンドルです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTilePallet::TilesetHandle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDatabase:CDBTileset:CTilePallet:AutoTiles": return "<h2>オートタイルリスト</h2><div class=\"text\">オートタイル情報のリストです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::CTilePallet::AutoTiles</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CIntegerArray (読み取り専用)</div></div>";
		case "CDatabase:CDBTileset": return "<h2>タイルセットDBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBTileset:ActiveTilesetID": return "<h2>現在使用中のタイルセットID</h2><div class=\"text\">現在のマップで使用されているタイルセットのIDです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::ActiveTilesetID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDatabase:CDBTileset:LoadTileset": return "<h2>タイルセット読込</h2><div class=\"text\">指定したIDに対応するタイルセット定義ファイルを読み込み、これを現在有効なタイルパレットとします。<br>複数のタイルセットを読み込むことはできません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::LoadTileset</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: タイルセットID</li></ul></div><h3>戻り値</h3><div class=\"text\">CTilePallet*: </div></div>";
		case "CDatabase:CDBTileset:GetTilePallet": return "<h2>タイルパレットからタイルデータ取得</h2><div class=\"text\">現在有効なタイルパレットの指定した位置のタイルデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::GetTilePallet</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int tileX]: タイルパレットX座標 (タイル単位)</li><li>第2引数 [int tileY]: タイルパレットY座標 (タイル単位)</li></ul></div><h3>戻り値</h3><div class=\"text\">CTileData*: タイル単体データ</div></div>";
		case "CDatabase:CDBTileset:GetTilePalletSize": return "<h2>タイルパレットサイズ取得</h2><div class=\"text\">現在有効なタイルパレットのサイズをタイル単位で取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBTileset::GetTilePalletSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">CSize: サイズ (タイル単位)</div></div>";
		case "CDatabase:CDBValue": return "<h2>変数DBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBValue</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBValue:GetSelfValues": return "<h2>個別変数データ取得</h2><div class=\"text\">指定した個別変数の初期状態の個別変数データを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBValue::GetSelfValues</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int type]: 変数DB上のインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CSelfValueData: 初期値が与えられた個別変数データ</div></div>";
		case "CDatabase:CDBActorData:CActorSubData": return "<h2>アクターサブ情報クラス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDValueData</div></div>";
		case "CDatabase:CDBActorData:CActorSubData:SelfValues": return "<h2>個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubData::SelfValues</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">CSelfValueData</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray": return "<h2>配列クラス/アクターサブ情報</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray:GetIndexFromID": return "<h2>IDからインデックス取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray::GetIndexFromID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 要素のインデックス</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray:GetID": return "<h2>取得/ID</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray::GetID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">int: ID</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray:GetName": return "<h2>取得/名前</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray::GetName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 名前</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray:GetValue": return "<h2>取得/値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray::GetValue</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 値</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray:GetSelfValues": return "<h2>取得/個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray::GetSelfValues</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CSelfValueData*: 個別変数データ</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray:Exists": return "<h2>ID検証</h2><div class=\"text\">指定したIDの要素が含まれるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray::Exists</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 存在する場合はTrue</div></div>";
		case "CDatabase:CDBActorData:CActorSubDataArray:Count": return "<h2>総数取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CActorSubDataArray::Count</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 要素の総数</div></div>";
		case "CDatabase:CDBActorData": return "<h2>アクターデータクラス</h2><div class=\"text\">パーティキャラとエネミーの単体情報を統合したデータクラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CDatabase:CDBActorData:Title": return "<h2>肩書き</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::Title</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CDatabase:CDBActorData:IsNPC": return "<h2>NPCかどうか</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::IsNPC</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CDatabase:CDBActorData:EXP": return "<h2>経験値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::EXP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBActorData:Graphics": return "<h2>グラフィック名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::Graphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:GraphHandle": return "<h2>グラフィックハンドル</h2><div class=\"text\">描画に必要なハンドルです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GraphHandle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:GraphSize": return "<h2>グラフィックサイズ</h2><div class=\"text\">読み込まれたグラフィックのサイズです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GraphSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSize (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:Location": return "<h2>グラフィック位置</h2><div class=\"text\">グラフィックの描画左上座標です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::Location</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:Level": return "<h2>レベル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::Level</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:SelfValues": return "<h2>個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::SelfValues</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSelfValueData (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:PotentialSkills": return "<h2>習得予定スキルリスト</h2><div class=\"text\">まだアクターが習得していないスキルの情報（アクターサブ情報クラスのインスタンス）です。<br>ID、名前、値（習得レベル）が要素に含まれます。<br>ただし、スクリプトはこのプロパティ経由で追加/削除/変更を行うことはできません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::PotentialSkills</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:Attributes": return "<h2>属性リスト</h2><div class=\"text\">アクターに設定されている属性の情報（アクターサブ情報クラスのインスタンス）です。<br>ID、名前、値（参照カウンター）が要素に含まれます。<br>ただし、スクリプトはこのプロパティ経由で追加/削除/変更を行うことはできません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::Attributes</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:Classes": return "<h2>クラスリスト</h2><div class=\"text\">アクターに設定されているクラスの情報（アクターサブ情報クラスのインスタンス）です。<br>ID、名前、個別変数が要素に含まれます。<br>ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::Classes</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:Equips": return "<h2>装備リスト</h2><div class=\"text\">アクターに設定されている装備品の情報（アクターサブ情報クラスのインスタンス）です。<br>ID、名前、個別変数が要素に含まれます。<br>ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::Equips</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:States": return "<h2>間接効果リスト</h2><div class=\"text\">アクターに設定されている間接効果の情報（アクターサブ情報クラスのインスタンス）です。<br>ID、名前、個別変数が要素に含まれます。<br>ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::States</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:LearnedSkills": return "<h2>習得スキルリスト</h2><div class=\"text\">アクターに設定されているクラスの情報（アクターサブ情報クラスのインスタンス）です。<br>ID、名前、関連値（参照カウンター）、個別変数が要素に含まれます。<br>ただし、スクリプトはこのプロパティ経由で追加/削除/変更（個別変数を除く）を行うことはできません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::LearnedSkills</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:LevelUpParameters": return "<h2>レベルアップによるパラメーター変動情報</h2><div class=\"text\">このアクターがレベルアップしたとき、変動しなかったものも含めたパラメーター変動値が格納されます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::LevelUpParameters</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:LevelUpSkills": return "<h2>レベルアップによる習得スキル情報</h2><div class=\"text\">このアクターがレベルアップしたとき、習得したスキルが格納されます。<br>既に習得している場合であっても、習得レベルに達した時点で対象となります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::LevelUpSkills</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CActorSubDataArray (読み取り専用)</div></div>";
		case "CDatabase:CDBActorData:PrintData": return "<h2>アクター情報出力</h2><div class=\"text\">このアクターの情報をログに書き出します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::PrintData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:CreateActorFromChar": return "<h2>パーティキャラから生成</h2><div class=\"text\">パーティキャラを基にしてアクターデータを生成します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CreateActorFromChar</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: パーティキャラDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBActorData: 生成されたアクターデータ</div></div>";
		case "CDatabase:CDBActorData:CreateActorFromEnemy": return "<h2>エネミーから生成</h2><div class=\"text\">エネミーを基にしてアクターデータを生成します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CreateActorFromEnemy</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: エネミーDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBActorData: 生成されたアクターデータ</div></div>";
		case "CDatabase:CDBActorData:LoadGraphics": return "<h2>グラフィック読込</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::LoadGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:DisposeGraphics": return "<h2>グラフィック破棄</h2><div class=\"text\">グラフィックに関わるリソースを破棄します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::DisposeGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:GetBaseFDBIndex": return "<h2>ソースDBインデックス取得</h2><div class=\"text\">このアクターの基となった固定データベースのインデックスを返します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GetBaseFDBIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 固定データベースのインデックス</div></div>";
		case "CDatabase:CDBActorData:SetClass": return "<h2>クラス設定</h2><div class=\"text\">複数設定することができます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::SetClass</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: クラスDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:SetEquip": return "<h2>装備設定</h2><div class=\"text\">アクターの装備可否を考慮した上で装備処理を行います。<br>装備したアイテムはユーザー自身で所持アイテムリストから削除する必要があります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::SetEquip</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: アイテムDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CDatabase:CDBActorData:SetSkill": return "<h2>スキル設定</h2><div class=\"text\">スキルを習得させます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::SetSkill</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: スキルDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:SetState": return "<h2>間接効果設定</h2><div class=\"text\">アクターの間接効果耐性を考慮した上で罹患処理を行います。<br>耐性が付いている場合は確率で罹患します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::SetState</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: 間接効果DB上のID</li><li>第2引数 [bool absolute]: 耐性に関わらず必ず成功させるかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CDatabase:CDBActorData:ReleaseClass": return "<h2>クラス解除</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ReleaseClass</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: クラスDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CDatabase:CDBActorData:ReleaseEquip": return "<h2>装備解除</h2><div class=\"text\">外された装備はユーザー自身で所持アイテムリストに追加する必要があります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ReleaseEquip</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: アイテムDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CDatabase:CDBActorData:ReleaseEquipType": return "<h2>装備大種別で解除</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ReleaseEquipType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int itemTypeID]: アイテム大種別DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CDatabase:CDBActorData:ReleaseSkill": return "<h2>スキル解除</h2><div class=\"text\">スキルを習得していなかったことにします。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ReleaseSkill</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: スキルDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CDatabase:CDBActorData:ReleaseState": return "<h2>間接効果解除</h2><div class=\"text\">耐性に関わらず必ず解除します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ReleaseState</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: 間接効果DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CDatabase:CDBActorData:ClearClass": return "<h2>クラス全解除</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ClearClass</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:ClearEquip": return "<h2>装備全解除</h2><div class=\"text\">外された装備はユーザー自身で所持アイテムリストに追加する必要があります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ClearEquip</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:ClearSkill": return "<h2>スキル全解除</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ClearSkill</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:ClearState": return "<h2>間接効果全解除</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ClearState</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:ClearStateOnlyBad": return "<h2>非善良の間接効果を全解除</h2><div class=\"text\">いわゆるバッドステータスの間接効果だけを一括解除します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::ClearStateOnlyBad</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActorData:GetParameter": return "<h2>パラメーター取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GetParameter</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: パラメーターDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">CIDValueData*: パラメーターのID/値のデータ</div></div>";
		case "CDatabase:CDBActorData:GetAttributeResistance": return "<h2>属性耐性取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GetAttributeResistance</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: 属性DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 耐性値</div></div>";
		case "CDatabase:CDBActorData:GetStateResistance": return "<h2>間接効果耐性取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GetStateResistance</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: 間接効果DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 耐性値</div></div>";
		case "CDatabase:CDBActorData:GetEquipIDFromItemTypeID": return "<h2>装備大種別からアイテムID取得</h2><div class=\"text\">指定した装備大種別に該当する装備品のIDを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GetEquipIDFromItemTypeID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int itemTypeID]: アイテム大種別DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: アイテムDB上のID</div></div>";
		case "CDatabase:CDBActorData:CheckAttribute": return "<h2>属性検証</h2><div class=\"text\">指定した属性が設定されているかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CheckAttribute</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int attrID]: 属性DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 属性が付いている場合はTrue</div></div>";
		case "CDatabase:CDBActorData:CheckStateLimit": return "<h2>間接効果制約検証</h2><div class=\"text\">指定した制約に相当する間接効果を罹患しているかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CheckStateLimit</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int stateLimit]: 間接効果の制約</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 該当する間接効果を罹患している場合はTrue</div></div>";
		case "CDatabase:CDBActorData:CheckUseSkill": return "<h2>スキル検証</h2><div class=\"text\">指定したスキルを習得していて、かつ使用できる状態であるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CheckUseSkill</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int skillID]: スキルDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 使用できる場合はTrue</div></div>";
		case "CDatabase:CDBActorData:CheckUseSkillType": return "<h2>スキル種別検証</h2><div class=\"text\">指定したスキル種別が使用できる状態であるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CheckUseSkillType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int skillTypeID]: スキル種別DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 使用できる場合はTrue</div></div>";
		case "CDatabase:CDBActorData:CheckEquipLock": return "<h2>装備固定検証</h2><div class=\"text\">指定した装備大種別が固定状態にあるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CheckEquipLock</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int itemTypeID]: 装備大種別DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 固定されている場合はTrue</div></div>";
		case "CDatabase:CDBActorData:CheckEquip": return "<h2>装備品検証</h2><div class=\"text\">指定した装備品を装備できるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::CheckEquip</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int itemID]: アイテムDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 装備できる場合はTrue</div></div>";
		case "CDatabase:CDBActorData:PlusEXP": return "<h2>経験値加算</h2><div class=\"text\">経験値を加算します。<br>レベルアップ処理も行われます。<br>経験値は減らすこともできますが、この場合レベルが下がることはありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::PlusEXP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int exp]: 加算値</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 変動したレベル数</div></div>";
		case "CDatabase:CDBActorData:LevelUp": return "<h2>レベルアップ</h2><div class=\"text\">レベルを上げます。<br>上昇後のレベルに必要な経験値が自動で加算されます。<br>レベルは下げることもできますが、この場合経験値が減ることはありません。<br>最大レベルに達している場合は戻り値は整数型の最大値になります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::LevelUp</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int val]: 上昇レベル数</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 次のレベルアップに必要な経験値</div></div>";
		case "CDatabase:CDBActorData:GetNextEXP": return "<h2>次のレベルアップに必要な経験値を取得</h2><div class=\"text\">最大レベルに達している場合は戻り値は整数型の最大値になります。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActorData::GetNextEXP</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 次のレベルアップに必要な経験値</div></div>";
		case "CDatabase:CDBActor": return "<h2>アクターDBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<br>固定データベースのパーティキャラDBを基に生成されます。<br>こちらは可変データベースのため自由に操作できます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActor</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBActor:GetCount": return "<h2>総数取得</h2><div class=\"text\">アクターの総数を取得します。<br>固定データベースのパーティキャラDBの総数に一致します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActor::GetCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: アクター総数</div></div>";
		case "CDatabase:CDBActor:InitData": return "<h2>指定IDのデータ初期化</h2><div class=\"text\">指定したアクターのデータを初期化（パーティキャラDBから復元）します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActor::InitData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: アクターID (パーティキャラDB上のID)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActor:InitDataFromIndex": return "<h2>指定インデックスのデータ初期化</h2><div class=\"text\">指定したアクターのデータを初期化（パーティキャラDBから復元）します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActor::InitDataFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: アクターインデックス (パーティキャラDB上の行インデックス)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBActor:GetData": return "<h2>指定IDのデータ取得</h2><div class=\"text\">指定したアクターのデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActor::GetData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: アクターID (パーティキャラDB上のID)</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBActorData*: アクターデータのインスタンス</div></div>";
		case "CDatabase:CDBActor:GetDataFromIndex": return "<h2>指定インデックスのデータ取得</h2><div class=\"text\">指定したアクターのデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBActor::GetDataFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: アクターインデックス (パーティキャラDB上の行インデックス)</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBActorData*: アクターデータのインスタンス</div></div>";
		case "CDatabase:CDBParty": return "<h2>パーティDBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<br>固定データベースの初期設置DBを基に生成されます。<br>こちらは可変データベースのため自由に操作できます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBParty:ClearMembers": return "<h2>全メンバーを脱退</h2><div class=\"text\">この処理を実行した後は速やかに一人以上のメンバーを加えて下さい。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::ClearMembers</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:ClearItems": return "<h2>全所持アイテム削除</h2><div class=\"text\">キャラが装備しているアイテムを除くすべての所持品を破棄します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::ClearItems</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:AddMember": return "<h2>メンバー追加</h2><div class=\"text\">指定したキャラをパーティに追加します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::AddMember</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: パーティキャラDB上のID</li><li>第2引数 [int index]: 追加位置のインデックス (-1 で末尾・先頭を０として数える)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:DeleteMemberFromID": return "<h2>指定IDのメンバー脱退</h2><div class=\"text\">指定したIDのキャラをパーティから脱退させます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::DeleteMemberFromID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: パーティキャラDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:DeleteMemberFromIndex": return "<h2>指定位置のメンバー脱退</h2><div class=\"text\">指定した位置にいるキャラをパーティから脱退させます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::DeleteMemberFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: パーティリスト上のインデックス (先頭を０として数える)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:CheckCharInParty": return "<h2>パーティ所属検証</h2><div class=\"text\">指定したキャラがパーティに所属しているかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::CheckCharInParty</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: パーティキャラDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: パーティリスト上のインデックス。<br>所属していない場合は -1 が返されます。<br></div></div>";
		case "CDatabase:CDBParty:GetCharIDFromPartyIndex": return "<h2>パーティ位置からキャラID取得</h2><div class=\"text\">指定した位置にいるキャラのIDを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::GetCharIDFromPartyIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: パーティリスト上のインデックス (先頭を０として数える)</li></ul></div><h3>戻り値</h3><div class=\"text\">int: パーティキャラDB上のID</div></div>";
		case "CDatabase:CDBParty:GetCharCount": return "<h2>パーティ人数取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::GetCharCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: パーティ人数</div></div>";
		case "CDatabase:CDBParty:AddItem": return "<h2>所持アイテム追加</h2><div class=\"text\">指定したアイテムを指定個数分だけ所持させます。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::AddItem</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: アイテムDB上のID</li><li>第2引数 [int count]: 個数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:DeleteItem": return "<h2>所持アイテム削除</h2><div class=\"text\">指定したアイテムを指定個数分だけ削除します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::DeleteItem</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: アイテムDB上のID</li><li>第2引数 [int count]: 個数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:GetItemDataFromIndex": return "<h2>指定インデックスのアイテム情報取得</h2><div class=\"text\">所持アイテムリストの指定位置にあるアイテム情報を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::GetItemDataFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: 所持アイテムリスト上のインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CIDValueData*: アイテム情報 (ID, 名前, 個数)</div></div>";
		case "CDatabase:CDBParty:GetItemCountAll": return "<h2>所持アイテム総数取得</h2><div class=\"text\">すべての所持アイテム数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::GetItemCountAll</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 所持しているアイテム数</div></div>";
		case "CDatabase:CDBParty:GetItemTypeCount": return "<h2>指定大種別の所持数取得</h2><div class=\"text\">指定したアイテム大種別に該当するアイテムの個数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::GetItemTypeCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int itemTypeID]: アイテム大種別DB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 所持しているアイテム数</div></div>";
		case "CDatabase:CDBParty:GetItemCount": return "<h2>指定アイテムの所持数取得</h2><div class=\"text\">指定したIDに該当するアイテムの個数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::GetItemCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int itemID]: アイテムID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 所持しているアイテム数</div></div>";
		case "CDatabase:CDBParty:SortItemsByVisibleID": return "<h2>所持アイテム並び替え/可視ID順</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::SortItemsByVisibleID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool reverse]: 逆順にするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:SortItemsByName": return "<h2>所持アイテム並び替え/名前順</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::SortItemsByName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool reverse]: 逆順にするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:CDBParty:Money": return "<h2>所持金</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBParty::Money</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CDatabase:CDBUser": return "<h2>ユーザーDBクラス</h2><div class=\"text\">サブデータベース単体の拡張クラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBUser</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CDatabase::CDBBase</div></div>";
		case "CDatabase:CDBUser:GetUserDB": return "<h2>ユーザーDB取得</h2><div class=\"text\">指定したユーザーDBを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::CDBUser::GetUserDB</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: ユーザーDB上のID</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBBaseOne*: サブDBのインスタンス</div></div>";
		case "CDatabase": return "<h2>データベース管理クラス</h2><div class=\"text\">全データベースを統括管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CDatabase:UDB": return "<h2>ユーザーDBMGR</h2><div class=\"text\">ユーザーDBクラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::UDB</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBUser (読み取り専用)</div></div>";
		case "CDatabase:GetDB": return "<h2>データベース取得</h2><div class=\"text\">指定したデータベースを取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::GetDB</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li><li>第2引数 [int dbIndex]: データベースのインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CDBBase*: 親データベースのインスタンス</div></div>";
		case "CDatabase:FDBEffect": return "<h2>エフェクトDBMGR</h2><div class=\"text\">エフェクトDBクラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::FDBEffect</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBEffect (読み取り専用)</div></div>";
		case "CDatabase:FDBMaterial": return "<h2>汎用素材DBMGR</h2><div class=\"text\">汎用素材DBクラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::FDBMaterial</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBMaterial (読み取り専用)</div></div>";
		case "CDatabase:FDBSystem": return "<h2>システムDBMGR</h2><div class=\"text\">システムDBクラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::FDBSystem</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBSystem (読み取り専用)</div></div>";
		case "CDatabase:FDBTileset": return "<h2>タイルセットDBMGR</h2><div class=\"text\">タイルセットDBクラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::FDBTileset</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBTileset (読み取り専用)</div></div>";
		case "CDatabase:VDBValue": return "<h2>変数DBMGR</h2><div class=\"text\">変数DBクラスのインスタンスです。<br>これは可変データベースです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::VDBValue</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBValue (読み取り専用)</div></div>";
		case "CDatabase:VDBParty": return "<h2>パーティDBMGR</h2><div class=\"text\">パーティDBクラスのインスタンスです。<br>これは可変データベースです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::VDBParty</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBParty (読み取り専用)</div></div>";
		case "CDatabase:VDBActor": return "<h2>アクターDBMGR</h2><div class=\"text\">アクターDBクラスのインスタンスです。<br>これは可変データベースです。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::VDBActor</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDBActor (読み取り専用)</div></div>";
		case "CDatabase:GetCell": return "<h2>指定IDのセル取得</h2><div class=\"text\">IDを指定してデータベースのセル情報を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::GetCell</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li><li>第2引数 [int dbIndex]: データベースのインデックス</li><li>第3引数 [int subDB]: サブデータベースのインデックス</li><li>第4引数 [int rowID]: ID</li><li>第5引数 [string columnName]: 列名</li></ul></div><h3>戻り値</h3><div class=\"text\">CDatabase::CDBCell*: セルデータのインスタンス</div></div>";
		case "CDatabase:GetCellFromIndex": return "<h2>指定インデックスのセル取得</h2><div class=\"text\">行と列のインデックスからデータベースのセル情報を取得します。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::GetCellFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li><li>第2引数 [int dbIndex]: データベースのインデックス</li><li>第3引数 [int subDB]: サブデータベースのインデックス</li><li>第4引数 [int rowIndex]: 行インデックス</li><li>第5引数 [int columnIndex]: 列インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CDatabase::CDBCell*: セルデータのインスタンス</div></div>";
		case "CDatabase:InitDBType": return "<h2>指定種別のデータベース初期化</h2><div class=\"text\">指定した種別のデータベースをすべて初期化します。<br>これは可変データベースとユーザーデータベースでのみ有効です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::InitDBType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:InitDB": return "<h2>DB初期化</h2><div class=\"text\">指定したデータベースを初期化します。<br>これは可変データベースとユーザーデータベースでのみ有効です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::InitDB</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li><li>第2引数 [int dbIndex]: データベースのインデックス</li><li>第3引数 [int subDB]: サブデータベースのインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:InitRow": return "<h2>行初期化</h2><div class=\"text\">指定したデータベースの指定ID行を初期化します。<br>これは可変データベースとユーザーデータベースでのみ有効です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::InitRow</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li><li>第2引数 [int dbIndex]: データベースのインデックス</li><li>第3引数 [int subDB]: サブデータベースのインデックス</li><li>第4引数 [int rowID]: ID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:InitCell": return "<h2>指定IDのセル初期化</h2><div class=\"text\">指定したデータベースの指定セルを初期化します。<br>これは可変データベースとユーザーデータベースでのみ有効です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::InitCell</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li><li>第2引数 [int dbIndex]: データベースのインデックス</li><li>第3引数 [int subDB]: サブデータベースのインデックス</li><li>第4引数 [int rowID]: ID</li><li>第5引数 [string columnName]: 列名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CDatabase:InitCellFromIndex": return "<h2>指定インデックスのセル初期化</h2><div class=\"text\">指定したデータベースの指定セルを初期化します。<br>これは可変データベースとユーザーデータベースでのみ有効です。<hr><h3>定義位置</h3><div class=\"text\">CDatabase::InitCellFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbType]: データベース種別</li><li>第2引数 [int dbIndex]: データベースのインデックス</li><li>第3引数 [int subDB]: サブデータベースのインデックス</li><li>第4引数 [int rowIndex]: 行インデックス</li><li>第5引数 [int columnIndex]: 列インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterialBase": return "<h2>素材基底クラス</h2><div class=\"text\">各種素材クラスの抽象クラスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterialBase</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck,Sqrat::NoConstructor</div></div>";
		case "CMaterial:CMaterialGraphics": return "<h2>グラフィック素材管理クラス</h2><div class=\"text\">グラフィック/動画像素材を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CMaterialBase</div></div>";
		case "CMaterial:CMaterialGraphics:Add": return "<h2>追加</h2><div class=\"text\">グラフィック/動画像素材を読み込みます。<br>戻り値のハンドルは削除するまで必要ですので必ず変数などで保管して下さい。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialGraphics::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">int: ハンドル</div></div>";
		case "CMaterial:CMaterialGraphics:Delete": return "<h2>削除</h2><div class=\"text\">グラフィック/動画像素材を破棄します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialGraphics::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialGraphics:Clear": return "<h2>全削除</h2><div class=\"text\">すべてのグラフィック/動画像素材を破棄します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialGraphics::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialGraphics:IconSize": return "<h2>アイコンサイズ</h2><div class=\"text\">システムDBで設定されたアイコンのサイズです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialGraphics::IconSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CMaterial:CMaterialGraphics:IconGraphicHandle": return "<h2>アイコングラフィックハンドル</h2><div class=\"text\">システムDBで設定されたアイコングラフィックのハンドルです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialGraphics::IconGraphicHandle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CMaterial:CMaterialSound": return "<h2>サウンド素材管理クラス</h2><div class=\"text\">サウンド素材を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CMaterialBase</div></div>";
		case "CMaterial:CMaterialSound:StandardVolume": return "<h2>標準音量</h2><div class=\"text\">サウンド再生時に音量をマイナス指定にしたときに設定される既定の音量です。<br>初期設定は最大音量です。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::StandardVolume</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CMaterial:CMaterialSound:Add": return "<h2>追加</h2><div class=\"text\">サウンド素材を読み込みます。<br>戻り値のハンドルは削除するまで必要ですので必ず変数などで保管して下さい。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">int: ハンドル</div></div>";
		case "CMaterial:CMaterialSound:Delete": return "<h2>削除</h2><div class=\"text\">サウンド素材を破棄します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:Clear": return "<h2>全削除</h2><div class=\"text\">すべてのサウンド素材を破棄します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:Play": return "<h2>再生</h2><div class=\"text\">指定したサウンドを再生します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::Play</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li><li>第2引数 [int playType]: 再生方法</li><li>第3引数 [int volume = 255]: 音量（0～255）</li><li>第4引数 [int pitchRate = 0]: 音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）</li><li>第5引数 [int panPot = 0]: 左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）</li><li>第6引数 [double fadeTime = 0.0F]: フェード秒数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:PlayOnce": return "<h2>使い捨て再生</h2><div class=\"text\">指定したサウンドを再生し、再生後に自動で破棄します。<br>破棄されたサウンドは二度と再生できなくなります。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::PlayOnce</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li><li>第2引数 [int playType]: 再生方法</li><li>第3引数 [int volume = 255]: 音量（0～255）</li><li>第4引数 [int pitchRate = 0]: 音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）</li><li>第5引数 [int panPot = 0]: 左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:Stop": return "<h2>停止</h2><div class=\"text\">指定したサウンドの再生を停止します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::Stop</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li><li>第2引数 [double fadeTime = 0.0F]: フェード秒数</li><li>第3引数 [bool afterDelete = false]: 停止後に破棄するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:StopAll": return "<h2>すべて停止</h2><div class=\"text\">すべてのサウンドの再生を停止します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::StopAll</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [double fadeTime = 0.0F]: フェード秒数</li><li>第2引数 [bool afterDelete = false]: 停止後に破棄するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:Pause": return "<h2>一時停止</h2><div class=\"text\">指定したサウンドの再生を一時停止します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::Pause</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li><li>第2引数 [double fadeTime = 0.0F]: フェード秒数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:Resume": return "<h2>再開</h2><div class=\"text\">指定したサウンドの再生を再開します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::Resume</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li><li>第2引数 [bool loopMode = false]: ループ再生するかどうか</li><li>第3引数 [double fadeTime = 0.0F]: フェード秒数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialSound:CheckPlayStatus": return "<h2>再生状態検証</h2><div class=\"text\">指定したサウンドの再生状態を検証します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialSound::CheckPlayStatus</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 再生状態</div></div>";
		case "CMaterial:CMaterialFont": return "<h2>フォント素材管理クラス</h2><div class=\"text\">フォント素材を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialFont</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CMaterialBase</div></div>";
		case "CMaterial:CMaterialFont:Add": return "<h2>追加</h2><div class=\"text\">フォントを追加します。<br>戻り値のハンドルは削除するまで必要ですので必ず変数などで保管して下さい。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialFont::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dbID]: フォントDB上のID</li><li>第2引数 [string fontName]: フォント名</li><li>第3引数 [string fileName]: フォントファイル名</li><li>第4引数 [int size]: 大きさ</li><li>第5引数 [int thick]: 太さ</li><li>第6引数 [int lineSpace]: 行間</li><li>第7引数 [int space]: 文字間</li><li>第8引数 [int type]: 描画方法</li><li>第9引数 [int edgeColor]: 縁色</li></ul></div><h3>戻り値</h3><div class=\"text\">int: ハンドル</div></div>";
		case "CMaterial:CMaterialFont:Delete": return "<h2>削除</h2><div class=\"text\">フォントを削除します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialFont::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int hdl]: ハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:CMaterialFont:Clear": return "<h2>全削除</h2><div class=\"text\">すべてのフォントを削除します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::CMaterialFont::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial": return "<h2>素材管理クラス</h2><div class=\"text\">各種素材を統括管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CMaterial:Clear": return "<h2>全素材初期化</h2><div class=\"text\">現在読み込まれているすべての素材を削除します。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMaterial:Fonts": return "<h2>フォント素材MGR</h2><div class=\"text\">フォント素材管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::Fonts</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMaterialFont (読み取り専用)</div></div>";
		case "CMaterial:Graphics": return "<h2>グラフィック素材MGR</h2><div class=\"text\">グラフィック素材管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::Graphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMaterialGraphics (読み取り専用)</div></div>";
		case "CMaterial:Sounds": return "<h2>サウンド素材MGR</h2><div class=\"text\">サウンド素材管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CMaterial::Sounds</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMaterialSound (読み取り専用)</div></div>";
		case "CSceneBase": return "<h2>シーン基底クラス</h2><div class=\"text\">各種シーンの抽象クラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck,Sqrat::NoConstructor</div></div>";
		case "CSceneBase:SubSceneID": return "<h2>サブシーンID</h2><div class=\"text\">サブシーンに移行しているときはそのIDが、メインシーン単体で動作しているときは -1 が格納されています。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::SubSceneID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneBase:BGM": return "<h2>BGM</h2><div class=\"text\">シーンのBGMオブジェクトです。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::BGM</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSoundData (読み取り専用)</div></div>";
		case "CSceneBase:BeforeBGMFileName": return "<h2>前回のBGMファイル名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::BeforeBGMFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CSceneBase:PlayBGM": return "<h2>BGM再生</h2><div class=\"text\">シーンBGMを再生します。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::PlayBGM</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li><li>第2引数 [int volume]: 音量（0～255）</li><li>第3引数 [int pitch]: 音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）</li><li>第4引数 [int pan]: 左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneBase:BGS": return "<h2>BGS</h2><div class=\"text\">シーンのBGSオブジェクトです。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::BGS</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSoundData (読み取り専用)</div></div>";
		case "CSceneBase:BeforeBGSFileName": return "<h2>前回のBGSファイル名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::BeforeBGSFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CSceneBase:PlayBGS": return "<h2>BGS再生</h2><div class=\"text\">シーンBGSを再生します。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::PlayBGS</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li><li>第2引数 [int volume]: 音量（0～255）</li><li>第3引数 [int pitch]: 音程/最小=-240:１オクターブ下、最大=+240:１オクターブ上（ただし、MIDI以外のサウンドは適用されない）</li><li>第4引数 [int pan]: 左右位置/最小=-255:左、最大=+255:右（ただし、MIDIは適用されない）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneBase:GetName": return "<h2>シーン名取得</h2><div class=\"text\">シーンの名前を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneBase::GetName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: シーン名</div></div>";
		case "CSceneTitle": return "<h2>タイトルシーンクラス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneTitle</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CSceneBase</div></div>";
		case "CSceneMap:CMapData:CEventMoveTask": return "<h2>イベント移動指示内容クラス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CEventMoveTask</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSceneMap:CMapData:CEventMoveTask:TaskType": return "<h2>指示種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CEventMoveTask::TaskType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CEventMoveTask:OptionInteger": return "<h2>オプション/整数値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CEventMoveTask::OptionInteger</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CEventMoveTask:OptionString": return "<h2>オプション/文字列値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CEventMoveTask::OptionString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CSceneMap:CMapData:CMapObjectData": return "<h2>マップオブジェクトクラス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:Position": return "<h2>マップ上の座標</h2><div class=\"text\">このオブジェクトが位置しているタイル単位の座標です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::Position</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:PositionOnPixel": return "<h2>画面上のピクセル座標</h2><div class=\"text\">描画される画面上の位置を示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::PositionOnPixel</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:MoveCounter": return "<h2>移動カウンター</h2><div class=\"text\">移動中に変動するオフセットです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::MoveCounter</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:Hide": return "<h2>非表示かどうか</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::Hide</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:ForbiddenAutoMove": return "<h2>移動カウンター自動処理の禁止フラグ</h2><div class=\"text\">移動カウンターを自動で原点に戻す処理を禁止するためのフラグです。<br>このフラグがTrueのとき、移動カウンターは固定されるようになり、移動中ではないとみなされます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::ForbiddenAutoMove</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:MoveWaitTimer": return "<h2>移動待機カウンター</h2><div class=\"text\">日常移動/臨時移動における待機時間を示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::MoveWaitTimer</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:DoExtraMove": return "<h2>臨時移動実行</h2><div class=\"text\">このマップオブジェクトに設定された臨時移動の指示内容に従って移動を開始します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::DoExtraMove</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool waitMode]: 移動が終わるまで待つかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:AutoSetMoveCounter": return "<h2>指定方向への移動準備</h2><div class=\"text\">指定した方向に向かって移動を開始させるために移動カウンターをセットします。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::AutoSetMoveCounter</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction4]: 進行方向</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:IsMoving": return "<h2>移動中かどうか</h2><div class=\"text\">このマップオブジェクトが現在移動している途中であるかどうかを示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::IsMoving</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:SetExtraMove": return "<h2>臨時移動指示</h2><div class=\"text\">このマップオブジェクトの移動内容を指示します。<br>戻り値を使うことで連続的な記述が可能です。<br>指示の最後に実行メソッドを呼び出して下さい。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::SetExtraMove</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int type]: 指示内容</li><li>第2引数 [int par1]: オプション整数値</li><li>第3引数 [string par2]: オプション文字列値</li></ul></div><h3>戻り値</h3><div class=\"text\">CMapObjectData*: 自身のインスタンス</div></div>";
		case "CSceneMap:CMapData:CMapObjectData:ApplyMapLoopPosition": return "<h2>範囲外座標の補正</h2><div class=\"text\">このマップオブジェクトがマップの範囲外に出ているとき、マップのループ設定に従って補正します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData::ApplyMapLoopPosition</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData": return "<h2>マップキャラクタークラス</h2><div class=\"text\">マップオブジェクトに関連付けられたキャラクターに関するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:MoveSpeed": return "<h2>移動速度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::MoveSpeed</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:AnimID": return "<h2>アニメーション番号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::AnimID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:EnabledStopAnim": return "<h2>静止アニメーション有無</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::EnabledStopAnim</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:EnabledWalkAnim": return "<h2>歩行アニメーション有無</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::EnabledWalkAnim</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:NoHit": return "<h2>すり抜け有無</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::NoHit</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:FixedDirection": return "<h2>向き固定有無</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::FixedDirection</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:OneCharSize": return "<h2>キャラクターサイズ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::OneCharSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">CSize</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:Graphics": return "<h2>グラフィック名</h2><div class=\"text\">タイルセットの場合は [X:Y] の形式で示されます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::Graphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:Direction": return "<h2>方向</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::Direction</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:GraphHandle": return "<h2>グラフィックハンドル</h2><div class=\"text\">描画に必要なハンドルです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::GraphHandle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapCharObjectData:LoadGraphics": return "<h2>グラフィック読込</h2><div class=\"text\">タイルパレットの位置を示す場合は [X:Y] の形式で示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData::LoadGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapPlayer": return "<h2>プレイヤークラス</h2><div class=\"text\">マップ上のプレイヤーに関するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSceneMap:CMapData:CMapPlayer:MapObject": return "<h2>マップオブジェクトMGR</h2><div class=\"text\">マップ上の位置に関する情報を持つインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapPlayer::MapObject</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMapObjectData (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapPlayer:CharData": return "<h2>マップキャラクターMGR</h2><div class=\"text\">プレイヤーキャラに関する情報を持つインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapPlayer::CharData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMapCharObjectData (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData": return "<h2>イベントページクラス</h2><div class=\"text\">イベントの単一ページ情報を格納するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CSceneMap::CMapData::CMapCharObjectData</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:TriggerType": return "<h2>起動条件</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::TriggerType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:MoveType": return "<h2>日常移動</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::MoveType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:MoveFrequency": return "<h2>移動頻度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::MoveFrequency</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:DrawPriority": return "<h2>描画優先度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::DrawPriority</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:TilePalletPosition": return "<h2>タイルパレット位置</h2><div class=\"text\">現在のグラフィックがタイルパレットである場合は、そのパレット位置を示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::TilePalletPosition</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">CPoint</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:IsTilesetGraphics": return "<h2>タイルグラフィックかどうか</h2><div class=\"text\">現在のグラフィックがタイルパレットを用いているかどうかを示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::IsTilesetGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:HitRect": return "<h2>拡張接触範囲</h2><div class=\"text\">自身の座標を起点とした接触範囲の拡張サイズです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::HitRect</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSize (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CMapEventPageData:LoadGraphics": return "<h2>グラフィック読込</h2><div class=\"text\">グラフィックを変更します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CMapEventPageData::LoadGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名もしくはタイルパレット位置 (X:Y の形式)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapEventData": return "<h2>イベントクラス</h2><div class=\"text\">イベント単体のクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CSceneMap::CMapData::CMapObjectData</div></div>";
		case "CSceneMap:CMapData:CMapEventData:IsDummy": return "<h2>ダミーイベントかどうか</h2><div class=\"text\">スクリプトを持たない表示専用のイベントかどうかを示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::IsDummy</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapEventData:VisibleID": return "<h2>可視ID</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::VisibleID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:CMapEventData:SelfValues": return "<h2>個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::SelfValues</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSelfValueData (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapEventData:SetPageIndex": return "<h2>ページ番号設定</h2><div class=\"text\">有効なイベントのページを一時的に切り替えます。<br>次のフレームでイベントページ判定が行われて元に戻されます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::SetPageIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int val]: イベントページインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapEventData:GetPageIndex": return "<h2>ページ番号取得</h2><div class=\"text\">現在のイベントページのインデックスを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::GetPageIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: イベントページインデックス</div></div>";
		case "CSceneMap:CMapData:CMapEventData:GetPageCount": return "<h2>ページ総数取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::GetPageCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: イベントページ総数</div></div>";
		case "CSceneMap:CMapData:CMapEventData:AddPage": return "<h2>ページ追加</h2><div class=\"text\">このイベントにページを追加します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::AddPage</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [CMapEventPageData pg]: イベントページオブジェクト</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapEventData:AddMoveTask": return "<h2>日常移動指示</h2><div class=\"text\">イベント日常移動の移動内容を指示します。<br>戻り値を使って連続的な記述が可能です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::AddMoveTask</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int type]: 指示内容</li><li>第2引数 [int par1]: オプション整数値</li><li>第3引数 [string par2]: オプション文字列値</li></ul></div><h3>戻り値</h3><div class=\"text\">CMapEventData*: 自身のインスタンス</div></div>";
		case "CSceneMap:CMapData:CMapEventData:SetDirection4": return "<h2>4方向設定</h2><div class=\"text\">イベントの向きを設定します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::SetDirection4</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int dir4]: ４方向</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapEventData:SetDirection4ToPlayer": return "<h2>プレイヤーを向く</h2><div class=\"text\">プレイヤーキャラの方向を向かせます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::SetDirection4ToPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapEventData:SetDirection4AgainstPlayer": return "<h2>プレイヤーから背ける</h2><div class=\"text\">プレイヤーキャラに背を向けます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::SetDirection4AgainstPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:CMapEventData:GetDirection4ToPlayer": return "<h2>プレイヤー方向を取得</h2><div class=\"text\">このイベントからプレイヤーキャラへの方向を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::GetDirection4ToPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: プレイヤーに対する向き</div></div>";
		case "CSceneMap:CMapData:CMapEventData:RouteLock": return "<h2>経路固定しているかどうか</h2><div class=\"text\">日常移動の経路を固定する設定にしているかどうかを示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::RouteLock</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CMapEventData:CurrentPage": return "<h2>現在のページ</h2><div class=\"text\">このイベントで現在有効なページです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CMapEventData::CurrentPage</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMapEventPageData (読み取り専用)</div></div>";
		case "CSceneMap:CMapData": return "<h2>マップデータクラス</h2><div class=\"text\">マップに関する情報を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSceneMap:CMapData:TileSize": return "<h2>タイルサイズ</h2><div class=\"text\">システムDBで設定されたタイルサイズです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::TileSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:ShadowTransparent": return "<h2>影層透明度</h2><div class=\"text\">システムDBで設定された影層の透明度です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::ShadowTransparent</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:FogTransparent": return "<h2>フォグ透明度</h2><div class=\"text\">システムDBで設定されたフォグの透明度です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::FogTransparent</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:MapPixelOffset": return "<h2>マップオフセット</h2><div class=\"text\">マップ画面全体のピクセル単位の位置補正値です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::MapPixelOffset</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:TilePallet": return "<h2>タイルパレット</h2><div class=\"text\">現在有効なタイルパレットのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::TilePallet</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDatabase::CDBTileset::CTilePallet (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:GUID": return "<h2>マップID</h2><div class=\"text\">マップに対して自動で付加される一意のIDです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::GUID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CSceneMap:CMapData:MapSize": return "<h2>マップサイズ</h2><div class=\"text\">マップのタイル単位のサイズです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::MapSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSize (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:MapLoopOption": return "<h2>マップループ方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::MapLoopOption</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:TilesetID": return "<h2>タイルセットID</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::TilesetID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:MoveSpeed": return "<h2>プレイヤー標準移動速度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::MoveSpeed</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:BaseMapFileName": return "<h2>カーボン元のマップファイル名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::BaseMapFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CurrentMapName": return "<h2>現在のマップ名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CurrentMapName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CSceneMap:CMapData:CurrentMapFileName": return "<h2>現在のマップファイル名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CurrentMapFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:BackHandle": return "<h2>遠景グラフィックハンドル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::BackHandle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CurrentMapBackFileName": return "<h2>現在の遠景ファイル名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CurrentMapBackFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:BackScrollType": return "<h2>遠景スクロール方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::BackScrollType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:BackScrollSpeed": return "<h2>遠景スクロール速度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::BackScrollSpeed</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:FogHandle": return "<h2>フォググラフィックハンドル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::FogHandle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CurrentFogFileName": return "<h2>フォグファイル名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CurrentFogFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:FogScrollType": return "<h2>フォグスクロール方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::FogScrollType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:FogScrollSpeed": return "<h2>フォグスクロール速度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::FogScrollSpeed</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:FogBlend": return "<h2>フォグ合成方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::FogBlend</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:Units": return "<h2>ユニットIDリスト</h2><div class=\"text\">整数型の配列です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::Units</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CIntegerArray (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:EncounterRate": return "<h2>エンカウント係数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EncounterRate</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:BattleBackFileName": return "<h2>戦闘背景ファイル名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::BattleBackFileName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:Player": return "<h2>プレイヤー</h2><div class=\"text\">プレイヤーオブジェクトのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::Player</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMapPlayer (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:AnimCounter": return "<h2>アニメーションカウンター</h2><div class=\"text\">アニメーション用の累積フレームカウンターです。<br>この数値をフレーム間隔数で割ることでアニメーション番号を求めることができます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::AnimCounter</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSceneMap:CMapData:LoadMap": return "<h2>マップ読込</h2><div class=\"text\">指定したマップを読み込みます。<br>演出を行わない場合、即座に画面に反映されます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::LoadMap</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li><li>第2引数 [bool exceptEV]: イベントスクリプトを呼び出さないフラグ</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:AfterLoadMap": return "<h2>マップ移動後の共通処理</h2><div class=\"text\">マップBGM/BGSの再生や、イベントスクリプトの呼び出し等を行います。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::AfterLoadMap</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:GetTile": return "<h2>タイルパレット位置取得</h2><div class=\"text\">マップ上の指定した座標の、タイルパレット上の座標を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::GetTile</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int layer]: レイヤーインデックス</li><li>第2引数 [int x]: マップX座標</li><li>第3引数 [int y]: マップY座標</li></ul></div><h3>戻り値</h3><div class=\"text\">CPoint: タイルパレット上の位置</div></div>";
		case "CSceneMap:CMapData:SetTile": return "<h2>タイルパレット位置設定</h2><div class=\"text\">マップ上の指定した座標の、タイルパレット上の座標を設定します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::SetTile</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int layer]: レイヤーインデックス</li><li>第2引数 [int x]: マップX座標</li><li>第3引数 [int y]: マップY座標</li><li>第4引数 [int tilex]: 設定後のタイルパレットX座標</li><li>第5引数 [int tiley]: 設定後のタイルパレットY座標</li><li>第6引数 [bool absolute]: オートタイルを修正するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:GetQuarterTile": return "<h2>タイル1/4取得</h2><div class=\"text\">マップ上の指定した座標の、1/4単位のタイル情報を取得します。<br>影層はTRUE/FALSE、その他のレイヤーはオートタイルのパターン番号です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::GetQuarterTile</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int layer]: レイヤーインデックス</li><li>第2引数 [int x]: マップX座標</li><li>第3引数 [int y]: マップY座標</li><li>第4引数 [int q]: 1/4タイル位置</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 1/4タイル位置</div></div>";
		case "CSceneMap:CMapData:SetQuarterTile": return "<h2>タイル1/4設定</h2><div class=\"text\">マップ上の指定した座標の、1/4単位のタイル情報を設定します。<br>影層はTRUE/FALSE、その他のレイヤーはオートタイルのパターン番号です。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::SetQuarterTile</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int layer]: レイヤーインデックス</li><li>第2引数 [int x]: マップX座標</li><li>第3引数 [int y]: マップY座標</li><li>第4引数 [int q]: 1/4タイル位置</li><li>第5引数 [int val]: 設定値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:IsWalkableTile": return "<h2>歩行可否判定</h2><div class=\"text\">マップ上の指定した座標が歩けるかどうかを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::IsWalkableTile</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: マップX座標</li><li>第2引数 [int y]: マップY座標</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 歩けるタイルである場合はTrue</div></div>";
		case "CSceneMap:CMapData:CheckTileGroupNum": return "<h2>グループ番号検証</h2><div class=\"text\">タイルセットDBで設定したグループ番号情報に基づいて、指定したタイルに該当番号が設定されているかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CheckTileGroupNum</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: マップX座標</li><li>第2引数 [int y]: マップY座標</li><li>第3引数 [int groupNum]: 検証するグループ番号</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 見つかったレイヤーのインデックス。<br>見つからなかった場合は -1 が返されます。<br></div></div>";
		case "CSceneMap:CMapData:GetTileGroupNum": return "<h2>グループ番号取得</h2><div class=\"text\">指定したタイルのグループ番号を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::GetTileGroupNum</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int layer]: レイヤーインデックス</li><li>第2引数 [int x]: マップX座標</li><li>第3引数 [int y]: マップY座標</li></ul></div><h3>戻り値</h3><div class=\"text\">int: タイルセットDBで設定されたグループ番号</div></div>";
		case "CSceneMap:CMapData:DrawMap": return "<h2>マップ描画</h2><div class=\"text\">現在のマップを描画します。<br>これには遠景やフォグも含まれます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::DrawMap</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int tileAnimLoopFrame]: タイルアニメーションが一周するのに要するフレーム数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:LoadBack": return "<h2>遠景読込</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::LoadBack</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:DrawBack": return "<h2>遠景描画</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::DrawBack</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:LoadFog": return "<h2>フォグ読込</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::LoadFog</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:DrawFog": return "<h2>フォグ描画</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::DrawFog</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:EVCount": return "<h2>イベント総数取得</h2><div class=\"text\">現在のマップに配置されているイベントの数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EVCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: イベント数</div></div>";
		case "CSceneMap:CMapData:EVReservedCount": return "<h2>イベント実行予約数取得</h2><div class=\"text\">次のフレームで実行するように予約されているイベントの数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EVReservedCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: イベントの起動が予約されている数</div></div>";
		case "CSceneMap:CMapData:GetEVFixedID": return "<h2>イベントID取得</h2><div class=\"text\">ユーザーが自由に設定できる可視IDから、FixedIDを取得します。<br>可視IDが重複している場合の動作は不定となります。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::GetEVFixedID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int visibleID]: イベントの可視ID</li></ul></div><h3>戻り値</h3><div class=\"text\">int: イベントのFixedID。<br>該当IDが存在しない場合は -1 が返されます。<br></div></div>";
		case "CSceneMap:CMapData:EVClear": return "<h2>イベント全削除</h2><div class=\"text\">すべてのイベントを削除します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EVClear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:EVDeleteFromID": return "<h2>指定IDのイベント削除</h2><div class=\"text\">指定したIDのイベントを削除します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EVDeleteFromID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: イベントID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:EVExists": return "<h2>イベント存在検証</h2><div class=\"text\">指定したIDのイベントが存在しているかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EVExists</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: イベントID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 存在している場合はTrue</div></div>";
		case "CSceneMap:CMapData:EVGetData": return "<h2>イベントデータ取得</h2><div class=\"text\">指定したIDのイベントデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EVGetData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: イベントID</li></ul></div><h3>戻り値</h3><div class=\"text\">CMapEventData*: イベント単体データのインスタンス</div></div>";
		case "CSceneMap:CMapData:EVGetDataFromIndex": return "<h2>インデックスからイベントデータ取得</h2><div class=\"text\">指定したインデックスにあたるイベントデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::EVGetDataFromIndex</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int idx]: イベントリスト上のインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CMapEventData*: イベント単体データのインスタンス</div></div>";
		case "CSceneMap:CMapData:ReserveEV": return "<h2>イベント実行予約</h2><div class=\"text\">指定したIDのイベントを次のフレームで実行する予約を行います。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::ReserveEV</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int EVID]: イベントID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:RunEV": return "<h2>イベントスクリプト呼出</h2><div class=\"text\">指定したIDの指定した種別のスクリプトを呼び出します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::RunEV</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int EVID]: イベントID</li><li>第2引数 [int type]: イベントスクリプト種別</li><li>第3引数 [bool pushRunningStack]: 実行中のイベントとして登録するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: </div></div>";
		case "CSceneMap:CMapData:SetEV": return "<h2>イベント配置</h2><div class=\"text\">ページを持たない空のイベントを生成します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::SetEV</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int EVID]: イベントID</li><li>第2引数 [int visibleID]: 可視ID</li><li>第3引数 [int x]: マップX座標</li><li>第4引数 [int y]: マップY座標</li><li>第5引数 [string name]: イベント名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:AddEVPage": return "<h2>イベントページ追加</h2><div class=\"text\">指定したIDのイベントにページを追加します。<br>このメソッドはエディターシステム向けのため、ユーザーが呼び出す必要はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::AddEVPage</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int EVID]: イベントID</li><li>第2引数 [string param]: パラメーター</li><li>第3引数 [string graph]: グラフィック名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:SetDummyEV": return "<h2>ダミーイベント配置</h2><div class=\"text\">スクリプトを持たない表示専用のイベントを追加します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::SetDummyEV</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int x]: マップX座標</li><li>第2引数 [int y]: マップY座標</li><li>第3引数 [string graph]: グラフィック名</li><li>第4引数 [int direction4]: ４方向</li><li>第5引数 [int animID]: アニメーション番号</li><li>第6引数 [int priority]: 描画優先度</li><li>第7引数 [bool enabledStopAnim]: 静止アニメーション有無</li><li>第8引数 [bool enabledWalkAnim]: 歩行アニメーション有無</li><li>第9引数 [bool fixedDirection]: 向き固定有無</li></ul></div><h3>戻り値</h3><div class=\"text\">int: イベントID</div></div>";
		case "CSceneMap:CMapData:IsEVRunning": return "<h2>イベントが実行中かどうか</h2><div class=\"text\">何らかのイベントの実行内容を処理しているかどうかを示します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::IsEVRunning</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:ClearDummyEVs": return "<h2>ダミーイベント全削除</h2><div class=\"text\">スクリプトを持たない表示専用のイベントをすべて削除します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::ClearDummyEVs</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CMapData:ThisEVData": return "<h2>実行中イベント</h2><div class=\"text\">現在実行しているイベントのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::ThisEVData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMapEventData (読み取り専用)</div></div>";
		case "CSceneMap:CMapData:CheckBeforeMove": return "<h2>障害物検証</h2><div class=\"text\">指定した方向にマップオブジェクトが進めるかどうかを検証します。<br>すり抜けが有効であるときは常に進めます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CheckBeforeMove</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int EVID]: 主体イベントID (プレイヤーは-1)</li><li>第2引数 [int x]: マップ現在位置X座標</li><li>第3引数 [int y]: マップ現在位置Y座標</li><li>第4引数 [int direction4]: ４方向</li><li>第5引数 [bool EVTrigger]: 接触イベントの起動判定を行うかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 指定した方向に進めるかどうか</div></div>";
		case "CSceneMap:CMapData:CheckOverlapTriggerEV": return "<h2>一致トリガーイベント起動判定</h2><div class=\"text\">指定したイベントの現在位置でイベントが起動するかどうかを検証します。<br>どちらかに当たり判定がなく、起動条件が「接触」に設定されているものが有効となります。<br>起動する場合は次のフレームで実行する予約が行われます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CheckOverlapTriggerEV</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int EVID]: 主体イベントID (プレイヤーは-1)</li><li>第2引数 [int x]: マップ現在位置X座標</li><li>第3引数 [int y]: マップ現在位置Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: この処理でイベントの起動が予約されたかどうか</div></div>";
		case "CSceneMap:CMapData:CheckPressEnterTriggerEV": return "<h2>決定キートリガーイベント起動判定</h2><div class=\"text\">プレイヤーの現在位置で決定キーを押したときにイベントが起動するかどうかを検証します。<br>起動する場合は次のフレームで実行する予約が行われます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CMapData::CheckPressEnterTriggerEV</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: この処理でイベントの起動が予約されたかどうか</div></div>";
		case "CSceneMap:CShopData": return "<h2>ショップデータクラス</h2><div class=\"text\">ショップに関する情報を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSceneMap:CShopData:Add": return "<h2>商品追加</h2><div class=\"text\">商品リストにアイテムを追加します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int id]: アイテムID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CShopData:Clear": return "<h2>商品全削除</h2><div class=\"text\">商品リストをクリアします。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CShopData:GetCount": return "<h2>商品数取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData::GetCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 登録されている商品数</div></div>";
		case "CSceneMap:CShopData:Get": return "<h2>商品取得</h2><div class=\"text\">商品リスト上の指定したインデックスからID、名前、価格を持ったデータを取得します。<br>これ以上の情報を得たい場合はIDからアイテムDBにアクセスして下さい。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: 商品リスト上のインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CIDValueData: 商品データ</div></div>";
		case "CSceneMap:CShopData:SortItemsByVisibleID": return "<h2>商品並び替え/可視ID順</h2><div class=\"text\">商品リストを並び替えます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData::SortItemsByVisibleID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool reverse]: 逆順にするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CShopData:SortItemsByName": return "<h2>商品並び替え/名前順</h2><div class=\"text\">商品リストを並び替えます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData::SortItemsByName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool reverse]: 逆順にするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:CShopData:SortItemsByPrice": return "<h2>商品並び替え/価格順</h2><div class=\"text\">商品リストを並び替えます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::CShopData::SortItemsByPrice</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool reverse]: 逆順にするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap": return "<h2>マップシーンクラス</h2><div class=\"text\">マップシーンを管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CSceneBase</div></div>";
		case "CSceneMap:MapData": return "<h2>マップMGR</h2><div class=\"text\">マップ情報のインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::MapData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMapData (読み取り専用)</div></div>";
		case "CSceneMap:ShopData": return "<h2>ショップMGR</h2><div class=\"text\">ショップ情報のインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::ShopData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CShopData (読み取り専用)</div></div>";
		case "CSceneMap:ShowMessage": return "<h2>汎用/会話メッセージ</h2><div class=\"text\">会話メッセージを表示します。<br>実際の処理内容はスクリプトのイベントハンドラーで実装されます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::ShowMessage</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int faceID]: フェイスID</li><li>第2引数 [string speakerName]: 話者名</li><li>第3引数 [string msg]: メッセージ内容</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:ChangeMap": return "<h2>汎用/マップ移動</h2><div class=\"text\">画面演出付きでマップを移動させます。<br>実際の処理内容はスクリプトのイベントハンドラーで実装されます。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::ChangeMap</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li><li>第2引数 [int x]: 移動先X座標</li><li>第3引数 [int y]: 移動先Y座標</li><li>第4引数 [int direction4]: ４方向</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSceneMap:TurnLeft4": return "<h2>左４方向を取得</h2><div class=\"text\">指定した方向から相対的に左を向いた方向を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::TurnLeft4</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction4]: 起点４方向</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 左に向いた４方向</div></div>";
		case "CSceneMap:TurnLeft8": return "<h2>左８方向を取得</h2><div class=\"text\">指定した方向から相対的に左を向いた方向を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::TurnLeft8</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction8]: 起点８方向</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 左に向いた８方向</div></div>";
		case "CSceneMap:TurnRight4": return "<h2>右４方向を取得</h2><div class=\"text\">指定した方向から相対的に右を向いた方向を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::TurnRight4</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction4]: 起点４方向</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 右に向いた４方向</div></div>";
		case "CSceneMap:TurnRight8": return "<h2>右８方向を取得</h2><div class=\"text\">指定した方向から相対的に右を向いた方向を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::TurnRight8</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction8]: 起点４方向</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 右に向いた８方向</div></div>";
		case "CSceneMap:TurnHalf4": return "<h2>後方４方向を取得</h2><div class=\"text\">指定した方向から相対的に後ろを向いた方向を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::TurnHalf4</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction4]: 起点４方向</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 後ろに向いた４方向</div></div>";
		case "CSceneMap:TurnHalf8": return "<h2>後方８方向を取得</h2><div class=\"text\">指定した方向から相対的に後ろを向いた方向を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::TurnHalf8</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction8]: 起点８方向</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 後ろに向いた８方向</div></div>";
		case "CSceneMap:PointToDirection4": return "<h2>相対位置から４方向を取得</h2><div class=\"text\">原点を起点とした相対位置から対応する方向を取得します。<br>相対位置の大小は問いません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::PointToDirection4</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [const CPoint& pos]: 相対位置</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 対応する４方向</div></div>";
		case "CSceneMap:PointToDirection8": return "<h2>相対位置を８方向を取得</h2><div class=\"text\">原点を起点とした相対位置から対応する方向を取得します。<br>相対位置の大小は問いません。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::PointToDirection8</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [const CPoint& pos]: 相対位置</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 対応する８方向</div></div>";
		case "CSceneMap:Direction4ToPoint": return "<h2>４方向から一歩分の相対位置を取得</h2><div class=\"text\">指定した方向に一歩進んだ相対座標を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::Direction4ToPoint</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction4]: 進行４方向</li></ul></div><h3>戻り値</h3><div class=\"text\">CPoint: 一歩分の相対位置</div></div>";
		case "CSceneMap:Direction8ToPoint": return "<h2>８方向から一歩分の相対位置を取得</h2><div class=\"text\">指定した方向に一歩進んだ相対座標を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSceneMap::Direction8ToPoint</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int direction8]: 進行８方向</li></ul></div><h3>戻り値</h3><div class=\"text\">CPoint: 一歩分の相対位置</div></div>";
		case "CMultiThread:CThreadInfo": return "<h2>疑似スレッド単体クラス</h2><div class=\"text\">毎フレーム実行される関数情報を格納するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CNullCheck</div></div>";
		case "CMultiThread:CThreadInfo:Name": return "<h2>スレッド名</h2><div class=\"text\">任意に設定できるスレッド名です。<br>変更はできません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::Name</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CMultiThread:CThreadInfo:SQFuncName": return "<h2>スクリプト関数名</h2><div class=\"text\">スクリプトの関数名です。<br>変更はできません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::SQFuncName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CMultiThread:CThreadInfo:Suspended": return "<h2>停止中かどうか</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::Suspended</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CMultiThread:CThreadInfo:Protected": return "<h2>保護中かどうか</h2><div class=\"text\">有効であるとき、シーンを遷移しても破棄されません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::Protected</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CMultiThread:CThreadInfo:Handle": return "<h2>ハンドル</h2><div class=\"text\">一意の識別番号を示します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::Handle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CMultiThread:CThreadInfo:AddValueInteger": return "<h2>変数(整数型)を追加</h2><div class=\"text\">このスレッドが保有する新たな変数を登録します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::AddValueInteger</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 任意の変数名</li><li>第2引数 [int Value]: 初期値</li></ul></div><h3>戻り値</h3><div class=\"text\">CThreadInfo*: スレッドオブジェクトを再帰的に返します。<br></div></div>";
		case "CMultiThread:CThreadInfo:AddValueDecimal": return "<h2>変数(実数型)を追加</h2><div class=\"text\">このスレッドが保有する新たな変数を登録します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::AddValueDecimal</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 任意の変数名</li><li>第2引数 [double Value]: 初期値</li></ul></div><h3>戻り値</h3><div class=\"text\">CThreadInfo*: スレッドオブジェクトを再帰的に返します。<br></div></div>";
		case "CMultiThread:CThreadInfo:AddValueString": return "<h2>変数(文字列型)を追加</h2><div class=\"text\">このスレッドが保有する新たな変数を登録します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::AddValueString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 任意の変数名</li><li>第2引数 [string Value]: 初期値</li></ul></div><h3>戻り値</h3><div class=\"text\">CThreadInfo*: スレッドオブジェクトを再帰的に返します。<br></div></div>";
		case "CMultiThread:CThreadInfo:SetValueInteger": return "<h2>変数(整数型)値を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::SetValueInteger</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 変数名</li><li>第2引数 [int Value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMultiThread:CThreadInfo:SetValueDecimal": return "<h2>変数(実数型)値を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::SetValueDecimal</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 変数名</li><li>第2引数 [double Value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMultiThread:CThreadInfo:SetValueString": return "<h2>変数(文字列型)値を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::SetValueString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 変数名</li><li>第2引数 [string Value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMultiThread:CThreadInfo:GetValueInteger": return "<h2>変数(整数型)値を取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::GetValueInteger</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 変数名</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 値</div></div>";
		case "CMultiThread:CThreadInfo:GetValueDecimal": return "<h2>変数(実数型)値を取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::GetValueDecimal</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 変数名</li></ul></div><h3>戻り値</h3><div class=\"text\">double: 値</div></div>";
		case "CMultiThread:CThreadInfo:GetValueString": return "<h2>変数(文字列型)値を取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CThreadInfo::GetValueString</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: 変数名</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 値</div></div>";
		case "CMultiThread": return "<h2>疑似スレッド管理クラス</h2><div class=\"text\">毎フレーム実行される関数情報を統括管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CMultiThread:AddThread": return "<h2>スレッド追加</h2><div class=\"text\">スクリプト用の新規スレッドを追加します。<br>対象とする関数は既に読み込まれており、整数型の引数を一つ持ち、戻り値として true/false を返す必要があります。<br>引数にはこのスレッドのハンドルが渡されます。<br>戻り値が false のとき継続、true のときスレッド終了を意味します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::AddThread</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li><li>第2引数 [string funcName]: スクリプトの関数名 (整数型の引数を一つ持つ必要があります)</li><li>第3引数 [int enableSceneID]: 有効なシーンID</li><li>第4引数 [bool isProtected]: 保護状態にするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">CMultiThread::CThreadInfo*: 追加されたスレッドのオブジェクト</div></div>";
		case "CMultiThread:GetThreadCount": return "<h2>スレッド数取得</h2><div class=\"text\">現在登録されているスレッドの総数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::GetThreadCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: 現在登録されているスレッドの総数</div></div>";
		case "CMultiThread:CountThread": return "<h2>指定したスレッドを数える</h2><div class=\"text\">指定したスレッド名を持つスレッドの総数を数えます。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::CountThread</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li></ul></div><h3>戻り値</h3><div class=\"text\">int: ヒットした数</div></div>";
		case "CMultiThread:GetThread": return "<h2>スレッド取得</h2><div class=\"text\">スクリプト用のスレッド関数に引数として渡される識別番号を用いてスレッドのオブジェクトを取得します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::GetThread</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int handle]: 一意の識別番号</li></ul></div><h3>戻り値</h3><div class=\"text\">CThreadInfo*: スレッドのオブジェクト</div></div>";
		case "CMultiThread:Clear": return "<h2>すべて削除</h2><div class=\"text\">すべてのスレッドを削除します。<br>ただし、保護されているスレッドは除きます。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool LeaveCurrentScene]: 現在のシーンに該当するスレッドを残すかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMultiThread:DeleteThread": return "<h2>スレッド削除</h2><div class=\"text\">指定したスレッド名を持つスレッドを削除します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::DeleteThread</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMultiThread:SetSuspend": return "<h2>停止切替</h2><div class=\"text\">指定したスレッドを停止させます。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::SetSuspend</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li><li>第2引数 [bool IsSuspended]: 停止するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMultiThread:SetProtect": return "<h2>保護切替</h2><div class=\"text\">指定したスレッドを保護状態にします。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::SetProtect</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li><li>第2引数 [bool IsProtected]: 保護するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CMultiThread:GetSuspend": return "<h2>停止状態取得</h2><div class=\"text\">指定したスレッドが停止しているかどうかを取得します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::GetSuspend</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 停止しているかどうか</div></div>";
		case "CMultiThread:GetProtect": return "<h2>保護状態取得</h2><div class=\"text\">指定したスレッドが保護しているかどうかを取得します。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::GetProtect</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 保護されているかどうか</div></div>";
		case "CMultiThread:WaitForThread": return "<h2>スレッド終了待機</h2><div class=\"text\">指定したスレッドが終了するまで待機します。<br>スレッドが無限ループに陥ったときのために、必ず最大秒数を指定するようになっています。<hr><h3>定義位置</h3><div class=\"text\">CMultiThread::WaitForThread</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string name]: スレッド名</li><li>第2引数 [double MaxSec]: 最大秒数</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CFPS": return "<h2>FPS管理クラス</h2><div class=\"text\">フレームレートを管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CFPS</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CFPS:SkipFrameCount": return "<h2>フレームスキップ数</h2><div class=\"text\">画面更新をスキップするフレーム数です。<br>スペックの低いパソコンはこの数値を大きくすると改善できるかもしれません。<hr><h3>定義位置</h3><div class=\"text\">CFPS::SkipFrameCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CFPS:Update": return "<h2>画面更新</h2><div class=\"text\">FPSを維持しながら画面を更新します。<hr><h3>定義位置</h3><div class=\"text\">CFPS::Update</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "System:DXInterpolation": return "<h2>画像補間法</h2><div class=\"text\">画像を拡大・縮小したときの補間方法です。<hr><h3>定義位置</h3><div class=\"text\">System::DXInterpolation</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:DXInterpolation:Nearest": return "<h2>最近傍補間</h2><div class=\"text\">ニアレスト法。<hr><h3>定義位置</h3><div class=\"text\">System::DXInterpolation::Nearest</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:DXInterpolation:Bilinear": return "<h2>線形補間</h2><div class=\"text\">バイリニア法。<hr><h3>定義位置</h3><div class=\"text\">System::DXInterpolation::Bilinear</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:BlendMode": return "<h2>画像合成法</h2><div class=\"text\">画像を合成する方法です。<hr><h3>定義位置</h3><div class=\"text\">System::BlendMode</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:BlendMode:Alpha": return "<h2>アルファ</h2><div class=\"text\">アルファブレンド（透過ブレンド）。<hr><h3>定義位置</h3><div class=\"text\">System::BlendMode::Alpha</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:BlendMode:Add": return "<h2>加算</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::BlendMode::Add</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:BlendMode:Subtract": return "<h2>減算</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::BlendMode::Subtract</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:BlendMode:Multiply": return "<h2>乗算</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::BlendMode::Multiply</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:BlendMode:Invsrc": return "<h2>反対色</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::BlendMode::Invsrc</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBDefaultColumnIndices": return "<h2>DB既定列Index</h2><div class=\"text\">標準データベースの左から３列のインデックスです。<hr><h3>定義位置</h3><div class=\"text\">DB::DBDefaultColumnIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBDefaultColumnIndices:FixedID": return "<h2>FixedID</h2><div class=\"text\">ユーザーによって変更できない固定のIDです。<hr><h3>定義位置</h3><div class=\"text\">DB::DBDefaultColumnIndices::FixedID</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBDefaultColumnIndices:VisibleID": return "<h2>VisibleID</h2><div class=\"text\">ユーザーが自由に変更できるIDです。<br>これは通常、並び替えに用いられます。<hr><h3>定義位置</h3><div class=\"text\">DB::DBDefaultColumnIndices::VisibleID</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBDefaultColumnIndices:Name": return "<h2>名前</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBDefaultColumnIndices::Name</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBCurveDataIndices": return "<h2>DB曲線Index</h2><div class=\"text\">データベースで使われる曲線情報の順序です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBCurveDataIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBCurveDataIndices:IDName": return "<h2>ID/名前</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBCurveDataIndices::IDName</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBCurveDataIndices:Base": return "<h2>基底値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBCurveDataIndices::Base</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBCurveDataIndices:Coefficient": return "<h2>係数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBCurveDataIndices::Coefficient</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBCurveDataIndices:Index": return "<h2>指数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBCurveDataIndices::Index</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBCurveDataIndices:Count": return "<h2>情報数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBCurveDataIndices::Count</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBElementIndices": return "<h2>基本要素DBIndex</h2><div class=\"text\">基本要素DBのサブDBの順序です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBElementIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBElementIndices:Parameter": return "<h2>パラメーター</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBElementIndices::Parameter</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBElementIndices:Attribute": return "<h2>属性</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBElementIndices::Attribute</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBElementIndices:SkillType": return "<h2>スキル種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBElementIndices::SkillType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBElementIndices:ItemType": return "<h2>アイテム大種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBElementIndices::ItemType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBElementIndices:ItemSubType": return "<h2>アイテム小種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBElementIndices::ItemSubType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices": return "<h2>変数DBIndex</h2><div class=\"text\">変数DBのサブDBの順序です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBValueIndices:CommonFlag": return "<h2>共通フラグ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::CommonFlag</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:CommonInteger": return "<h2>共通変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::CommonInteger</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:CommonString": return "<h2>共通文字変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::CommonString</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:SelfActor": return "<h2>アクター個別変数</h2><div class=\"text\">パーティキャラ・エネミーで共通の変数です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::SelfActor</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:SelfClass": return "<h2>クラス個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::SelfClass</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:SelfUse": return "<h2>直接効果個別変数</h2><div class=\"text\">アイテム・スキルで共通の変数です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::SelfUse</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:SelfState": return "<h2>間接効果個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::SelfState</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:SelfUnit": return "<h2>ユニット個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::SelfUnit</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBValueIndices:SelfEvent": return "<h2>マップイベント個別変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBValueIndices::SelfEvent</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBInitIndices": return "<h2>初期設定DBIndex</h2><div class=\"text\">初期設定DBのデータ順序です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBInitIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBInitIndices:Party": return "<h2>パーティ隊列</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBInitIndices::Party</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBInitIndices:PartyButton": return "<h2>パーティ隊列（ボタン）</h2><div class=\"text\">パーティ隊列をセットするためのボタン列です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBInitIndices::PartyButton</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBInitIndices:Item": return "<h2>所持アイテム</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBInitIndices::Item</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBInitIndices:ItemButton": return "<h2>所持アイテム（ボタン）</h2><div class=\"text\">所持アイテムをセットするためのボタン列です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBInitIndices::ItemButton</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBInitIndices:Money": return "<h2>所持金</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBInitIndices::Money</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBMaterialIndices": return "<h2>素材DBIndex</h2><div class=\"text\">素材DBのサブDBの順序です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBMaterialIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBMaterialIndices:Face": return "<h2>フェイスグラフィック</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBMaterialIndices::Face</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBMaterialIndices:Graphics": return "<h2>汎用グラフィック</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBMaterialIndices::Graphics</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBMaterialIndices:Sound": return "<h2>汎用サウンド</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBMaterialIndices::Sound</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBMaterialIndices:Font": return "<h2>汎用フォント</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBMaterialIndices::Font</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBUnitEnemyIndices": return "<h2>ユニットDBのエネミー情報順序</h2><div class=\"text\">ユニットDBのエネミー情報の順序です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBUnitEnemyIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBUnitEnemyIndices:FixedID": return "<h2>FixedID</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBUnitEnemyIndices::FixedID</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBUnitEnemyIndices:Position": return "<h2>表示位置</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBUnitEnemyIndices::Position</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBEffectColumnIndices": return "<h2>エフェクトDBIndex</h2><div class=\"text\">エフェクトDBのデータ順序です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectColumnIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBEffectColumnIndices:FrameLength": return "<h2>フレーム数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectColumnIndices::FrameLength</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBEffectColumnIndices:DrawDest": return "<h2>描画基準</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectColumnIndices::DrawDest</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBEffectColumnIndices:Layers": return "<h2>レイヤー数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectColumnIndices::Layers</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBTilesetColumnIndices": return "<h2>タイルセットDBIndex</h2><div class=\"text\">タイルセットDBのデータ順序です。<br>この列挙体は標準３列を抜いています。<hr><h3>定義位置</h3><div class=\"text\">DB::DBTilesetColumnIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBTilesetColumnIndices:Comment": return "<h2>メモ欄</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBTilesetColumnIndices::Comment</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBTilesetColumnIndices:AutoTiles": return "<h2>オートタイルファイルリスト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBTilesetColumnIndices::AutoTiles</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBTilesetColumnIndices:ObjTiles": return "<h2>オブジェクトタイルリスト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBTilesetColumnIndices::ObjTiles</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBEffectViewPosition": return "<h2>エフェクトDB描画基準</h2><div class=\"text\">エフェクトが表示される基準点です。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectViewPosition</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBEffectViewPosition:Each": return "<h2>対象個別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectViewPosition::Each</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBEffectViewPosition:OnlyOne": return "<h2>対象一括</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectViewPosition::OnlyOne</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBEffectViewPosition:CenterScreen": return "<h2>画面中心</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBEffectViewPosition::CenterScreen</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:UseType": return "<h2>直接効果</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::UseType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DBLiteral:UseType:Script": return "<h2>スクリプト指定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::UseType::Script</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:UseType:Physic": return "<h2>物理攻撃</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::UseType::Physic</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:UseType:Magic": return "<h2>魔法攻撃</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::UseType::Magic</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:UseType:Heal": return "<h2>回復</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::UseType::Heal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:UseType:Utility": return "<h2>補助</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::UseType::Utility</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:SceneLimit": return "<h2>場面制限</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::SceneLimit</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DBLiteral:SceneLimit:AlwaysNG": return "<h2>常時NG</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::SceneLimit::AlwaysNG</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:SceneLimit:OnlyMap": return "<h2>移動時のみ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::SceneLimit::OnlyMap</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:SceneLimit:OnlyBattle": return "<h2>戦闘時のみ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::SceneLimit::OnlyBattle</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:SceneLimit:AlwaysOK": return "<h2>常時OK</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::SceneLimit::AlwaysOK</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType": return "<h2>対象種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DBLiteral:TargetType:None": return "<h2>なし</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType:OneParty": return "<h2>味方１人</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::OneParty</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType:OnePartyWithDead": return "<h2>味方１人（死者含む）</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::OnePartyWithDead</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType:AllParty": return "<h2>味方全体</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::AllParty</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType:AllPartyWithDead": return "<h2>味方全体（死者含む）</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::AllPartyWithDead</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType:OneEnemy": return "<h2>敵１体</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::OneEnemy</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType:AllEnemy": return "<h2>敵全体</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::AllEnemy</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:TargetType:Place": return "<h2>場所</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::TargetType::Place</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:StateLimit": return "<h2>間接効果の制約</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateLimit</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DBLiteral:StateLimit:None": return "<h2>なし</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateLimit::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:StateLimit:KO": return "<h2>戦闘不能</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateLimit::KO</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:StateLimit:ForbiddenAction": return "<h2>行動不能</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateLimit::ForbiddenAction</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:StateSolve": return "<h2>間接効果の解除条件</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateSolve</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DBLiteral:StateSolve:None": return "<h2>なし</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateSolve::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:StateSolve:Damamge": return "<h2>ダメージを受けたら</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateSolve::Damamge</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:StateSolve:Turn": return "<h2>ターン経過</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateSolve::Turn</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:StateSolve:Walk": return "<h2>歩数経過</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::StateSolve::Walk</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:FontDrawing": return "<h2>フォント描画方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::FontDrawing</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DBLiteral:FontDrawing:Normal": return "<h2>標準</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::FontDrawing::Normal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:FontDrawing:Edge": return "<h2>縁あり</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::FontDrawing::Edge</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:FontDrawing:AS": return "<h2>アンチエイリアス</h2><div class=\"text\">文字の縁が背景に馴染むように処理されて見やすくなります。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::FontDrawing::AS</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:FontDrawing:EdgeAS": return "<h2>縁ありアンチエイリアス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::FontDrawing::EdgeAS</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon": return "<h2>アドオン種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DBLiteral:Addon:SelfValuePlus": return "<h2>個別変数に加算</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::SelfValuePlus</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:ParameterPlus": return "<h2>パラメーターに加算</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::ParameterPlus</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:AttributeResistanceSet": return "<h2>属性耐性を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::AttributeResistanceSet</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:StateResistanceSet": return "<h2>間接効果耐性を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::StateResistanceSet</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:LockEquipType": return "<h2>装備大種別を固定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::LockEquipType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:SetEquipType": return "<h2>装備大種別の装備可否を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::SetEquipType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:SetEquipSubType": return "<h2>装備小種別の装備可否を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::SetEquipSubType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:SetSkillUse": return "<h2>スキルの使用可否を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::SetSkillUse</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DBLiteral:Addon:SetSkillType": return "<h2>スキル種別の使用可否を設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DBLiteral::Addon::SetSkillType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileColumnCount": return "<h2>タイルパレット横方向の最大数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileColumnCount</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Map:AutoTileRowLength": return "<h2>オートタイルパターン数</h2><div class=\"text\">独立型・左右接続型・上下接続型・四方接続型・八方接続型があります。<hr><h3>定義位置</h3><div class=\"text\">Map::AutoTileRowLength</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Map:MapSizeMaxLength": return "<h2>マップの長さ最大値</h2><div class=\"text\">マップは縦・横ともにこの長さが最大となります。<hr><h3>定義位置</h3><div class=\"text\">Map::MapSizeMaxLength</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Map:Layer": return "<h2>マップレイヤー</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Layer</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:Layer:Low": return "<h2>下層</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Layer::Low</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Layer:Middle": return "<h2>中層</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Layer::Middle</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Layer:High": return "<h2>上層</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Layer::High</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Layer:Shadow": return "<h2>影層</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Layer::Shadow</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Layer:Event": return "<h2>イベント</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Layer::Event</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:QuarterTile": return "<h2>1/4タイル</h2><div class=\"text\">１タイルを４つに分けた細かいタイルです。<hr><h3>定義位置</h3><div class=\"text\">Map::QuarterTile</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:QuarterTile:LeftTop": return "<h2>左上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::QuarterTile::LeftTop</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:QuarterTile:RightTop": return "<h2>右上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::QuarterTile::RightTop</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:QuarterTile:LeftBottom": return "<h2>左下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::QuarterTile::LeftBottom</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:QuarterTile:RightBottom": return "<h2>右下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::QuarterTile::RightBottom</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction4": return "<h2>4方向</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction4</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:Direction4:South": return "<h2>南</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction4::South</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction4:West": return "<h2>西</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction4::West</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction4:East": return "<h2>東</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction4::East</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction4:North": return "<h2>北</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction4::North</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction4:None": return "<h2>中立</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction4::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8": return "<h2>8方向</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:Direction8:SouthWest": return "<h2>南西</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::SouthWest</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:South": return "<h2>南</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::South</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:SouthEast": return "<h2>南東</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::SouthEast</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:West": return "<h2>西</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::West</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:None": return "<h2>中立</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:East": return "<h2>東</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::East</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:NorthWest": return "<h2>北西</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::NorthWest</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:North": return "<h2>北</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::North</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Direction8:NorthEast": return "<h2>北東</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Direction8::NorthEast</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Speed": return "<h2>速度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Speed</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:Speed:VeryLow": return "<h2>非常に遅い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Speed::VeryLow</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Speed:Low": return "<h2>遅い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Speed::Low</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Speed:Normal": return "<h2>標準</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Speed::Normal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Speed:High": return "<h2>速い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Speed::High</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Speed:VeryHigh": return "<h2>非常に速い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Speed::VeryHigh</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:Speed:Moment": return "<h2>瞬間</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::Speed::Moment</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDataType": return "<h2>タイル設定種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDataType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:TileDataType:Hit": return "<h2>当たり判定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDataType::Hit</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDataType:InOut": return "<h2>出入設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDataType::InOut</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDataType:Priority": return "<h2>描画優先度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDataType::Priority</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDataType:GroupNumber": return "<h2>グループ番号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDataType::GroupNumber</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:HitType": return "<h2>当たり判定種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::HitType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:HitType:OK": return "<h2>通行可能</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::HitType::OK</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:HitType:NG": return "<h2>通行不可</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::HitType::NG</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:HitType:Depend": return "<h2>下位層依存</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::HitType::Depend</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:InOutType": return "<h2>出入設定種別</h2><div class=\"text\">出入設定はビット演算で設定します。<hr><h3>定義位置</h3><div class=\"text\">Map::InOutType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:InOutType:None": return "<h2>通行不可</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::InOutType::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:InOutType:OKBottom": return "<h2>下方向OK</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::InOutType::OKBottom</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:InOutType:OKLeft": return "<h2>左方向OK</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::InOutType::OKLeft</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:InOutType:OKRight": return "<h2>右方向OK</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::InOutType::OKRight</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:InOutType:OKTop": return "<h2>上方向OK</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::InOutType::OKTop</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDrawPriority": return "<h2>タイル描画優先度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDrawPriority</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:TileDrawPriority:Normal": return "<h2>標準</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDrawPriority::Normal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDrawPriority:SemiTransparent": return "<h2>半透明</h2><div class=\"text\">タイルに重なったキャラの下半身が半透明になります。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDrawPriority::SemiTransparent</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDrawPriority:SemiTopMost": return "<h2>優先</h2><div class=\"text\">タイルに重なったキャラの下半身を隠します。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDrawPriority::SemiTopMost</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:TileDrawPriority:TopMost": return "<h2>最前面表示</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::TileDrawPriority::TopMost</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:AutoTilePattern": return "<h2>オートタイルパターン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::AutoTilePattern</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:AutoTilePattern:Isolate": return "<h2>独立型</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::AutoTilePattern::Isolate</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:AutoTilePattern:Vertical": return "<h2>上下接続型</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::AutoTilePattern::Vertical</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:AutoTilePattern:Horizontal": return "<h2>左右接続型</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::AutoTilePattern::Horizontal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:AutoTilePattern:FourSide": return "<h2>四方接続型</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::AutoTilePattern::FourSide</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:AutoTilePattern:AllSide": return "<h2>八方接続型</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::AutoTilePattern::AllSide</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:MapLoopType": return "<h2>マップループ方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::MapLoopType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:MapLoopType:None": return "<h2>無効</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::MapLoopType::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:MapLoopType:Vertical": return "<h2>縦方向</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::MapLoopType::Vertical</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:MapLoopType:Horizontal": return "<h2>横方向</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::MapLoopType::Horizontal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:MapLoopType:Both": return "<h2>縦/横方向</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::MapLoopType::Both</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType": return "<h2>スクロール方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:ScrollType:None": return "<h2>無効</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:FollowChar": return "<h2>プレイヤー移動に伴う</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::FollowChar</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:LeftDown": return "<h2>左下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::LeftDown</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:Down": return "<h2>下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::Down</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:RightDown": return "<h2>右下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::RightDown</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:Left": return "<h2>左</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::Left</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:Right": return "<h2>右</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::Right</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:LeftUp": return "<h2>左上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::LeftUp</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:Up": return "<h2>上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::Up</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:ScrollType:RightUp": return "<h2>右上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::ScrollType::RightUp</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventScriptType": return "<h2>イベントスクリプト種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventScriptType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:EventScriptType:Page": return "<h2>ページ条件</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventScriptType::Page</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventScriptType:Trigger": return "<h2>起動条件</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventScriptType::Trigger</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventScriptType:Move": return "<h2>日常移動</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventScriptType::Move</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventScriptType:Run": return "<h2>実行内容</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventScriptType::Run</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventTriggerType": return "<h2>イベント起動条件</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:EventTriggerType:None": return "<h2>起動しない</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventTriggerType:PressEnterKey": return "<h2>決定キー押下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType::PressEnterKey</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventTriggerType:Push": return "<h2>プレイヤーから接触</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType::Push</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventTriggerType:Pushed": return "<h2>イベントから接触</h2><div class=\"text\">プレイヤーからの接触も含みます。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType::Pushed</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventTriggerType:Auto": return "<h2>自動</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType::Auto</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventTriggerType:AfterMoveMap": return "<h2>マップ移動直後</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType::AfterMoveMap</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventTriggerType:Parallel": return "<h2>並列</h2><div class=\"text\">イベントが起動している間も操作が可能になります。<hr><h3>定義位置</h3><div class=\"text\">Map::EventTriggerType::Parallel</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveType": return "<h2>イベント日常移動</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:EventMoveType:None": return "<h2>移動しない</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveType::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveType:Random": return "<h2>ランダム移動</h2><div class=\"text\">一定の範囲内をランダムに移動します。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveType::Random</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveType:Near": return "<h2>主人公へ近づく</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveType::Near</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveType:Away": return "<h2>主人公から遠ざかる</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveType::Away</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveType:Script": return "<h2>スクリプト指定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveType::Script</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventDrawPriority": return "<h2>イベント描画優先度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventDrawPriority</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:EventDrawPriority:Low": return "<h2>主人公より下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventDrawPriority::Low</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventDrawPriority:Middle": return "<h2>主人公と同じ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventDrawPriority::Middle</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventDrawPriority:High": return "<h2>主人公より上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventDrawPriority::High</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventAnimation": return "<h2>イベントアニメーション</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventAnimation</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:EventAnimation:Move1": return "<h2>歩行１</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventAnimation::Move1</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventAnimation:Stop": return "<h2>静止</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventAnimation::Stop</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventAnimation:Move2": return "<h2>歩行２</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventAnimation::Move2</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventAnimation:Count": return "<h2>アニメーションパターン総数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventAnimation::Count</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask": return "<h2>イベント日常移動の指示内容</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:EventMoveTask:Direction": return "<h2>方向設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Direction</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:Forward": return "<h2>一歩前進</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Forward</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:Backward": return "<h2>一歩後退</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Backward</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:Move": return "<h2>指定方向へ一歩進む</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Move</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:MoveRandom": return "<h2>ランダム方向へ一歩進む</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::MoveRandom</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:MoveToPlayer": return "<h2>主人公へ一歩進む</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::MoveToPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:MoveAgainstPlayer": return "<h2>主人公から一歩後退</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::MoveAgainstPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:TurnLeft": return "<h2>左を向く</h2><div class=\"text\">現在の向きからの相対的な「左」です。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::TurnLeft</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:TurnRight": return "<h2>右を向く</h2><div class=\"text\">現在の向きからの相対的な「右」です。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::TurnRight</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:Turn180": return "<h2>後ろを向く</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Turn180</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:TurnRandom": return "<h2>ランダム方向を向く</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::TurnRandom</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:TurnToPlayer": return "<h2>主人公を向く</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::TurnToPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:TurnAgainstPlayer": return "<h2>主人公から背ける</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::TurnAgainstPlayer</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:Wait": return "<h2>ミリ秒待機</h2><div class=\"text\">実際にはフレームレートの関係で若干の誤差が生じることがあります。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Wait</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:SetMoveSpeed": return "<h2>移動速度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::SetMoveSpeed</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:SetMoveFrequency": return "<h2>移動頻度</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::SetMoveFrequency</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:EnabledWalkAnim": return "<h2>歩行アニメ有無</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::EnabledWalkAnim</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:EnabledStopAnim": return "<h2>静止アニメ有無</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::EnabledStopAnim</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:NoHit": return "<h2>すり抜け</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::NoHit</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:FixedDirection": return "<h2>向き固定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::FixedDirection</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:Hide": return "<h2>非表示切替</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Hide</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:ChangeGraphics": return "<h2>グラフィック変更</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::ChangeGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:SQ": return "<h2>スクリプト呼出</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::SQ</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:LockRoute": return "<h2>経路固定切替</h2><div class=\"text\">障害物がある等で指示された方向に移動ができない場合の挙動を設定します。<br>TRUEの場合は障害物がなくなるまで待機します。<br>既定値はFALSEです。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::LockRoute</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:EventMoveTask:Repeat": return "<h2>上記繰り返し</h2><div class=\"text\">指示した移動経路を繰り返します。<br>この指示は繰り返しの最後に置いて下さい。<hr><h3>定義位置</h3><div class=\"text\">Map::EventMoveTask::Repeat</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:FixedFPS": return "<h2>固定FPS</h2><div class=\"text\">システムで定められた固定フレームレート (60 FPS) です。<hr><h3>定義位置</h3><div class=\"text\">System::FixedFPS</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "System:RunMode": return "<h2>起動モード</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::RunMode</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:RunMode:MainGame": return "<h2>ゲーム本編</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::RunMode::MainGame</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:RunMode:MapTest": return "<h2>マップテスト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::RunMode::MapTest</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:RunMode:BattleTest": return "<h2>バトルテスト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::RunMode::BattleTest</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:RunMode:SQCompile": return "<h2>スクリプトコンパイル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::RunMode::SQCompile</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:RunMode:SQTest": return "<h2>スクリプト単体テスト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::RunMode::SQTest</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:RunMode:DXArchive": return "<h2>アーカイブ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::RunMode::DXArchive</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ExitCode": return "<h2>終了コード</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ExitCode</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:ExitCode:Error": return "<h2>エラー終了</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ExitCode::Error</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ExitCode:Success": return "<h2>正常終了</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ExitCode::Success</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ExitCode:Question": return "<h2>ユーザーに問い合わせて終了</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ExitCode::Question</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:Scene": return "<h2>シーン</h2><div class=\"text\">サブシーンを含みます。<hr><h3>定義位置</h3><div class=\"text\">System::Scene</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:Scene:All": return "<h2>全体</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::Scene::All</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:Scene:Title": return "<h2>タイトル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::Scene::Title</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:Scene:Map": return "<h2>マップ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::Scene::Map</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:Scene:Menu": return "<h2>メニュー</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::Scene::Menu</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:Scene:Shop": return "<h2>ショップ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::Scene::Shop</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:Scene:Battle": return "<h2>バトル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::Scene::Battle</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxIcon": return "<h2>メッセージボックスのアイコン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxIcon</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:MessageBoxIcon:None": return "<h2>なし</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxIcon::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxIcon:Warning": return "<h2>警告</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxIcon::Warning</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxIcon:Information": return "<h2>情報</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxIcon::Information</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxIcon:Error": return "<h2>エラー</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxIcon::Error</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxButton": return "<h2>メッセージボックスのボタン種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxButton</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:MessageBoxButton:OK": return "<h2>OK</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxButton::OK</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxButton:OKCancel": return "<h2>OK/キャンセル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxButton::OKCancel</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxButton:YesNo": return "<h2>はい/いいえ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxButton::YesNo</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxButton:YesNoCancel": return "<h2>はい/いいえ/キャンセル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxButton::YesNoCancel</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxButton:RetryCancel": return "<h2>再試行/キャンセル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxButton::RetryCancel</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxButton:AbortRetryIgnore": return "<h2>中止/再試行/無視</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxButton::AbortRetryIgnore</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxResult": return "<h2>メッセージボックスの結果</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:MessageBoxResult:OK": return "<h2>OK</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult::OK</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxResult:Cancel": return "<h2>キャンセル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult::Cancel</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxResult:Yes": return "<h2>はい</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult::Yes</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxResult:No": return "<h2>いいえ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult::No</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxResult:Abort": return "<h2>中止</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult::Abort</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxResult:Retry": return "<h2>再試行</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult::Retry</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MessageBoxResult:Ignore": return "<h2>無視</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MessageBoxResult::Ignore</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID": return "<h2>システムエラー種別</h2><div class=\"text\">ゲームプログラムによって出されるエラーの種別です。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:ErrorID:NotFound": return "<h2>見つからない</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::NotFound</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID:Exists": return "<h2>既に存在している</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::Exists</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID:OutOfRange": return "<h2>範囲外である</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::OutOfRange</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID:Except": return "<h2>例外である</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::Except</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID:Invalid": return "<h2>無効である</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::Invalid</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID:Failed": return "<h2>失敗した</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::Failed</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID:WinAPI": return "<h2>OSエラー</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::WinAPI</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:ErrorID:SQ": return "<h2>スクリプトエラー</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::ErrorID::SQ</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID": return "<h2>キー番号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:KeyID:Backspace": return "<h2>Backspace</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Backspace</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Tab": return "<h2>Tab</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Tab</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Enter": return "<h2>Enter</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Enter</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:LShift": return "<h2>左Shift</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::LShift</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:RShift": return "<h2>右Shift</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::RShift</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:LCtrl": return "<h2>左Ctrl</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::LCtrl</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:RCtrl": return "<h2>右Ctrl</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::RCtrl</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Escape": return "<h2>ESC</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Escape</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Space": return "<h2>Space</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Space</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:PageUp": return "<h2>PageUp</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::PageUp</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:PageDown": return "<h2>PageDown</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::PageDown</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:End": return "<h2>End</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::End</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Home": return "<h2>Home</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Home</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Left": return "<h2>左</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Left</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Up": return "<h2>上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Up</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Right": return "<h2>右</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Right</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Down": return "<h2>下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Down</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Insert": return "<h2>Insert</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Insert</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Delete": return "<h2>Delete</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Minus": return "<h2>マイナス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Minus</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Yen": return "<h2>円記号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Yen</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Prevtrack": return "<h2>カレット</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Prevtrack</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Period": return "<h2>ピリオド</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Period</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Slash": return "<h2>スラッシュ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Slash</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:LAlt": return "<h2>左Alt</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::LAlt</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:RAlt": return "<h2>右Alt</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::RAlt</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:ScrollLock": return "<h2>ScrollLock</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::ScrollLock</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:SemiColon": return "<h2>セミコロン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::SemiColon</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Colon": return "<h2>コロン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Colon</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:LBracket": return "<h2>開き括弧</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::LBracket</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:RBracket": return "<h2>閉じ括弧</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::RBracket</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:At": return "<h2>アットマーク</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::At</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:BackSlash": return "<h2>バックスラッシュ（円記号）</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::BackSlash</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Comma": return "<h2>カンマ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Comma</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Kanji": return "<h2>漢字</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Kanji</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Convert": return "<h2>変換</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Convert</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NoConvert": return "<h2>無変換</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NoConvert</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Kana": return "<h2>かな</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Kana</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Apps": return "<h2>アプリケーション</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Apps</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:CapsLock": return "<h2>CapsLock</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::CapsLock</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:PrintScreen": return "<h2>PrintScreen</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::PrintScreen</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:PauseBreak": return "<h2>Pause/Break</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::PauseBreak</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:LWin": return "<h2>左Windows</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::LWin</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:RWin": return "<h2>右Windows</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::RWin</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NumLock": return "<h2>NumLock</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NumLock</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num0": return "<h2>テンキー0</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num0</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num1": return "<h2>テンキー1</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num1</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num2": return "<h2>テンキー2</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num2</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num3": return "<h2>テンキー3</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num3</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num4": return "<h2>テンキー4</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num4</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num5": return "<h2>テンキー5</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num5</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num6": return "<h2>テンキー6</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num6</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num7": return "<h2>テンキー7</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num7</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num8": return "<h2>テンキー8</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num8</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Num9": return "<h2>テンキー9</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Num9</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NumMultiply": return "<h2>テンキー乗算記号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NumMultiply</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NumAdd": return "<h2>テンキー加算記号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NumAdd</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NumSubtract": return "<h2>テンキー減算記号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NumSubtract</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NumDecimal": return "<h2>テンキー小数点</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NumDecimal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NumDivide": return "<h2>テンキー除算記号</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NumDivide</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:NumEnter": return "<h2>テンキーEnter</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::NumEnter</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F1": return "<h2>F1</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F1</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F2": return "<h2>F2</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F2</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F3": return "<h2>F3</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F3</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F4": return "<h2>F4</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F4</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F5": return "<h2>F5</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F5</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F6": return "<h2>F6</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F6</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F7": return "<h2>F7</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F7</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F8": return "<h2>F8</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F8</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F9": return "<h2>F9</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F9</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F10": return "<h2>F10</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F10</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F11": return "<h2>F11</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F11</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F12": return "<h2>F12</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F12</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:A": return "<h2>A</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::A</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:B": return "<h2>B</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::B</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:C": return "<h2>C</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::C</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:D": return "<h2>D</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::D</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:E": return "<h2>E</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::E</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:F": return "<h2>F</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::F</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:G": return "<h2>G</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::G</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:H": return "<h2>H</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::H</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:I": return "<h2>I</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::I</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:J": return "<h2>J</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::J</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:K": return "<h2>K</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::K</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:L": return "<h2>L</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::L</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:M": return "<h2>M</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::M</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:N": return "<h2>N</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::N</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:O": return "<h2>O</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::O</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:P": return "<h2>P</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::P</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Q": return "<h2>Q</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Q</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:R": return "<h2>R</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::R</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:S": return "<h2>S</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::S</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:T": return "<h2>T</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::T</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:U": return "<h2>U</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::U</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:V": return "<h2>V</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::V</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:W": return "<h2>W</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::W</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:X": return "<h2>X</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::X</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Y": return "<h2>Y</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Y</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Z": return "<h2>Z</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Z</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key0": return "<h2>0</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key0</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key1": return "<h2>1</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key1</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key2": return "<h2>2</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key2</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key3": return "<h2>3</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key3</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key4": return "<h2>4</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key4</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key5": return "<h2>5</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key5</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key6": return "<h2>6</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key6</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key7": return "<h2>7</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key7</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key8": return "<h2>8</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key8</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:KeyID:Key9": return "<h2>9</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::KeyID::Key9</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID": return "<h2>ジョイパッドボタン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:PadID:Down": return "<h2>下</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Down</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Left": return "<h2>左</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Left</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Right": return "<h2>右</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Right</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Up": return "<h2>上</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Up</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button1": return "<h2>ボタン1</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button1</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button2": return "<h2>ボタン2</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button2</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button3": return "<h2>ボタン3</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button3</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button4": return "<h2>ボタン4</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button4</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button5": return "<h2>ボタン5</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button5</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button6": return "<h2>ボタン6</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button6</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button7": return "<h2>ボタン7</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button7</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button8": return "<h2>ボタン8</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button8</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button9": return "<h2>ボタン9</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button9</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:PadID:Button10": return "<h2>ボタン10</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::PadID::Button10</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MouseID": return "<h2>マウスボタン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MouseID</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "System:MouseID:Left": return "<h2>左クリック</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MouseID::Left</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MouseID:Right": return "<h2>右クリック</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MouseID::Right</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "System:MouseID:Middle": return "<h2>中央クリック</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">System::MouseID::Middle</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Sprite:TextAlign": return "<h2>文字列整列方向</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::TextAlign</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Sprite:TextAlign:Left": return "<h2>左揃え</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::TextAlign::Left</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Sprite:TextAlign:Center": return "<h2>中央揃え</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::TextAlign::Center</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Sprite:TextAlign:Right": return "<h2>右揃え</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::TextAlign::Right</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Sprite:WipeState": return "<h2>スプライトワイプ状態</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::WipeState</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Sprite:WipeState:None": return "<h2>停止</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::WipeState::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Sprite:WipeState:WipeIn": return "<h2>ワイプイン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::WipeState::WipeIn</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Sprite:WipeState:WipeOut": return "<h2>ワイプアウト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Sprite::WipeState::WipeOut</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:MaterialType": return "<h2>素材種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MaterialType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Material:MaterialType:Graphics": return "<h2>グラフィック</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MaterialType::Graphics</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:MaterialType:Sound": return "<h2>サウンド</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MaterialType::Sound</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:MaterialType:Font": return "<h2>フォント</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MaterialType::Font</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:FontNormalSize": return "<h2>フォント標準サイズ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::FontNormalSize</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:FontNormalThick": return "<h2>フォント標準太さ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::FontNormalThick</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:FontNormalLineSpace": return "<h2>フォント標準行間</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::FontNormalLineSpace</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:FontNormalType": return "<h2>フォント標準描画方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::FontNormalType</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:Common_MinPitch": return "<h2>サウンド共通最小音程</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::Common_MinPitch</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:Common_MaxPitch": return "<h2>サウンド共通最大音程</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::Common_MaxPitch</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MIDI_MinVolume": return "<h2>MIDI最小音量</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MIDI_MinVolume</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MIDI_MaxVolume": return "<h2>MIDI最大音量</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MIDI_MaxVolume</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MIDI_MinPitch": return "<h2>MIDI最小音程</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MIDI_MinPitch</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MIDI_MaxPitch": return "<h2>MIDI最大音程</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MIDI_MaxPitch</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MinVolume": return "<h2>最小音量</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MinVolume</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MaxVolume": return "<h2>最大音量</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MaxVolume</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MinPitch": return "<h2>一般サウンド最小音程</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MinPitch</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MaxPitch": return "<h2>一般サウンド最大音程</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MaxPitch</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MinPan": return "<h2>サウンド左右位置/完全左</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MinPan</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:MaxPan": return "<h2>サウンド左右位置/完全右</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::MaxPan</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Material:PlayStatus": return "<h2>サウンド再生状態</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayStatus</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Material:PlayStatus:Error": return "<h2>エラー</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayStatus::Error</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:PlayStatus:Stop": return "<h2>停止</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayStatus::Stop</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:PlayStatus:Playing": return "<h2>再生</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayStatus::Playing</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:PlayType": return "<h2>サウンド再生方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Material:PlayType:Wait": return "<h2>再生終了まで待機</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayType::Wait</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:PlayType:Back": return "<h2>バックグラウンド再生</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayType::Back</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Material:PlayType:Loop": return "<h2>ループ再生</h2><div class=\"text\">バックグラウンド再生です。<hr><h3>定義位置</h3><div class=\"text\">Material::PlayType::Loop</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBType": return "<h2>DB大種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:DBType:FDB": return "<h2>固定DB</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBType::FDB</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBType:VDB": return "<h2>可変DB</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBType::VDB</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:DBType:UDB": return "<h2>ユーザーDB</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::DBType::UDB</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnType": return "<h2>DB列種別</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:ColumnType:None": return "<h2>なし</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType::None</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnType:OneNumber": return "<h2>単一数値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType::OneNumber</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnType:Numbers": return "<h2>複数値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType::Numbers</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnType:String": return "<h2>文字列</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType::String</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnType:Boolean": return "<h2>チェックボックス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType::Boolean</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnType:IDNames": return "<h2>IDリスト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType::IDNames</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnType:IDValues": return "<h2>IDと値のリスト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnType::IDValues</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices": return "<h2>固定DBIndex</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:FDBIndices:System": return "<h2>システム</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::System</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Material": return "<h2>汎用素材</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Material</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Element": return "<h2>基本要素</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Element</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Class": return "<h2>クラス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Class</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Skill": return "<h2>スキル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Skill</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Item": return "<h2>アイテム</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Item</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:State": return "<h2>間接効果</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::State</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Char": return "<h2>パーティキャラ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Char</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Enemy": return "<h2>エネミー</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Enemy</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Unit": return "<h2>ユニット</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Unit</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Effect": return "<h2>エフェクト</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Effect</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Tileset": return "<h2>タイルセット</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Tileset</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:FDBIndices:Init": return "<h2>初期設定</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::FDBIndices::Init</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:VDBIndices": return "<h2>可変DBIndex</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::VDBIndices</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:VDBIndices:Value": return "<h2>変数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::VDBIndices::Value</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:VDBIndices:Party": return "<h2>パーティ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::VDBIndices::Party</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:VDBIndices:Actor": return "<h2>アクター</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::VDBIndices::Actor</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:AddonFrom": return "<h2>アドオン優先度</h2><div class=\"text\">アドオンの設定元を示すと同時に、アクターに対して競合するアドオンが適用されるときの優先順位を示します。<hr><h3>定義位置</h3><div class=\"text\">DB::AddonFrom</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "DB:AddonFrom:Actor": return "<h2>アクター</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::AddonFrom::Actor</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:AddonFrom:Class": return "<h2>クラス</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::AddonFrom::Class</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:AddonFrom:Item": return "<h2>装備品</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::AddonFrom::Item</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:AddonFrom:State": return "<h2>間接効果</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::AddonFrom::State</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:MapLayerCountWithoutEV": return "<h2>イベント層を除くタイルレイヤー数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::MapLayerCountWithoutEV</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "Map:SquareSpeed": return "<h2>速度係数値</h2><div class=\"text\">２を底として速度を累乗した値です。<hr><h3>定義位置</h3><div class=\"text\">Map::SquareSpeed</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体</div></div>";
		case "Map:SquareSpeed:VeryLow": return "<h2>非常に遅い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::SquareSpeed::VeryLow</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:SquareSpeed:Low": return "<h2>遅い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::SquareSpeed::Low</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:SquareSpeed:Normal": return "<h2>通常</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::SquareSpeed::Normal</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:SquareSpeed:High": return "<h2>速い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::SquareSpeed::High</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:SquareSpeed:VeryHigh": return "<h2>非常に速い</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::SquareSpeed::VeryHigh</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "Map:SquareSpeed:Moment": return "<h2>瞬間</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">Map::SquareSpeed::Moment</div><h3>オブジェクト種別</h3><div class=\"text\">列挙体メンバー</div></div>";
		case "DB:ColumnNameMaterialHandle": return "<h2>素材DBハンドル列名</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::ColumnNameMaterialHandle</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:GameTitle": return "<h2>システムDB項目名/ゲームタイトル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::GameTitle</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:GameVersion": return "<h2>システムDB項目名/ゲームバージョン</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::GameVersion</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:WindowSize": return "<h2>システムDB項目名/ウィンドウサイズ</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::WindowSize</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:AllowFullScreen": return "<h2>システムDB項目名/フルスクリーン許可</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::AllowFullScreen</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:IconFileName": return "<h2>システムDB項目名/アイコンファイル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::IconFileName</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:NowLoadingFileName": return "<h2>システムDB項目名/NowLoading素材ファイル</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::NowLoadingFileName</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:StandardTransparentColor": return "<h2>システムDB項目名/標準透過色</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::StandardTransparentColor</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:DrawInterpolation": return "<h2>システムDB項目名/補間方法</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::DrawInterpolation</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:EffectAsyncLoadMode": return "<h2>システムDB項目名/エフェクト素材非同期読込モード</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::EffectAsyncLoadMode</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:EffectFPS": return "<h2>システムDB項目名/エフェクトFPS</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::EffectFPS</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:TileSize": return "<h2>システムDB項目名/タイル一辺あたりのピクセル数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::TileSize</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:IconSize": return "<h2>システムDB項目名/アイコン一辺あたりのピクセル数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::IconSize</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:MaxPartyCount": return "<h2>システムDB項目名/パーティ最大人数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::MaxPartyCount</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:MaxLevel": return "<h2>システムDB項目名/レベル最大値</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::MaxLevel</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:MaxSaveDataCount": return "<h2>システムDB項目名/最大セーブデータ数</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::MaxSaveDataCount</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:ShadowTransparent": return "<h2>システムDB項目名/影層透明度</h2><div class=\"text\">0～255。<hr><h3>定義位置</h3><div class=\"text\">DB::System::ShadowTransparent</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:FogTransparent": return "<h2>システムDB項目名/フォグ透明度</h2><div class=\"text\">0～255。<hr><h3>定義位置</h3><div class=\"text\">DB::System::FogTransparent</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:EnabledSystemResource": return "<h2>システムDB項目名/システムリソース表示切替</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::EnabledSystemResource</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DB:System:EnabledLimitedDebug": return "<h2>システムDB項目名/制限付きデバッグモード</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DB::System::EnabledLimitedDebug</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "CSaveLoad": return "<h2>セーブロード管理クラス</h2><div class=\"text\">ゲームデータのセーブとロードを管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSaveLoad:GetAllSaveHeader": return "<h2>全データのヘッダー情報更新</h2><div class=\"text\">全セーブデータのヘッダー部分を読み込んで情報を更新します。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::GetAllSaveHeader</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSaveLoad:CopyData": return "<h2>データをコピー</h2><div class=\"text\">セーブデータをコピーします。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::CopyData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int fromIndex]: コピー元インデックス</li><li>第2引数 [int toIndex]: コピー先インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CSaveLoad:DeleteData": return "<h2>データを削除</h2><div class=\"text\">セーブデータを削除します。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::DeleteData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int targetIndex]: 削除対象インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CSaveLoad:LoadData": return "<h2>データをロード</h2><div class=\"text\">セーブデータを読み込みます。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::LoadData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int targetIndex]: ロード対象インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CSaveLoad:SaveData": return "<h2>データをセーブ</h2><div class=\"text\">現在のゲーム情報をセーブします。<br>既にデータが存在する場合、上書きの確認は行われませんのでご注意下さい。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::SaveData</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int targetIndex]: セーブ対象インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CSaveLoad:QuickSave": return "<h2>クイックセーブ</h2><div class=\"text\">起動中のみ有効なセーブデータを作成します。<br>内部的な処理で完結しているため、ファイル出力は行われません。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::QuickSave</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CSaveLoad:QuickLoad": return "<h2>クイックロード</h2><div class=\"text\">起動中のみ有効なセーブデータから復元します。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::QuickLoad</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: 成功したかどうか</div></div>";
		case "CSaveLoad:IsEnabled": return "<h2>セーブデータ検証</h2><div class=\"text\">指定したセーブデータが有効なデータ（存在しており、かつバージョンが一致している）であるかどうかを検証します。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::IsEnabled</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: 対象インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 有効なセーブデータであるかどうか</div></div>";
		case "CSaveLoad:GetSaveHeader": return "<h2>指定データのヘッダー取得</h2><div class=\"text\">指定したセーブデータのヘッダー情報を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::GetSaveHeader</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: 対象インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">string: ヘッダー情報</div></div>";
		case "CSaveLoad:GetSaveDateTime": return "<h2>指定データの日時取得</h2><div class=\"text\">指定したセーブデータの日時情報を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSaveLoad::GetSaveDateTime</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: 対象インデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">string: セーブ日時情報</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea": return "<h2>スプライト画像クラス</h2><div class=\"text\">スプライトの画像部分に関する情報を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea:VisibleRange": return "<h2>可視範囲</h2><div class=\"text\">画像の領域について、表示制限を行う場合に設定します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea::VisibleRange</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CRectangle (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea:Location": return "<h2>表示位置</h2><div class=\"text\">スプライト自体の表示位置に依存します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea::Location</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea:Size": return "<h2>画像サイズ</h2><div class=\"text\">この画像のサイズです。<br>自動で設定されるため、取得にだけ使用します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea::Size</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSize (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea:ExtendRateV": return "<h2>縦方向拡大率</h2><div class=\"text\">等倍=100。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea::ExtendRateV</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea:ExtendRateH": return "<h2>横方向拡大率</h2><div class=\"text\">等倍=100。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea::ExtendRateH</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea:Draw": return "<h2>グラフィック描画</h2><div class=\"text\">このグラフィックを描画します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea::Draw</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [CPoint pos]: 補正座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:CSpriteGraphicArea:InitVisibleRange": return "<h2>可視範囲を初期化</h2><div class=\"text\">一度設定した可視範囲を初期化して、すべての範囲が見えるようにします。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteGraphicArea::InitVisibleRange</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea": return "<h2>スプライト文字列クラス</h2><div class=\"text\">スプライトの文字列に関する情報を管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea:Text": return "<h2>文字列</h2><div class=\"text\">表示される文字列です。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea::Text</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">string</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea:Align": return "<h2>整列方向</h2><div class=\"text\">文字列の整列方向です。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea::Align</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea:Color": return "<h2>表示色</h2><div class=\"text\">カラーコードで示します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea::Color</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea:FontID": return "<h2>フォントID</h2><div class=\"text\">汎用素材DBで定義されたフォントのFixedIDです。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea::FontID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea:DrawArea": return "<h2>可視範囲</h2><div class=\"text\">文字列の領域について、表示制限を行う場合に設定します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea::DrawArea</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CRectangle (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea:Location": return "<h2>表示位置</h2><div class=\"text\">スプライト自体の表示位置に依存します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea::Location</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:CSpriteTextArea:Draw": return "<h2>テキストを描画</h2><div class=\"text\">このテキストを描画します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::CSpriteTextArea::Draw</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [CPoint pos]: 補正座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData": return "<h2>スプライトデータクラス</h2><div class=\"text\">スプライト単体のデータを管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">CIDNameData</div></div>";
		case "CSprite:CSpriteData:WipeType": return "<h2>ワイプ種別</h2><div class=\"text\">このスプライトのワイプ種別番号です。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::WipeType</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:WipeSpeed": return "<h2>ワイプ速度</h2><div class=\"text\">このスプライトの速度です。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::WipeSpeed</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:WipeCounter": return "<h2>ワイプカウンター</h2><div class=\"text\">このスプライトのワイプがどのくらい進んでいるかを示します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::WipeCounter</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSprite:CSpriteData:Hide": return "<h2>非表示かどうか</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::Hide</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSprite:CSpriteData:Location": return "<h2>表示位置</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::Location</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CPoint (読み取り専用)</div></div>";
		case "CSprite:CSpriteData:Trans": return "<h2>透明度</h2><div class=\"text\">0～255の範囲で有効です。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::Trans</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int</div></div>";
		case "CSprite:CSpriteData:GetGraphicsCount": return "<h2>グラフィック総数取得</h2><div class=\"text\">このスプライトに含まれるグラフィックの総数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::GetGraphicsCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: このスプライトに含まれるグラフィック総数</div></div>";
		case "CSprite:CSpriteData:AddGraphics": return "<h2>画像を追加</h2><div class=\"text\">このスプライトに画像を追加します。<br>既存の画像ハンドルを使用する場合はファイル名が無効となります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::AddGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string path]: ファイル名</li><li>第2引数 [int x]: 表示位置X座標</li><li>第3引数 [int y]: 表示位置Y座標</li><li>第4引数 [int baseHandle = -1]: 既存の画像ハンドルを使用しない場合は -1 を入れてください。</li></ul></div><h3>戻り値</h3><div class=\"text\">int: スプライト画像リスト上における、新しく追加された画像のインデックス</div></div>";
		case "CSprite:CSpriteData:ChangeGraphics": return "<h2>画像を変更</h2><div class=\"text\">このスプライトの指定した画像を変更します。<br>既存の画像ハンドルを使用する場合はファイル名が無効となります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::ChangeGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: スプライト画像リスト上におけるインデックス</li><li>第2引数 [string path]: ファイル名</li><li>第3引数 [int x]: 表示位置X座標</li><li>第4引数 [int y]: 表示位置Y座標</li><li>第5引数 [int baseHandle = -1]: 既存の画像ハンドルを使用しない場合は -1 を入れてください。</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:DeleteGraphics": return "<h2>画像を削除</h2><div class=\"text\">このスプライトの指定した画像を削除します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::DeleteGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: スプライト画像リスト上におけるインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:GetGraphics": return "<h2>画像データ取得</h2><div class=\"text\">このスプライトの指定した画像のデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::GetGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: スプライト画像リスト上のインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CSpriteGraphicArea*: スプライト画像データ</div></div>";
		case "CSprite:CSpriteData:GetTextsCount": return "<h2>テキスト総数取得</h2><div class=\"text\">このスプライトに含まれるテキストの総数を取得します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::GetTextsCount</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: このスプライトに含まれるテキストの総数</div></div>";
		case "CSprite:CSpriteData:AddText": return "<h2>文字列を追加</h2><div class=\"text\">このスプライトに文字列を追加します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::AddText</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string text]: 表示文字列</li><li>第2引数 [int x]: 表示位置X座標</li><li>第3引数 [int y]: 表示位置Y座標</li><li>第4引数 [int color]: 表示色</li><li>第5引数 [int fontID]: フォントID</li><li>第6引数 [int align = (int)TS::Sprite::TextAlign::Left]: 整列方向</li></ul></div><h3>戻り値</h3><div class=\"text\">int: スプライト文字列リスト上における、新しく追加された文字列のインデックス</div></div>";
		case "CSprite:CSpriteData:ChangeText": return "<h2>文字列を変更</h2><div class=\"text\">このスプライトの指定した文字列を変更します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::ChangeText</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: スプライト文字列リスト上におけるインデックス</li><li>第2引数 [string text]: 変更後の文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:DeleteText": return "<h2>文字列を削除</h2><div class=\"text\">このスプライトの指定した文字列を削除します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::DeleteText</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: スプライト文字列リスト上におけるインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:GetText": return "<h2>文字列データ取得</h2><div class=\"text\">このスプライトの指定した文字列のデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::GetText</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int index]: スプライト文字列リスト上におけるインデックス</li></ul></div><h3>戻り値</h3><div class=\"text\">CSpriteTextArea*: スプライト文字列データ</div></div>";
		case "CSprite:CSpriteData:Draw": return "<h2>スプライト描画</h2><div class=\"text\">このスプライトを描画します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::Draw</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:WipeIn": return "<h2>ワイプイン</h2><div class=\"text\">このスプライトを画面上に表示させます。<br>反映にはシーン描画を行う必要があります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::WipeIn</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int type]: ワイプ種別 (ユーザー定義値)</li><li>第2引数 [int wipeSpeed]: ワイプ速度</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CSpriteData:WipeOut": return "<h2>ワイプアウト</h2><div class=\"text\">このスプライトを画面上から消去します。<br>反映にはシーン描画を行う必要があります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CSpriteData::WipeOut</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int type]: ワイプ種別 (ユーザー定義値)</li><li>第2引数 [int wipeSpeed]: ワイプ速度</li><li>第3引数 [bool afterDelete]: ワイプアウト後にリソースを破棄するかどうか。今後使用しない場合はTrue</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite": return "<h2>スプライト管理クラス</h2><div class=\"text\">画面上に表示されるスプライトを統括管理するクラスです。<hr><h3>定義位置</h3><div class=\"text\">CSprite</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CSprite:ForbidLayerDraw": return "<h2>スプライト描画禁止フラグ</h2><div class=\"text\">このフラグが有効であるとき、スプライトは描画されなくなります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::ForbidLayerDraw</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CSprite:Add": return "<h2>スプライトを追加</h2><div class=\"text\">空のスプライトを追加します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::Add</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ユーザー定義の識別番号</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:Delete": return "<h2>スプライトを削除</h2><div class=\"text\">指定したIDのスプライトを削除します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::Delete</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ユーザー定義の識別番号</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:Clear": return "<h2>すべて削除</h2><div class=\"text\">すべてのスプライトを消去し、リソースを開放させます。<hr><h3>定義位置</h3><div class=\"text\">CSprite::Clear</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int wipeType]: ワイプ種別 (ユーザー定義値)</li><li>第2引数 [int wipeSpeed = (int)TS::Map::Speed::Normal]: ワイプ速度</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:Get": return "<h2>スプライトデータ取得</h2><div class=\"text\">指定したIDのスプライトデータを取得します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::Get</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ユーザー定義の識別番号</li></ul></div><h3>戻り値</h3><div class=\"text\">CSpriteData*: スプライトデータ</div></div>";
		case "CSprite:AddNewGraphics": return "<h2>新規画像付きのスプライトを追加</h2><div class=\"text\">指定した画像を持ったスプライトを追加します。<br>ワイプインは手動で行う必要があります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::AddNewGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ユーザー定義の識別番号</li><li>第2引数 [string path]: ファイル名</li><li>第3引数 [int x]: 表示位置X座標</li><li>第4引数 [int y]: 表示位置Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:AddLoadedGraphics": return "<h2>既存画像付きのスプライトを追加</h2><div class=\"text\">指定した画像を持ったスプライトを追加します。<br>ワイプインは手動で行う必要があります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::AddLoadedGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ユーザー定義の識別番号</li><li>第2引数 [int graphID]: 既存の画像ハンドル</li><li>第3引数 [int x]: 表示位置X座標</li><li>第4引数 [int y]: 表示位置Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:AddWipeNewGraphics": return "<h2>新規画像付きのスプライトを追加してワイプイン</h2><div class=\"text\">指定した画像を持ったスプライトを追加し、即座にワイプインを開始します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::AddWipeNewGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ユーザー定義の識別番号</li><li>第2引数 [string path]: ファイル名</li><li>第3引数 [int x]: 表示位置X座標</li><li>第4引数 [int y]: 表示位置Y座標</li><li>第5引数 [int wipeType]: ワイプ種別 (任意値)</li><li>第6引数 [int wipeSpeed]: ワイプ速度</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:AddWipeLoadedGraphics": return "<h2>既存画像付きのスプライトを追加してワイプイン</h2><div class=\"text\">指定した画像を持ったスプライトを追加し、即座にワイプインを開始します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::AddWipeLoadedGraphics</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int ID]: ユーザー定義の識別番号</li><li>第2引数 [int graphID]: 既存の画像ハンドル</li><li>第3引数 [int x]: 表示位置X座標</li><li>第4引数 [int y]: 表示位置Y座標</li><li>第5引数 [int wipeType]: ワイプ種別 (任意値)</li><li>第6引数 [int wipeSpeed]: ワイプ速度</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:Copy": return "<h2>スプライトをコピー</h2><div class=\"text\">既存のスプライトをコピーします。<br>ワイプインは手動で行う必要があります。<hr><h3>定義位置</h3><div class=\"text\">CSprite::Copy</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int newID]: 新しいスプライトの識別番号</li><li>第2引数 [int baseID]: コピー元の識別番号</li><li>第3引数 [int x]: 表示位置X座標</li><li>第4引数 [int y]: 表示位置Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:CopyWipe": return "<h2>スプライトをコピーしてワイプイン</h2><div class=\"text\">既存のスプライトをコピーし、即座にワイプインを開始します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::CopyWipe</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int newID]: 新しいスプライトの識別番号</li><li>第2引数 [int baseID]: コピー元の識別番号</li><li>第3引数 [int x]: 表示位置X座標</li><li>第4引数 [int y]: 表示位置Y座標</li><li>第5引数 [int wipeType]: ワイプ種別 (ユーザー定義値)</li><li>第6引数 [int wipeSpeed]: ワイプ速度</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:WipeInRange": return "<h2>指定ID範囲をワイプイン</h2><div class=\"text\">指定したID範囲のスプライトについて一括でワイプインを開始します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::WipeInRange</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int startID]: 始点とする識別番号</li><li>第2引数 [int endID]: 終点とする識別番号</li><li>第3引数 [int wipeType]: ワイプ種別 (ユーザー定義値)</li><li>第4引数 [int wipeSpeed]: ワイプ速度</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CSprite:WipeOutRange": return "<h2>指定ID範囲をワイプアウト</h2><div class=\"text\">指定したID範囲のスプライトについて一括でワイプアウトを開始します。<hr><h3>定義位置</h3><div class=\"text\">CSprite::WipeOutRange</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int startID]: 始点とする識別番号</li><li>第2引数 [int endID]: 終点とする識別番号</li><li>第3引数 [int wipeType]: ワイプ種別 (ユーザー定義値)</li><li>第4引数 [int wipeSpeed]: ワイプ速度</li><li>第5引数 [bool afterDelete = true]: ワイプアウト後にリソースを破棄するかどうか。今後使用しない場合はTrue</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject": return "<h2>ゲーム管理クラス</h2><div class=\"text\">ゲームプログラムの根幹となるクラスです。<br>ユーザー自身でインスタンスを作成しても意味はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject</div><h3>オブジェクト種別</h3><div class=\"text\">クラス</div><h3>継承元クラス</h3><div class=\"text\">継承しているクラスはありません。</div></div>";
		case "CGameObject:MT": return "<h2>疑似スレッドMGR</h2><div class=\"text\">疑似マルチスレッド管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::MT</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMultiThread (読み取り専用)</div></div>";
		case "CGameObject:FPSKeeper": return "<h2>フレームレートMGR</h2><div class=\"text\">フレームレート管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::FPSKeeper</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CFPS (読み取り専用)</div></div>";
		case "CGameObject:DXLib": return "<h2>DXライブラリMGR</h2><div class=\"text\">DXライブラリラッパークラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::DXLib</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDXLibWrapper (読み取り専用)</div></div>";
		case "CGameObject:DB": return "<h2>データベースMGR</h2><div class=\"text\">データベース管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::DB</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CDatabase (読み取り専用)</div></div>";
		case "CGameObject:Sprite": return "<h2>スプライトMGR</h2><div class=\"text\">スプライト管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::Sprite</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSprite (読み取り専用)</div></div>";
		case "CGameObject:SaveLoad": return "<h2>セーブデータMGR</h2><div class=\"text\">セーブデータ管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SaveLoad</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSaveLoad (読み取り専用)</div></div>";
		case "CGameObject:Material": return "<h2>素材MGR</h2><div class=\"text\">素材管理クラスのインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::Material</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CMaterial (読み取り専用)</div></div>";
		case "CGameObject:ForbidSceneDraw": return "<h2>シーン描画禁止フラグ</h2><div class=\"text\">このフラグが有効であるとき、シーン描画を停止します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::ForbidSceneDraw</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CGameObject:ForbidSceneInput": return "<h2>シーン入力禁止フラグ</h2><div class=\"text\">このフラグが有効であるとき、シーン入力を停止します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::ForbidSceneInput</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CGameObject:BGMKeep": return "<h2>シーン内BGM切替禁止フラグ</h2><div class=\"text\">マップを移動してもBGMを切り替えないようにするためのフラグです。<br>シーンをまたぐときはBGMが破棄されてしまうため維持することができません。<br>一度有効にされると、ユーザーによって解除されるまで有効ですが、セーブの対象とはなりません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::BGMKeep</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CGameObject:BGSKeep": return "<h2>シーン内BGS切替禁止フラグ</h2><div class=\"text\">マップを移動してもBGSを切り替えないようにするためのフラグです。<br>シーンをまたぐときはBGSが破棄されてしまうため維持することができません。<br>一度有効にされると、ユーザーによって解除されるまで有効ですが、セーブの対象とはなりません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::BGSKeep</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー変数</div><h3>型</h3><div class=\"text\">bool</div></div>";
		case "CGameObject:CurrentPath": return "<h2>カレントディレクトリ</h2><div class=\"text\">ゲームプログラムのあるディレクトリのフルパスです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::CurrentPath</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">string (読み取り専用)</div></div>";
		case "CGameObject:RunMode": return "<h2>起動モード</h2><div class=\"text\">ゲームプログラムの起動モードを示します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::RunMode</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">int (読み取り専用)</div></div>";
		case "CGameObject:WindowSize": return "<h2>ウィンドウサイズ</h2><div class=\"text\">システムDBで設定されたウィンドウサイズです。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::WindowSize</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSize (読み取り専用)</div></div>";
		case "CGameObject:DrawBright": return "<h2>シーン描画輝度</h2><div class=\"text\">シーンの描画輝度を示します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::DrawBright</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CRGBColor (読み取り専用)</div></div>";
		case "CGameObject:Wait": return "<h2>ウェイト</h2><div class=\"text\">処理を一時停止します。<br>並列実行するスクリプトでは必ずバックグラウンド処理を継続させて下さい。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::Wait</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [double timeSecond]: ウェイト秒数</li><li>第2引数 [bool enabledMT]: バックグラウンド処理を継続するかどうか（シーン描画を含む）</li><li>第3引数 [bool keyUpBreak]: キー入力によって中断できるようにするかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: キー入力によってウェイトが中断されたかどうか</div></div>";
		case "CGameObject:WaitKey": return "<h2>キーウェイト</h2><div class=\"text\">キー入力があるまで処理を停止します。<br>並列実行するスクリプトでは必ずバックグラウンド処理を継続させて下さい。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::WaitKey</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool enabledMT]: バックグラウンド処理を継続するかどうか（シーン描画を含む）</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:IsAnyKeyDown": return "<h2>キー押下チェック</h2><div class=\"text\">何らかのキーが押されているかどうかをチェックします。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::IsAnyKeyDown</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: 押されている場合はTrue</div></div>";
		case "CGameObject:GetKeyInputCounter": return "<h2>キー継続押下情報を取得</h2><div class=\"text\">指定したキーが押しっぱなしにされている時間をフレーム単位で取得します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::GetKeyInputCounter</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int keyID]: 取得するキー番号</li></ul></div><h3>戻り値</h3><div class=\"text\">int: フレーム単位での押下時間</div></div>";
		case "CGameObject:SetKeyInputCounter": return "<h2>キー継続押下情報を設定</h2><div class=\"text\">指定したキーが押しっぱなしにされているフレーム時間を手動で設定します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SetKeyInputCounter</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int keyID]: 設定するキー番号</li><li>第2引数 [int val]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:PrepareTransition": return "<h2>トランジション準備</h2><div class=\"text\">画面の描画を停止します。<br>内部の動作は継続されます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::PrepareTransition</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:DoTransition": return "<h2>トランジション実行</h2><div class=\"text\">前後の画面を滑らかに移行させます。<br>必ず事前にトランジションの準備を行う必要があります。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::DoTransition</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string blendFileName]: トランジション用のパターン画像ファイル名</li><li>第2引数 [int speed]: 移行速度</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:FadeOut": return "<h2>フェードアウト</h2><div class=\"text\">画面をフェードアウトさせます。<br>フェードインするまではシーン描画が行われなくなります。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::FadeOut</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int speed]: 速度 (１フレーム当たりの増減量)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:FadeIn": return "<h2>フェードイン</h2><div class=\"text\">画面をフェードインさせます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::FadeIn</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int speed]: 速度 (１フレーム当たりの増減量)</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:StartSubScene": return "<h2>サブシーン開始</h2><div class=\"text\">サブシーンへ移行します。<br>タイトルとマップはメインシーンであるため、それ以外のシーンを割り当てます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::StartSubScene</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int sceneID]: シーン番号</li><li>第2引数 [bool keepMainScene]: メインシーンの描画を維持するかどうか</li><li>第3引数 [bool waitMode]: サブシーンが終了するまで処理を停止するかどうか</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:EndSubScene": return "<h2>サブシーン終了</h2><div class=\"text\">メインシーンに処理を戻します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::EndSubScene</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:IsSubScene": return "<h2>サブシーンに移行しているか</h2><div class=\"text\">メインシーンの中でサブシーンが動作している状態かどうかを検証します。<br>メインシーンの描画を維持しない設定でもサブシーンであるときはTrueが返されます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::IsSubScene</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">bool: サブシーンである場合はTrue</div></div>";
		case "CGameObject:ChangeToTitleScene": return "<h2>タイトルシーンに移行</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::ChangeToTitleScene</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:ChangeToMapScene": return "<h2>マップシーンに移行</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::ChangeToMapScene</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:GetCurrentMainSceneID": return "<h2>メインシーンID取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::GetCurrentMainSceneID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: メインシーンID</div></div>";
		case "CGameObject:GetCurrentSubSceneID": return "<h2>サブシーンID取得</h2><div class=\"text\">サブシーンに移行していない場合は -1 が返されます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::GetCurrentSubSceneID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">int: サブシーンID (サブシーンが無効な場合は -1)</div></div>";
		case "CGameObject:CheckCurrentSceneID": return "<h2>シーンID検証</h2><div class=\"text\">指定したシーンが現在アクティブなシーンであるかを検証します。<br>メインシーンを維持しながらサブシーンに移行している場合は、サブシーンでのみ一致します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::CheckCurrentSceneID</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int sceneID]: シーンID</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 現在アクティブなシーンと一致する場合はTrue</div></div>";
		case "CGameObject:DoSceneDraw": return "<h2>シーン描画</h2><div class=\"text\">現在のシーン描画を行います。<br>これにはスプライトの描画等も含まれます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::DoSceneDraw</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:DoSceneInput": return "<h2>シーン入力</h2><div class=\"text\">現在のシーン入力を行います。<br>これには各種キーの継続的な押下状態のチェック等も含まれます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::DoSceneInput</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:SceneMap": return "<h2>マップシーンMGR</h2><div class=\"text\">マップシーンのインスタンスです。<br>現在のシーンがマップシーンでない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SceneMap</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSceneMap (読み取り専用)</div></div>";
		case "CGameObject:SceneTitle": return "<h2>タイトルシーンMGR</h2><div class=\"text\">タイトルシーンのインスタンスです。<br>現在のシーンがタイトルシーンでない場合は無効となります。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SceneTitle</div><h3>オブジェクト種別</h3><div class=\"text\">メンバープロパティ</div><h3>型</h3><div class=\"text\">CSceneTitle (読み取り専用)</div></div>";
		case "CGameObject:GetCurrentSceneName": return "<h2>現在のシーン名を取得</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::GetCurrentSceneName</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: シーン名</div></div>";
		case "CGameObject:SQInclude": return "<h2>外部スクリプト読込</h2><div class=\"text\">グローバル領域にあるコードはそのまま実行されます。<br>機能の読み込みとして使う場合は宣言だけにするか、関数としてまとめて下さい。<br>なお、スクリプトの仕様のため定数や列挙体は取り込めません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SQInclude</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string fileName]: ファイル名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:SQBreakPoint": return "<h2>ブレークポイント</h2><div class=\"text\">次の行からステップ実行を開始させます。<br>これは手動でステップ実行に移るのが難しい箇所のデバッグ用途で使います。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SQBreakPoint</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:SQBreakResume": return "<h2>ステップ実行から復帰</h2><div class=\"text\">スクリプトのステップ実行を終了し、通常のコード実行に戻ります。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SQBreakResume</div><h3>オブジェクト種別</h3><div class=\"text\">メンバー関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:MsgBox": return "<h2>メッセージボックス表示</h2><div class=\"text\">Windows標準のメッセージボックスを表示します。<br>しかし、ゲームには操作性やデザインの面であまり適していません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::MsgBox</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string msg]: メッセージ内容</li><li>第2引数 [string caption]: タイトル</li><li>第3引数 [int iconID]: メッセージボックスのアイコン</li><li>第4引数 [int buttonID]: メッセージボックスのボタン種別</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 押されたボタン</div></div>";
		case "CGameObject:ScanConsole": return "<h2>デバッグコンソール入力受付</h2><div class=\"text\">【デバッグ時のみ】デバッグコンソールからの入力を受け付け、その文字列を返します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::ScanConsole</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: 入力文字列</div></div>";
		case "CGameObject:PrintLog": return "<h2>ログ出力</h2><div class=\"text\">任意の文字列をデバッグコンソールに出力します。<br>出力された文字列は、エラー発生時に書き込まれるログファイルにも含められます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::PrintLog</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string text]: 文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:ApplicationExit": return "<h2>プログラム終了</h2><div class=\"text\">ゲームプログラムをただちに終了させます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::ApplicationExit</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int code = (int)TS::System::ExitCode::Error]: 終了コード</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:StartMeasureProcTime": return "<h2>処理時間の計測開始</h2><div class=\"text\">指定した区間の処理時間を計測するのに使います。<br>計測終了時にその経過時間がコンソールにログ出力されます。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::StartMeasureProcTime</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:ContinueMeasureProcTime": return "<h2>処理時間の計測続行</h2><div class=\"text\">指定した区間の処理時間を計測するのに使います。<br>計測結果を表示してすぐに新たな計測を開始します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::ContinueMeasureProcTime</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string tag]: 表示名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:EndMeasureProcTime": return "<h2>処理時間の計測終了</h2><div class=\"text\">指定した区間の処理時間を計測するのに使います。<br>計測結果を表示します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::EndMeasureProcTime</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string tag]: 表示名</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "CGameObject:WithIn": return "<h2>数値補正</h2><div class=\"text\">与えられた値を最小値～最大値の間に補正します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::WithIn</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int val]: 補正前の値</li><li>第2引数 [int _min]: 最小値</li><li>第3引数 [int _max]: 最大値</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 補正後の値</div></div>";
		case "CGameObject:UpAround": return "<h2>ループ数値加算</h2><div class=\"text\">与えられた値を１足して、最大値に達した場合は最小値に戻して返します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::UpAround</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int val]: 現在の値（次の値ではない）</li><li>第2引数 [int _min]: 最小値</li><li>第3引数 [int _max]: 最大値</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 加算後の値</div></div>";
		case "CGameObject:DownAround": return "<h2>ループ数値減算</h2><div class=\"text\">与えられた値から１引いて、最小値を下回った場合は（最大値－１）に戻して返します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::DownAround</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int val]: 現在の値（次の値ではない）</li><li>第2引数 [int _min]: 最小値</li><li>第3引数 [int _max]: 最大値</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 減算後の値</div></div>";
		case "CGameObject:IntToBool": return "<h2>整数値を論理値へ変換</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::IntToBool</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int value]: 変換前の整数値</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 変換後の論理値</div></div>";
		case "CGameObject:BoolToInt": return "<h2>論理値を整数値へ変換</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::BoolToInt</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [bool value]: 変換前の論理値</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 変換後の整数値</div></div>";
		case "CGameObject:NextRand": return "<h2>ランダム値を取得</h2><div class=\"text\">最小値～最大値の間でランダムな数値を生成します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::NextRand</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int min]: 最小値</li><li>第2引数 [int max]: 最大値</li></ul></div><h3>戻り値</h3><div class=\"text\">int: ランダム値</div></div>";
		case "CGameObject:CutDQ": return "<h2>両端のダブルクォートを削除</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::CutDQ</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string baseString]: 両端にダブルクォートが付いた文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">string: ダブルクォートが削除された文字列</div></div>";
		case "CGameObject:IntToAlphabet": return "<h2>整数値をアルファベットに変換</h2><div class=\"text\">0=A, 1=B, ... の要領で数値をアルファベットに変換します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::IntToAlphabet</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [int value]: 値</li></ul></div><h3>戻り値</h3><div class=\"text\">string: アルファベット１文字</div></div>";
		case "CGameObject:SubString": return "<h2>部分文字列を取得</h2><div class=\"text\">与えられた文字列の一部分を取得します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::SubString</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string src]: 対象文字列</li><li>第2引数 [int start]: 開始インデックス</li><li>第3引数 [int length]: 長さ (-1で末尾までを対象とする)</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 部分文字列</div></div>";
		case "CGameObject:Replace": return "<h2>指定文字列を置換</h2><div class=\"text\">指定した文字列を置換します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::Replace</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string baseString]: 対象文字列</li><li>第2引数 [string before]: 置換対象の文字列</li><li>第3引数 [string after]: 置換後の文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 置換後の文字列</div></div>";
		case "CGameObject:Insert": return "<h2>文字列を挿入</h2><div class=\"text\">与えられた文字列の指定位置に文字列を挿入して返します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::Insert</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string dest]: 対象文字列</li><li>第2引数 [int index]: 挿入位置</li><li>第3引数 [string text]: 挿入する文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">string: 挿入後の文字列</div></div>";
		case "CGameObject:GetStringLength": return "<h2>文字数を取得</h2><div class=\"text\">与えられた文字列の文字数（全角文字を１文字と数える）を取得します。<hr><h3>定義位置</h3><div class=\"text\">CGameObject::GetStringLength</div><h3>オブジェクト種別</h3><div class=\"text\">静的関数</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [string src]: 対象文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">int: 文字数</div></div>";
		case "Game": return "<h2>ゲームMGR</h2><div class=\"text\">ゲームプログラムに関するすべての情報を司るインスタンスです。<hr><h3>定義位置</h3><div class=\"text\">Game</div><h3>オブジェクト種別</h3><div class=\"text\">グローバル変数</div><h3>型</h3><div class=\"text\">CGameObject</div></div>";
		case "DEBUG": return "<h2>デバッグモードかどうか</h2><div class=\"text\">デバッグモードであるかどうかを示す論理値です。<hr><h3>定義位置</h3><div class=\"text\">DEBUG</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "FALSE": return "<h2>OFF/数値</h2><div class=\"text\">論理値の「偽」を整数で表したものです。<hr><h3>定義位置</h3><div class=\"text\">FALSE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "TRUE": return "<h2>ON/数値</h2><div class=\"text\">論理値の「真」を整数で表したものです。<hr><h3>定義位置</h3><div class=\"text\">TRUE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "RED": return "<h2>カラーコード赤</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">RED</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "GREEN": return "<h2>カラーコード緑</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">GREEN</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "BLUE": return "<h2>カラーコード青</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">BLUE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "BLACK": return "<h2>カラーコード黒</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">BLACK</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "WHITE": return "<h2>カラーコード白</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">WHITE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "YELLOW": return "<h2>カラーコード黄</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">YELLOW</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "GREENYELLOW": return "<h2>カラーコード黄緑</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">GREENYELLOW</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "GREENBLUE": return "<h2>カラーコード緑青</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">GREENBLUE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "BLUEGREEN": return "<h2>カラーコード青緑</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">BLUEGREEN</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "GRAY": return "<h2>カラーコード灰</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">GRAY</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DARKGRAY": return "<h2>カラーコード濃灰</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DARKGRAY</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "ORANGE": return "<h2>カラーコード橙</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">ORANGE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "PURPLE": return "<h2>カラーコード紫</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">PURPLE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "PINK": return "<h2>カラーコード桃</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">PINK</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "CYAN": return "<h2>カラーコード薄青</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">CYAN</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "BROWN": return "<h2>カラーコード茶</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">BROWN</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "DARKBLUE": return "<h2>カラーコード濃青</h2><div class=\"text\">特に解説はありません。<hr><h3>定義位置</h3><div class=\"text\">DARKBLUE</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "INT_MAX": return "<h2>整数/最大値</h2><div class=\"text\">スクリプトで表現できる整数値の最大値です。<hr><h3>定義位置</h3><div class=\"text\">INT_MAX</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "INT_MIN": return "<h2>整数/最小値</h2><div class=\"text\">スクリプトで表現できる整数値の最小値です。<hr><h3>定義位置</h3><div class=\"text\">INT_MIN</div><h3>オブジェクト種別</h3><div class=\"text\">定数</div></div>";
		case "EventHandler_NowLoading": return "<h2>リソース読込時の背景処理</h2><div class=\"text\">リソースをバックグラウンドで読み込んでいる間に毎フレーム呼び出されます。<br>False以外を返すと背景処理が継続されます。<hr><h3>関数名</h3><div class=\"text\">EventHandler_NowLoading</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [intGraphHandle]: 背景処理に必要なグラフィック素材のハンドル</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "EventHandler_StartMapTest": return "<h2>マップテスト開始</h2><div class=\"text\">マップテスターが起動したときに呼び出されます。<hr><h3>関数名</h3><div class=\"text\">EventHandler_StartMapTest</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [strMapFileName]: ファイル名</li><li>第2引数 [intX]: X座標</li><li>第3引数 [intY]: Y座標</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "EventHandler_StartBattleTest": return "<h2>バトルテスト開始</h2><div class=\"text\">バトルテスターが起動したときに呼び出されます。<hr><h3>関数名</h3><div class=\"text\">EventHandler_StartBattleTest</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [intUnitID]: ユニットID</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "EventHandler_WipeSprite": return "<h2>拡張ワイプ</h2><div class=\"text\">ワイプ処理を行うときに呼び出されます。<hr><h3>関数名</h3><div class=\"text\">EventHandler_WipeSprite</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [spriteData]: 対象スプライト</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "EventHandler_RequiredSaveHeader": return "<h2>セーブデータのヘッダー定義</h2><div class=\"text\">セーブデータのヘッダーとして用いられる文字列を定義します。<hr><h3>関数名</h3><div class=\"text\">EventHandler_RequiredSaveHeader</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: セーブデータのヘッダー文字列</div></div>";
		case "EventHandler_LoadUserData": return "<h2>セーブデータのユーザー定義部分読込</h2><div class=\"text\">ユーザーが自由に読み書きできるセーブデータ領域部分を操作します。<hr><h3>関数名</h3><div class=\"text\">EventHandler_LoadUserData</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [strSaveData]: 事前に読み込まれたユーザー定義部分の文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "EventHandler_SaveUserData": return "<h2>セーブデータのユーザー定義部分書込</h2><div class=\"text\">ユーザーが自由に読み書きできるセーブデータ領域部分を操作します。<hr><h3>関数名</h3><div class=\"text\">EventHandler_SaveUserData</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">string: 書き込むユーザー定義部分の文字列</div></div>";
		case "EventHandler_ShowMessage": return "<h2>会話メッセージ</h2><div class=\"text\">会話等のセリフを表示します。<hr><h3>関数名</h3><div class=\"text\">EventHandler_ShowMessage</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [intFaceID]: フェイスID</li><li>第2引数 [strSpeaker]: 話者名</li><li>第3引数 [strMsg]: メッセージ内容</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "EventHandler_ChangeMap": return "<h2>マップ移動</h2><div class=\"text\">マップを移動させます。<br>同一マップ内でも移動することができます。<hr><h3>関数名</h3><div class=\"text\">EventHandler_ChangeMap</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [strMapFileName]: ファイル名</li><li>第2引数 [intX]: X座標</li><li>第3引数 [intY]: Y座標</li><li>第4引数 [intDirection4]: 移動後の向き</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "EventHandler_EVMove": return "<h2>拡張イベント移動</h2><div class=\"text\">イベント日常移動/臨時移動で拡張的な処理をする場合に呼び出されます。<hr><h3>関数名</h3><div class=\"text\">EventHandler_EVMove</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [intEVID]: 対象イベントID</li><li>第2引数 [intOption]: オプション値</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 移動が完了したかどうか</div></div>";
		case "EventHandler_DebugCommand": return "<h2>拡張デバッグコマンド</h2><div class=\"text\">デバッグウィンドウで操作できるコマンドで拡張的な処理をする場合に呼び出されます。<hr><h3>関数名</h3><div class=\"text\">EventHandler_DebugCommand</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [strCommandArg]: ユーザーによって入力されたパラメーター文字列</li></ul></div><h3>戻り値</h3><div class=\"text\">bool: 適切に処理されたかどうか</div></div>";
		case "StateStart": return "<h2>間接効果設定時</h2><div class=\"text\">指定した間接効果に罹ったときに追加的な処理をする場合に呼び出されます。<hr><h3>関数名</h3><div class=\"text\">StateStart</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [intStateID]: 間接効果ID</li><li>第2引数 [actorData]: アクター情報</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "StateEnd": return "<h2>間接効果解除時</h2><div class=\"text\">指定した間接効果が解除されたときに追加的な処理をする場合に呼び出されます。<hr><h3>関数名</h3><div class=\"text\">StateEnd</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\"><ul><li>第1引数 [intStateID]: 間接効果ID</li><li>第2引数 [actorData]: アクター情報</li></ul></div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneMainDraw": return "<h2>メインシーン描画</h2><div class=\"text\">特に解説はありません。<hr><h3>関数名</h3><div class=\"text\">SceneMainDraw</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneMainInput": return "<h2>メインシーン入力</h2><div class=\"text\">サブシーンが有効であるときは実行されません。<hr><h3>関数名</h3><div class=\"text\">SceneMainInput</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneMainSetup": return "<h2>メインシーン初期化</h2><div class=\"text\">シーンが始まるときに一度だけ実行されます。<hr><h3>関数名</h3><div class=\"text\">SceneMainSetup</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneMainDispose": return "<h2>メインシーン破棄</h2><div class=\"text\">シーンが破棄されるときに一度だけ実行されます。<hr><h3>関数名</h3><div class=\"text\">SceneMainDispose</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneSubDraw": return "<h2>サブシーン描画</h2><div class=\"text\">メインシーンを維持している場合は、メインシーンの画面を上書きする形で描画します。<hr><h3>関数名</h3><div class=\"text\">SceneSubDraw</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneSubInput": return "<h2>サブシーン入力</h2><div class=\"text\">このメソッドが呼び出されるときは、メインシーンの入力処理は停止しています。<hr><h3>関数名</h3><div class=\"text\">SceneSubInput</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneSubSetup": return "<h2>サブシーン初期化</h2><div class=\"text\">シーンが始まるときに一度だけ実行されます。<hr><h3>関数名</h3><div class=\"text\">SceneSubSetup</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
		case "SceneSubDispose": return "<h2>サブシーン破棄</h2><div class=\"text\">シーンが破棄されるときに一度だけ実行されます。<hr><h3>関数名</h3><div class=\"text\">SceneSubDispose</div><h3>オブジェクト種別</h3><div class=\"text\">スクリプト関数定義/イベントハンドラー</div><h3>引数リスト</h3><div class=\"text\">引数はありません。</div><h3>戻り値</h3><div class=\"text\">void: 戻り値はありません。</div></div>";
	}
}
